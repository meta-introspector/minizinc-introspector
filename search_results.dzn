search_results = [
  { file_path: "crates/constant_analyzer/src/constants.rs", line_number: 10, line_content: "pub fn get_project_root() -> Result<PathBuf, Box<dyn std::error::Error>> {" },
  { file_path: "crates/constant_analyzer/src/main.rs", line_number: 31, line_content: "fn extract_literal_value(lit: &syn::Lit) -> String {" },
  { file_path: "crates/constant_analyzer/src/main.rs", line_number: 44, line_content: "fn clean_name(s: &str) -> String {" },
  { file_path: "crates/constant_analyzer/src/main.rs", line_number: 65, line_content: "fn clean_name(s: &str) -> String {" },
  { file_path: "crates/constant_analyzer/src/main.rs", line_number: 94, line_content: "    fn new(file_path: PathBuf) -> Self {" },
  { file_path: "crates/constant_analyzer/src/main.rs", line_number: 106, line_content: "    fn visit_item_const(&mut self, i: &'ast ItemConst) {" },
  { file_path: "crates/constant_analyzer/src/main.rs", line_number: 120, line_content: "    fn visit_item_static(&mut self, i: &'ast ItemStatic) {" },
  { file_path: "crates/constant_analyzer/src/main.rs", line_number: 134, line_content: "    fn visit_ident(&mut self, i: &'ast Ident) {" },
  { file_path: "crates/constant_analyzer/src/main.rs", line_number: 141, line_content: "fn main() -> Result<(), Box<dyn std::error::Error>> {" },
  { file_path: "crates/minizinc_introspector/src/main.rs", line_number: 4, line_content: "fn main() {" },
  { file_path: "crates/minizinc_introspector/src/main.rs", line_number: 33, line_content: "        \"-fno-signed-char\"," },
  { file_path: "crates/minizinc_introspector/src/main.rs", line_number: 40, line_content: "        \"-Xclang\", \"-fno-pch-reuse\"," },
  { file_path: "crates/zos-bootstrap/src/code_analysis/ast_to_numerical_vector_converter.rs", line_number: 23, line_content: "    pub fn to_vocabulary_string(&self) -> String {" },
  { file_path: "crates/zos-bootstrap/src/code_analysis/ast_to_numerical_vector_converter.rs", line_number: 27, line_content: "            AstElement::Function(s) => format!(\"fn_{}\", s)," },
  { file_path: "crates/zos-bootstrap/src/code_analysis/ast_to_numerical_vector_converter.rs", line_number: 28, line_content: "            AstElement::FunctionArg(s) => format!(\"fn_arg_{}\", s)," },
  { file_path: "crates/zos-bootstrap/src/code_analysis/ast_to_numerical_vector_converter.rs", line_number: 29, line_content: "            AstElement::FunctionArgType(s) => format!(\"fn_arg_type_{}\", s)," },
  { file_path: "crates/zos-bootstrap/src/code_analysis/ast_to_numerical_vector_converter.rs", line_number: 54, line_content: "    pub fn new(crate_name: String) -> Self {" },
  { file_path: "crates/zos-bootstrap/src/code_analysis/ast_to_numerical_vector_converter.rs", line_number: 63, line_content: "    fn add_element(&mut self, element: AstElement) {" },
  { file_path: "crates/zos-bootstrap/src/code_analysis/ast_to_numerical_vector_converter.rs", line_number: 73, line_content: "    fn extract_literal_value(lit: &Lit) -> String {" },
  { file_path: "crates/zos-bootstrap/src/code_analysis/ast_to_numerical_vector_converter.rs", line_number: 88, line_content: "    fn visit_file(&mut self, i: &'ast File) {" },
  { file_path: "crates/zos-bootstrap/src/code_analysis/ast_to_numerical_vector_converter.rs", line_number: 93, line_content: "    fn visit_item(&mut self, i: &'ast Item) {" },
  { file_path: "crates/zos-bootstrap/src/code_analysis/ast_to_numerical_vector_converter.rs", line_number: 101, line_content: "            Item::Fn(item_fn) => {" },
  { file_path: "crates/zos-bootstrap/src/code_analysis/ast_to_numerical_vector_converter.rs", line_number: 103, line_content: "                self.current_function_name = Some(item_fn.sig.ident.to_string());" },
  { file_path: "crates/zos-bootstrap/src/code_analysis/ast_to_numerical_vector_converter.rs", line_number: 104, line_content: "                self.add_element(AstElement::Function(item_fn.sig.ident.to_string()));" },
  { file_path: "crates/zos-bootstrap/src/code_analysis/ast_to_numerical_vector_converter.rs", line_number: 107, line_content: "                for input in &item_fn.sig.inputs {" },
  { file_path: "crates/zos-bootstrap/src/code_analysis/ast_to_numerical_vector_converter.rs", line_number: 124, line_content: "                visit::visit_item_fn(self, item_fn);" },
  { file_path: "crates/zos-bootstrap/src/code_analysis/ast_to_numerical_vector_converter.rs", line_number: 153, line_content: "    fn visit_expr(&mut self, i: &'ast Expr) {" },
  { file_path: "crates/zos-bootstrap/src/code_analysis/ast_to_numerical_vector_converter.rs", line_number: 160, line_content: "    fn visit_ident(&mut self, i: &'ast Ident) {" },
  { file_path: "crates/zos-bootstrap/src/code_analysis/ast_to_numerical_vector_converter.rs", line_number: 168, line_content: "pub fn convert_ast_to_numerical_vectors(file: &File, crate_name: String) -> Vec<AstNumericalVector> {" },
  { file_path: "crates/zos-bootstrap/src/code_analysis/constant_analyzer.rs", line_number: 12, line_content: "    pub fn new() -> Result<Self> {" },
  { file_path: "crates/zos-bootstrap/src/code_analysis/constant_analyzer.rs", line_number: 31, line_content: "    fn extract_constant_names(file_path: &Path, constants: &mut Vec<String>) -> Result<()> {" },
  { file_path: "crates/zos-bootstrap/src/code_analysis/constant_analyzer.rs", line_number: 43, line_content: "    pub fn analyze(&mut self, search_dir: &Path) -> Result<()> {" },
  { file_path: "crates/zos-bootstrap/src/code_analysis/constant_analyzer.rs", line_number: 57, line_content: "    fn find_constant_usages(&mut self, file: &syn::File) {" },
  { file_path: "crates/zos-bootstrap/src/code_analysis/constant_analyzer.rs", line_number: 60, line_content: "                Item::Fn(item_fn) => {" },
  { file_path: "crates/zos-bootstrap/src/code_analysis/constant_analyzer.rs", line_number: 61, line_content: "                    for stmt in &item_fn.block.stmts {" },
  { file_path: "crates/zos-bootstrap/src/code_analysis/constant_analyzer.rs", line_number: 81, line_content: "    fn find_paths_in_stmt(&mut self, stmt: &Stmt) {" },
  { file_path: "crates/zos-bootstrap/src/code_analysis/constant_analyzer.rs", line_number: 97, line_content: "    fn find_paths_in_expr(&mut self, expr: &Expr) {" },
  { file_path: "crates/zos-bootstrap/src/code_analysis/constant_analyzer.rs", line_number: 139, line_content: "    fn check_path(&mut self, path: &syn::Path) {" },
  { file_path: "crates/zos-bootstrap/src/code_analysis/constant_analyzer.rs", line_number: 152, line_content: "    pub fn report(&self) {" },
  { file_path: "crates/zos-bootstrap/src/code_analysis/constant_usage_proof.rs", line_number: 16, line_content: "    fn visit_path(&mut self, path: &'ast syn::Path) {" },
  { file_path: "crates/zos-bootstrap/src/code_analysis/constant_usage_proof.rs", line_number: 28, line_content: "pub fn prove_constants_usage_command(project_root: &PathBuf) -> Result<()> {" },
  { file_path: "crates/zos-bootstrap/src/code_analysis/minizinc_param_generator.rs", line_number: 6, line_content: "pub fn generate_minizinc_data_file(extracted_strings: Vec<ExtractedString>, output_path: &PathBuf) -> Result<()> {" },
  { file_path: "crates/zos-bootstrap/src/code_analysis/minizinc_param_generator.rs", line_number: 30, line_content: "pub fn generate_minizinc_selection_model(output_path: &PathBuf) -> Result<()> {" },
  { file_path: "crates/zos-bootstrap/src/code_analysis/numerical_vector_generator.rs", line_number: 19, line_content: "fn get_next_prime(n: u64) -> u64 {" },
  { file_path: "crates/zos-bootstrap/src/code_analysis/numerical_vector_generator.rs", line_number: 29, line_content: "fn is_prime(n: u64) -> bool {" },
  { file_path: "crates/zos-bootstrap/src/code_analysis/numerical_vector_generator.rs", line_number: 41, line_content: "pub fn get_prime_for_vocabulary(vocab_item: &str) -> u64 {" },
  { file_path: "crates/zos-bootstrap/src/code_analysis/numerical_vector_generator.rs", line_number: 54, line_content: "pub fn compose_numerical_vector(primes: &[u64]) -> u128 {" },
  { file_path: "crates/zos-bootstrap/src/code_analysis/numerical_vector_generator.rs", line_number: 75, line_content: "    fn reset_prime_map() {" },
  { file_path: "crates/zos-bootstrap/src/code_analysis/numerical_vector_generator.rs", line_number: 85, line_content: "    fn test_get_prime_for_vocabulary_initial_map() {" },
  { file_path: "crates/zos-bootstrap/src/code_analysis/numerical_vector_generator.rs", line_number: 94, line_content: "    fn test_get_prime_for_vocabulary_new_terms() {" },
  { file_path: "crates/zos-bootstrap/src/code_analysis/numerical_vector_generator.rs", line_number: 103, line_content: "    fn test_get_prime_for_vocabulary_consistency() {" },
  { file_path: "crates/zos-bootstrap/src/code_analysis/numerical_vector_generator.rs", line_number: 112, line_content: "    fn test_compose_numerical_vector_basic() {" },
  { file_path: "crates/zos-bootstrap/src/code_analysis/numerical_vector_generator.rs", line_number: 118, line_content: "    fn test_compose_numerical_vector_empty() {" },
  { file_path: "crates/zos-bootstrap/src/code_analysis/numerical_vector_generator.rs", line_number: 123, line_content: "    fn test_compose_numerical_vector_single_prime() {" },
  { file_path: "crates/zos-bootstrap/src/code_analysis/numerical_vector_generator.rs", line_number: 133, line_content: "    fn reset_prime_map() {" },
  { file_path: "crates/zos-bootstrap/src/code_analysis/numerical_vector_generator.rs", line_number: 144, line_content: "    fn step1_test_01_get_prime_for_vocabulary_initial_map() {" },
  { file_path: "crates/zos-bootstrap/src/code_analysis/numerical_vector_generator.rs", line_number: 155, line_content: "    fn step1_test_02_get_prime_for_vocabulary_new_terms() {" },
  { file_path: "crates/zos-bootstrap/src/code_analysis/numerical_vector_generator.rs", line_number: 166, line_content: "    fn step1_test_03_get_prime_for_vocabulary_consistency() {" },
  { file_path: "crates/zos-bootstrap/src/code_analysis/numerical_vector_generator.rs", line_number: 178, line_content: "    fn step2_test_01_compose_numerical_vector_basic() {" },
  { file_path: "crates/zos-bootstrap/src/code_analysis/numerical_vector_generator.rs", line_number: 186, line_content: "    fn step2_test_02_compose_numerical_vector_empty() {" },
  { file_path: "crates/zos-bootstrap/src/code_analysis/numerical_vector_generator.rs", line_number: 193, line_content: "    fn step2_test_03_compose_numerical_vector_single_prime() {" },
  { file_path: "crates/zos-bootstrap/src/code_analysis/numerical_vector_generator.rs", line_number: 201, line_content: "    fn step3_test_01_compose_numerical_vector_overflow() {" },
  { file_path: "crates/zos-bootstrap/src/code_analysis/numerical_vector_generator.rs", line_number: 256, line_content: "    fn step4_test_01_prime_generation_sequence() {" },
  { file_path: "crates/zos-bootstrap/src/code_analysis/numerical_vector_generator.rs", line_number: 267, line_content: "    fn step4_test_02_prime_generation_from_zero() {" },
  { file_path: "crates/zos-bootstrap/src/code_analysis/numerical_vector_generator.rs", line_number: 275, line_content: "    fn step4_test_03_prime_generation_large_number() {" },
  { file_path: "crates/zos-bootstrap/src/code_analysis/numerical_vector_generator.rs", line_number: 285, line_content: "    fn test_prime_generation_sequence() {" },
  { file_path: "crates/zos-bootstrap/src/code_analysis/numerical_vector_generator.rs", line_number: 294, line_content: "    fn test_prime_generation_from_zero() {" },
  { file_path: "crates/zos-bootstrap/src/code_analysis/numerical_vector_generator.rs", line_number: 300, line_content: "    fn test_prime_generation_large_number() {" },
  { file_path: "crates/zos-bootstrap/src/code_analysis/numerical_vector_to_llm_instructions.rs", line_number: 16, line_content: "pub fn interpret_numerical_vector(numerical_vector: i32) -> Vec<String> {" },
  { file_path: "crates/zos-bootstrap/src/code_analysis/numerical_vector_to_llm_instructions.rs", line_number: 41, line_content: "pub fn generate_llm_instructions(interpreted_concepts: Vec<String>) -> String {" },
  { file_path: "crates/zos-bootstrap/src/code_analysis/string_extractor.rs", line_number: 23, line_content: "    pub fn new(crate_name: String) -> Self {" },
  { file_path: "crates/zos-bootstrap/src/code_analysis/string_extractor.rs", line_number: 34, line_content: "    fn visit_item(&mut self, i: &'ast Item) {" },
  { file_path: "crates/zos-bootstrap/src/code_analysis/string_extractor.rs", line_number: 41, line_content: "            Item::Fn(item_fn) => {" },
  { file_path: "crates/zos-bootstrap/src/code_analysis/string_extractor.rs", line_number: 43, line_content: "                self.current_function_name = Some(item_fn.sig.ident.to_string());" },
  { file_path: "crates/zos-bootstrap/src/code_analysis/string_extractor.rs", line_number: 44, line_content: "                visit::visit_item_fn(self, item_fn);" },
  { file_path: "crates/zos-bootstrap/src/code_analysis/string_extractor.rs", line_number: 81, line_content: "    fn visit_expr(&mut self, i: &'ast syn::Expr) {" },
  { file_path: "crates/zos-bootstrap/src/code_analysis/string_extractor.rs", line_number: 100, line_content: "    fn visit_fn_arg(&mut self, i: &'ast FnArg) {" },
  { file_path: "crates/zos-bootstrap/src/code_analysis/string_extractor.rs", line_number: 117, line_content: "        visit::visit_fn_arg(self, i);" },
  { file_path: "crates/zos-bootstrap/src/code_analysis/string_extractor.rs", line_number: 120, line_content: "    fn visit_impl_item(&mut self, i: &'ast ImplItem) {" },
  { file_path: "crates/zos-bootstrap/src/code_analysis/string_extractor.rs", line_number: 121, line_content: "        if let ImplItem::Fn(impl_item_fn) = i {" },
  { file_path: "crates/zos-bootstrap/src/code_analysis/string_extractor.rs", line_number: 123, line_content: "            self.current_function_name = Some(impl_item_fn.sig.ident.to_string());" },
  { file_path: "crates/zos-bootstrap/src/code_analysis/string_extractor.rs", line_number: 124, line_content: "            visit::visit_impl_item_fn(self, impl_item_fn);" },
  { file_path: "crates/zos-bootstrap/src/code_analysis/string_extractor.rs", line_number: 132, line_content: "pub fn extract_strings_from_file(file_path: &Path, crate_name: String) -> Result<Vec<ExtractedString>, Box<dyn std::error::Error>> {" },
  { file_path: "crates/zos-bootstrap/src/commands/ast_to_minizinc.rs", line_number: 23, line_content: "pub fn handle_ast_to_minizinc_command(args: AstToMiniZincArgs) -> Result<()> {" },
  { file_path: "crates/zos-bootstrap/src/commands/ast_to_minizinc.rs", line_number: 177, line_content: "fn parse_minizinc_output(output_str: &str) -> Result<MiniZincAnalysisResults> {" },
  { file_path: "crates/zos-bootstrap/src/commands/build/ensure_build_directory_exists.rs", line_number: 6, line_content: "pub fn ensure_build_directory_exists(build_dir: &Path) -> Result<()> {" },
  { file_path: "crates/zos-bootstrap/src/commands/build/run_cmake_for_ffi.rs", line_number: 5, line_content: "pub fn run_cmake_for_ffi(project_root: &Path, build_dir: &Path) -> Result<()> {" },
  { file_path: "crates/zos-bootstrap/src/commands/build/run_make_for_ffi.rs", line_number: 6, line_content: "pub fn run_make_for_ffi(build_dir: &Path, strace_enabled: bool) -> Result<()> {" },
  { file_path: "crates/zos-bootstrap/src/commands/build/verify_ffi_library_exists.rs", line_number: 5, line_content: "pub fn verify_ffi_library_exists(build_dir: &Path) -> Result<()> {" },
  { file_path: "crates/zos-bootstrap/src/commands/build.rs", line_number: 36, line_content: "pub fn handle_build_command(args: BuildArgs) -> Result<()> {" },
  { file_path: "crates/zos-bootstrap/src/commands/build.rs", line_number: 76, line_content: "fn build_gecode() -> Result<()> {" },
  { file_path: "crates/zos-bootstrap/src/commands/build.rs", line_number: 102, line_content: "fn build_libminizinc() -> Result<()> {" },
  { file_path: "crates/zos-bootstrap/src/commands/build.rs", line_number: 132, line_content: "fn build_ffi_wrapper(strace_enabled: bool) -> Result<()> {" },
  { file_path: "crates/zos-bootstrap/src/commands/build.rs", line_number: 152, line_content: "fn build_rust_ffi_crate() -> Result<()> {" },
  { file_path: "crates/zos-bootstrap/src/commands/build.rs", line_number: 161, line_content: "fn build_ffi_declarations() -> Result<()> {" },
  { file_path: "crates/zos-bootstrap/src/commands/build.rs", line_number: 170, line_content: "fn build_solvers() -> Result<()> {" },
  { file_path: "crates/zos-bootstrap/src/commands/build.rs", line_number: 179, line_content: "fn build_coverage() -> Result<()> {" },
  { file_path: "crates/zos-bootstrap/src/commands/clean.rs", line_number: 25, line_content: "pub fn handle_clean_command(args: CleanArgs) -> Result<()> {" },
  { file_path: "crates/zos-bootstrap/src/commands/clean.rs", line_number: 50, line_content: "fn clean_build_dir() -> Result<()> {" },
  { file_path: "crates/zos-bootstrap/src/commands/clean.rs", line_number: 60, line_content: "fn clean_coverage_dir() -> Result<()> {" },
  { file_path: "crates/zos-bootstrap/src/commands/clean.rs", line_number: 70, line_content: "fn clean_proof_tapes() -> Result<()> {" },
  { file_path: "crates/zos-bootstrap/src/commands/code_search.rs", line_number: 21, line_content: "pub fn handle_code_search_command(args: CodeSearchArgs) -> Result<()> {" },
  { file_path: "crates/zos-bootstrap/src/commands/debug.rs", line_number: 22, line_content: "pub fn handle_debug_command(args: DebugArgs) -> Result<()> {" },
  { file_path: "crates/zos-bootstrap/src/commands/debug.rs", line_number: 40, line_content: "fn reproduce_crash() -> Result<()> {" },
  { file_path: "crates/zos-bootstrap/src/commands/debug.rs", line_number: 61, line_content: "fn reproduce_ffi_bug() -> Result<()> {" },
  { file_path: "crates/zos-bootstrap/src/commands/debug.rs", line_number: 81, line_content: "fn run_v7_debug_tests() -> Result<()> {" },
  { file_path: "crates/zos-bootstrap/src/commands/extract_constants.rs", line_number: 22, line_content: "pub fn handle_extract_constants_command(args: ExtractConstantsArgs) -> Result<()> {" },
  { file_path: "crates/zos-bootstrap/src/commands/extract_constants.rs", line_number: 118, line_content: "fn to_upper_snake_case(s: &str) -> String {" },
  { file_path: "crates/zos-bootstrap/src/commands/extract_constants.rs", line_number: 158, line_content: "fn escape_for_sed(s: &str) -> String {" },
  { file_path: "crates/zos-bootstrap/src/commands/generate_constants_file.rs", line_number: 16, line_content: "pub fn handle_generate_constants_file_command(args: GenerateConstantsFileArgs) -> Result<()> {" },
  { file_path: "crates/zos-bootstrap/src/commands/generate_constants_file.rs", line_number: 121, line_content: "fn to_upper_snake_case(s: &str) -> String {" },
  { file_path: "crates/zos-bootstrap/src/commands/generate_minizinc_params.rs", line_number: 18, line_content: "pub fn handle_generate_params_command(args: GenerateParamsArgs) -> Result<()> {" },
  { file_path: "crates/zos-bootstrap/src/commands/run/run_embedding_model.rs", line_number: 10, line_content: "pub fn run_embedding_model(" },
  { file_path: "crates/zos-bootstrap/src/commands/run/run_minimal_mzn.rs", line_number: 5, line_content: "pub fn run_minimal_mzn(" },
  { file_path: "crates/zos-bootstrap/src/commands/run/run_test_driver.rs", line_number: 5, line_content: "pub fn run_test_driver(num_vec: u32, base_size: u32) -> Result<()> {" },
  { file_path: "crates/zos-bootstrap/src/commands/run.rs", line_number: 53, line_content: "pub fn handle_run_command(args: RunArgs) -> Result<()> {" },
  { file_path: "crates/zos-bootstrap/src/commands/run_embedding_v6.rs", line_number: 8, line_content: "pub fn run_embedding_v6(" },
  { file_path: "crates/zos-bootstrap/src/commands/test/test_coverage.rs", line_number: 3, line_content: "pub fn test_coverage() -> Result<()> {" },
  { file_path: "crates/zos-bootstrap/src/commands/test/test_dzn_gen_rust.rs", line_number: 3, line_content: "pub fn test_dzn_gen_rust(num_vec: u32) -> Result<()> {" },
  { file_path: "crates/zos-bootstrap/src/commands/test/test_dzn_generation.rs", line_number: 3, line_content: "pub fn test_dzn_generation(num_vec: u32, base_size: u32) -> Result<()> {" },
  { file_path: "crates/zos-bootstrap/src/commands/test/test_minizinc_models.rs", line_number: 3, line_content: "pub fn test_minizinc_models() -> Result<()> {" },
  { file_path: "crates/zos-bootstrap/src/commands/test/test_rust_ffi.rs", line_number: 5, line_content: "pub fn test_rust_ffi() -> Result<()> {" },
  { file_path: "crates/zos-bootstrap/src/commands/test.rs", line_number: 48, line_content: "pub fn handle_test_command(args: TestArgs) -> Result<()> {" },
  { file_path: "crates/zos-bootstrap/src/commands/test.rs", line_number: 89, line_content: "fn test_c_abi() -> Result<()> {" },
  { file_path: "crates/zos-bootstrap/src/main.rs", line_number: 18, line_content: "fn handle_analyze_constants_command() -> Result<()> {" },
  { file_path: "crates/zos-bootstrap/src/main.rs", line_number: 35, line_content: "fn main() -> Result<()> {" },
  { file_path: "crates/zos-bootstrap/src/utils/error.rs", line_number: 36, line_content: "    fn from(err: glob::PatternError) -> Self {" },
  { file_path: "crates/zos-bootstrap/src/utils/error.rs", line_number: 42, line_content: "    fn from(err: std::path::StripPrefixError) -> Self {" },
  { file_path: "crates/zos-bootstrap/src/utils/error.rs", line_number: 48, line_content: "    fn from(err: std::str::Utf8Error) -> Self {" },
  { file_path: "crates/zos-bootstrap/src/utils/error.rs", line_number: 54, line_content: "    fn from(err: syn::Error) -> Self {" },
  { file_path: "crates/zos-bootstrap/src/utils/error.rs", line_number: 60, line_content: "    fn from(err: walkdir::Error) -> Self {" },
  { file_path: "crates/zos-bootstrap/src/utils/paths.rs", line_number: 4, line_content: "pub fn resolve_project_root() -> Result<PathBuf> {" },
  { file_path: "crates/zos-bootstrap/src/utils/paths.rs", line_number: 12, line_content: "pub fn get_build_dir() -> Result<PathBuf> {" },
  { file_path: "crates/zos-bootstrap/src/utils/paths.rs", line_number: 17, line_content: "pub fn get_gecode_build_dir() -> Result<PathBuf> {" },
  { file_path: "crates/zos-bootstrap/src/utils/paths.rs", line_number: 22, line_content: "pub fn get_gecode_vendor_dir() -> Result<PathBuf> {" },
  { file_path: "crates/zos-bootstrap/src/utils/paths.rs", line_number: 27, line_content: "pub fn get_minizinc_models_dir() -> Result<PathBuf> {" },
  { file_path: "crates/zos-bootstrap/src/utils/paths.rs", line_number: 32, line_content: "pub fn get_minizinc_data_dir() -> Result<PathBuf> {" },
  { file_path: "crates/zos-bootstrap/src/utils/paths.rs", line_number: 37, line_content: "pub fn get_minizinc_c_wrapper_dir() -> Result<PathBuf> {" },
  { file_path: "crates/zos-bootstrap/src/utils/paths.rs", line_number: 42, line_content: "pub fn get_minizinc_ffi_crate_dir() -> Result<PathBuf> {" },
  { file_path: "crates/zos-bootstrap/src/utils/paths.rs", line_number: 47, line_content: "pub fn get_proof_tapes_dir() -> Result<PathBuf> {" },
  { file_path: "crates/zos-bootstrap/src/utils/paths.rs", line_number: 52, line_content: "pub fn get_minizinc_user_solvers_dir() -> Result<PathBuf> {" },
  { file_path: "crates/zos-bootstrap/src/utils/subprocess.rs", line_number: 5, line_content: "pub fn run_command(cmd: &str, args: &[&str]) -> Result<Output> {" },
  { file_path: "crates/zos-bootstrap/src/utils/subprocess.rs", line_number: 22, line_content: "pub fn run_command_with_env(cmd: &str, args: &[&str], env_vars: &[(&str, &str)]) -> Result<Output> {" },
  { file_path: "crates/zos-bootstrap/src/utils/subprocess.rs", line_number: 42, line_content: "pub fn run_command_in_dir(cmd: &str, args: &[&str], dir: &Path) -> Result<Output> {" },
  { file_path: "crates/zos-bootstrap/tests/path_utils_test.rs", line_number: 6, line_content: "fn test_get_minizinc_models_dir() -> Result<(), ZosError> {" },
  { file_path: "crates/zos-bootstrap/tests/path_utils_test.rs", line_number: 14, line_content: "fn test_get_minizinc_data_dir() -> Result<(), ZosError> {" },
  { file_path: "crates/zos-bootstrap/tests/path_utils_test.rs", line_number: 22, line_content: "fn test_get_minizinc_user_solvers_dir() -> Result<(), ZosError> {" },
  { file_path: "docs/extracted_content/tools/minizinc_ffi/build.rs", line_number: 6, line_content: "fn main() {" },
  { file_path: "docs/extracted_content/tools/minizinc_model_generator_rs/minizinc_model_generator_rs/src/main.rs", line_number: 5, line_content: "fn main() -> io::Result<()> {" },
  { file_path: "test_code.rs", line_number: 1, line_content: "fn my_example_function(input_param: i32, another_param: &str) -> bool {" },
  { file_path: "tools/coverage_extractor/src/main.rs", line_number: 29, line_content: "fn main() -> Result<(), Box<dyn std::error::Error>> {" },
  { file_path: "tools/minizinc_data_generator_rs/minizinc_data_generator_rs/src/main.rs", line_number: 3, line_content: "fn main() {" },
  { file_path: "tools/minizinc_data_generator_rs/src/main.rs", line_number: 3, line_content: "fn main() {" },
  { file_path: "tools/minizinc_ffi/build.rs", line_number: 1, line_content: "fn main() {" },
  { file_path: "tools/minizinc_ffi/src/array_lit.rs", line_number: 5, line_content: "    pub fn size(&self) -> u32 {" },
  { file_path: "tools/minizinc_ffi/src/array_lit.rs", line_number: 9, line_content: "    pub fn get_element_at_index(&self, index: u32) -> Option<MiniZincExpression> {" },
  { file_path: "tools/minizinc_ffi/src/base_type.rs", line_number: 15, line_content: "    fn from(id: i32) -> Self {" },
  { file_path: "tools/minizinc_ffi/src/bool_lit.rs", line_number: 5, line_content: "    pub fn value(&self) -> bool {" },
  { file_path: "tools/minizinc_ffi/src/coverage_report.rs", line_number: 4, line_content: "pub fn generate_cpp_coverage_report() -> Result<(), String> {" },
  { file_path: "tools/minizinc_ffi/src/environment/impl_drop.rs", line_number: 4, line_content: "    fn drop(&mut self) {" },
  { file_path: "tools/minizinc_ffi/src/environment/impl_get_executable_path.rs", line_number: 5, line_content: "    pub fn get_executable_path(&self) -> String {" },
  { file_path: "tools/minizinc_ffi/src/environment/impl_get_mznlib_dir.rs", line_number: 5, line_content: "    pub fn get_mznlib_dir(&self) -> String {" },
  { file_path: "tools/minizinc_ffi/src/environment/impl_get_solution_value_int.rs", line_number: 6, line_content: "    pub fn get_solution_value_int(&self, var_name: &str) -> i32 {" },
  { file_path: "tools/minizinc_ffi/src/environment/impl_get_solver_instance.rs", line_number: 5, line_content: "    pub fn get_solver_instance(&self) -> *mut std::os::raw::c_void {" },
  { file_path: "tools/minizinc_ffi/src/environment/impl_get_version_string.rs", line_number: 5, line_content: "    pub fn get_version_string(&self) -> String {" },
  { file_path: "tools/minizinc_ffi/src/environment/impl_new.rs", line_number: 5, line_content: "    pub fn new() -> Result<Self, String> {" },
  { file_path: "tools/minizinc_ffi/src/environment/impl_parse_data.rs", line_number: 6, line_content: "    pub fn parse_data(&self, model: &MiniZincModel, data_code: &str, filename: &str) -> Result<(), String> {" },
  { file_path: "tools/minizinc_ffi/src/environment/impl_parse_model.rs", line_number: 6, line_content: "    pub fn parse_model(&self, model_code: &str, filename: &str) -> Result<MiniZincModel, String> {" },
  { file_path: "tools/minizinc_ffi/src/environment/impl_parse_string.rs", line_number: 6, line_content: "    pub fn parse_string(&self, model_code: &str) -> Result<MiniZincModel, String> {" },
  { file_path: "tools/minizinc_ffi/src/environment/impl_solver_instance_next.rs", line_number: 5, line_content: "    pub fn solver_instance_next(&self, solver_instance_ptr: *mut std::os::raw::c_void) -> i32 {" },
  { file_path: "tools/minizinc_ffi/src/environment/impl_solver_instance_print_solution.rs", line_number: 5, line_content: "    pub fn solver_instance_print_solution(&self, solver_instance_ptr: *mut std::os::raw::c_void) {" },
  { file_path: "tools/minizinc_ffi/src/expression.rs", line_number: 11, line_content: "    pub fn expression_id(&self) -> MiniZincExpressionId {" },
  { file_path: "tools/minizinc_ffi/src/expression.rs", line_number: 16, line_content: "    pub fn is_intlit(&self) -> bool {" },
  { file_path: "tools/minizinc_ffi/src/expression.rs", line_number: 20, line_content: "    pub fn is_floatlit(&self) -> bool {" },
  { file_path: "tools/minizinc_ffi/src/expression.rs", line_number: 24, line_content: "    pub fn as_floatlit(&self) -> Option<MiniZincFloatLit> {" },
  { file_path: "tools/minizinc_ffi/src/expression.rs", line_number: 33, line_content: "    pub fn is_setlit(&self) -> bool {" },
  { file_path: "tools/minizinc_ffi/src/expression.rs", line_number: 37, line_content: "    pub fn as_setlit(&self) -> Option<MiniZincSetLit> {" },
  { file_path: "tools/minizinc_ffi/src/expression.rs", line_number: 46, line_content: "    pub fn is_boollit(&self) -> bool {" },
  { file_path: "tools/minizinc_ffi/src/expression.rs", line_number: 50, line_content: "    pub fn as_boollit(&self) -> Option<MiniZincBoolLit> {" },
  { file_path: "tools/minizinc_ffi/src/expression.rs", line_number: 59, line_content: "    pub fn is_stringlit(&self) -> bool {" },
  { file_path: "tools/minizinc_ffi/src/expression.rs", line_number: 63, line_content: "    pub fn as_stringlit(&self) -> Option<MiniZincStringLit> {" },
  { file_path: "tools/minizinc_ffi/src/expression.rs", line_number: 72, line_content: "    pub fn is_id(&self) -> bool {" },
  { file_path: "tools/minizinc_ffi/src/expression.rs", line_number: 76, line_content: "    pub fn as_id(&self) -> Option<MiniZincId> {" },
  { file_path: "tools/minizinc_ffi/src/expression.rs", line_number: 85, line_content: "    pub fn is_anon_var(&self) -> bool {" },
  { file_path: "tools/minizinc_ffi/src/expression.rs", line_number: 89, line_content: "    pub fn as_anon_var(&self) -> Option<MiniZincAnonVar> {" },
  { file_path: "tools/minizinc_ffi/src/expression.rs", line_number: 98, line_content: "    pub fn is_arraylit(&self) -> bool {" },
  { file_path: "tools/minizinc_ffi/src/expression.rs", line_number: 102, line_content: "    pub fn as_arraylit(&self) -> Option<MiniZincArrayLit> {" },
  { file_path: "tools/minizinc_ffi/src/expression_id.rs", line_number: 26, line_content: "    fn from(id: i32) -> Self {" },
  { file_path: "tools/minizinc_ffi/src/feature_tests/test_basic_int_var.rs", line_number: 6, line_content: "fn test_basic_int_var() {" },
  { file_path: "tools/minizinc_ffi/src/feature_tests/test_empty_model.rs", line_number: 5, line_content: "fn test_empty_model() {" },
  { file_path: "tools/minizinc_ffi/src/feature_tests/test_output_statement.rs", line_number: 5, line_content: "fn test_output_statement() {" },
  { file_path: "tools/minizinc_ffi/src/ffi_bindings.rs", line_number: 7, line_content: "    pub fn minizinc_env_new() -> *mut MznSolver;" },
  { file_path: "tools/minizinc_ffi/src/ffi_bindings.rs", line_number: 10, line_content: "    pub fn minizinc_env_free(env: *mut MznSolver);" },
  { file_path: "tools/minizinc_ffi/src/ffi_bindings.rs", line_number: 13, line_content: "    pub fn minizinc_parse_model(env: *mut MznSolver, model_str: *const c_char, filename: *const c_char) -> *mut std::os::raw::c_void;" },
  { file_path: "tools/minizinc_ffi/src/ffi_bindings.rs", line_number: 16, line_content: "    pub fn minizinc_parse_model_with_flags(env: *mut MznSolver, model_str: *const c_char, filename: *const c_char, is_model_string: bool) -> *mut std::os::raw::c_void;" },
  { file_path: "tools/minizinc_ffi/src/ffi_bindings.rs", line_number: 19, line_content: "    pub fn minizinc_parse_string_only(env: *mut MznSolver, model_str: *const c_char) -> *mut std::os::raw::c_void;" },
  { file_path: "tools/minizinc_ffi/src/ffi_bindings.rs", line_number: 22, line_content: "    pub fn minizinc_parse_data_from_string(env: *mut MznSolver, model: *mut std::os::raw::c_void, data_str: *const c_char, filename: *const c_char) -> std::os::raw::c_int;" },
  { file_path: "tools/minizinc_ffi/src/ffi_bindings.rs", line_number: 25, line_content: "    pub fn minizinc_model_free(model: *mut std::os::raw::c_void);" },
  { file_path: "tools/minizinc_ffi/src/ffi_bindings.rs", line_number: 28, line_content: "    pub fn minizinc_get_version_string() -> *const c_char;" },
  { file_path: "tools/minizinc_ffi/src/ffi_bindings.rs", line_number: 31, line_content: "    pub fn model_get_filename(model_ptr: *mut std::os::raw::c_void) -> *const c_char;" },
  { file_path: "tools/minizinc_ffi/src/ffi_bindings.rs", line_number: 32, line_content: "    pub fn model_get_filepath(model_ptr: *mut std::os::raw::c_void) -> *mut c_char;" },
  { file_path: "tools/minizinc_ffi/src/ffi_bindings.rs", line_number: 33, line_content: "    pub fn minizinc_string_free(s: *mut c_char);" },
  { file_path: "tools/minizinc_ffi/src/ffi_bindings.rs", line_number: 34, line_content: "    pub fn model_get_num_items(model_ptr: *mut std::os::raw::c_void) -> u32;" },
  { file_path: "tools/minizinc_ffi/src/ffi_bindings.rs", line_number: 35, line_content: "    pub fn model_get_item_at_index(model_ptr: *mut std::os::raw::c_void, index: u32) -> *mut MiniZincItem;" },
  { file_path: "tools/minizinc_ffi/src/ffi_bindings.rs", line_number: 38, line_content: "    pub fn minizinc_model_get_doc_comment(model_ptr: *mut std::os::raw::c_void) -> *const c_char;" },
  { file_path: "tools/minizinc_ffi/src/ffi_bindings.rs", line_number: 41, line_content: "    pub fn minizinc_model_get_parent(model_ptr: *mut std::os::raw::c_void) -> *mut std::os::raw::c_void;" },
  { file_path: "tools/minizinc_ffi/src/ffi_bindings.rs", line_number: 44, line_content: "    pub fn minizinc_model_get_solve_item(model_ptr: *mut std::os::raw::c_void) -> *mut std::os::raw::c_void;" },
  { file_path: "tools/minizinc_ffi/src/ffi_bindings.rs", line_number: 47, line_content: "    pub fn minizinc_model_get_output_item(model_ptr: *mut std::os::raw::c_void) -> *mut std::os::raw::c_void;" },
  { file_path: "tools/minizinc_ffi/src/ffi_bindings.rs", line_number: 50, line_content: "    pub fn item_get_id(item_ptr: *mut MiniZincItem) -> i32;" },
  { file_path: "tools/minizinc_ffi/src/ffi_bindings.rs", line_number: 51, line_content: "    pub fn item_is_vardecl(item_ptr: *mut MiniZincItem) -> bool;" },
  { file_path: "tools/minizinc_ffi/src/ffi_bindings.rs", line_number: 52, line_content: "    pub fn item_as_vardecl(item_ptr: *mut MiniZincItem) -> *mut std::os::raw::c_void;" },
  { file_path: "tools/minizinc_ffi/src/ffi_bindings.rs", line_number: 55, line_content: "    pub fn item_is_assign(item_ptr: *mut MiniZincItem) -> bool;" },
  { file_path: "tools/minizinc_ffi/src/ffi_bindings.rs", line_number: 56, line_content: "    pub fn item_as_assign(item_ptr: *mut MiniZincItem) -> *mut std::os::raw::c_void;" },
  { file_path: "tools/minizinc_ffi/src/ffi_bindings.rs", line_number: 59, line_content: "    pub fn item_is_constraint(item_ptr: *mut MiniZincItem) -> bool;" },
  { file_path: "tools/minizinc_ffi/src/ffi_bindings.rs", line_number: 60, line_content: "    pub fn item_as_constraint(item_ptr: *mut MiniZincItem) -> *mut std::os::raw::c_void;" },
  { file_path: "tools/minizinc_ffi/src/ffi_bindings.rs", line_number: 63, line_content: "    pub fn item_is_include(item_ptr: *mut MiniZincItem) -> bool;" },
  { file_path: "tools/minizinc_ffi/src/ffi_bindings.rs", line_number: 64, line_content: "    pub fn item_as_include(item_ptr: *mut MiniZincItem) -> *mut std::os::raw::c_void;" },
  { file_path: "tools/minizinc_ffi/src/ffi_bindings.rs", line_number: 67, line_content: "    pub fn item_is_function(item_ptr: *mut MiniZincItem) -> bool;" },
  { file_path: "tools/minizinc_ffi/src/ffi_bindings.rs", line_number: 68, line_content: "    pub fn item_as_function(item_ptr: *mut MiniZincItem) -> *mut std::os::raw::c_void;" },
  { file_path: "tools/minizinc_ffi/src/ffi_bindings.rs", line_number: 71, line_content: "    pub fn vardecl_get_id(vardecl_ptr: *mut std::os::raw::c_void) -> *const c_char;" },
  { file_path: "tools/minizinc_ffi/src/ffi_bindings.rs", line_number: 72, line_content: "    pub fn vardecl_get_type_inst(vardecl_ptr: *mut std::os::raw::c_void) -> *mut std::os::raw::c_void;" },
  { file_path: "tools/minizinc_ffi/src/ffi_bindings.rs", line_number: 73, line_content: "    pub fn vardecl_get_expression(vardecl_ptr: *mut std::os::raw::c_void) -> *mut std::os::raw::c_void;" },
  { file_path: "tools/minizinc_ffi/src/ffi_bindings.rs", line_number: 76, line_content: "    pub fn vardecl_is_toplevel(vardecl_ptr: *mut std::os::raw::c_void) -> bool;" },
  { file_path: "tools/minizinc_ffi/src/ffi_bindings.rs", line_number: 79, line_content: "    pub fn vardecl_is_introduced(vardecl_ptr: *mut std::os::raw::c_void) -> bool;" },
  { file_path: "tools/minizinc_ffi/src/ffi_bindings.rs", line_number: 82, line_content: "    pub fn vardecl_is_evaluated(vardecl_ptr: *mut std::os::raw::c_void) -> bool;" },
  { file_path: "tools/minizinc_ffi/src/ffi_bindings.rs", line_number: 85, line_content: "    pub fn vardecl_get_payload(vardecl_ptr: *mut std::os::raw::c_void) -> i32;" },
  { file_path: "tools/minizinc_ffi/src/ffi_bindings.rs", line_number: 88, line_content: "    pub fn vardecl_is_type_alias(vardecl_ptr: *mut std::os::raw::c_void) -> bool;" },
  { file_path: "tools/minizinc_ffi/src/ffi_bindings.rs", line_number: 91, line_content: "    pub fn typeinst_get_base_type(typeinst_ptr: *mut std::os::raw::c_void) -> i32;" },
  { file_path: "tools/minizinc_ffi/src/ffi_bindings.rs", line_number: 94, line_content: "    pub fn typeinst_is_var(typeinst_ptr: *mut std::os::raw::c_void) -> bool;" },
  { file_path: "tools/minizinc_ffi/src/ffi_bindings.rs", line_number: 97, line_content: "    pub fn typeinst_is_par(typeinst_ptr: *mut std::os::raw::c_void) -> bool;" },
  { file_path: "tools/minizinc_ffi/src/ffi_bindings.rs", line_number: 100, line_content: "    pub fn typeinst_is_opt(typeinst_ptr: *mut std::os::raw::c_void) -> bool;" },
  { file_path: "tools/minizinc_ffi/src/ffi_bindings.rs", line_number: 103, line_content: "    pub fn typeinst_is_present(typeinst_ptr: *mut std::os::raw::c_void) -> bool;" },
  { file_path: "tools/minizinc_ffi/src/ffi_bindings.rs", line_number: 106, line_content: "    pub fn typeinst_is_set(typeinst_ptr: *mut std::os::raw::c_void) -> bool;" },
  { file_path: "tools/minizinc_ffi/src/ffi_bindings.rs", line_number: 109, line_content: "    pub fn typeinst_is_int(typeinst_ptr: *mut std::os::raw::c_void) -> bool;" },
  { file_path: "tools/minizinc_ffi/src/ffi_bindings.rs", line_number: 112, line_content: "    pub fn typeinst_is_bool(typeinst_ptr: *mut std::os::raw::c_void) -> bool;" },
  { file_path: "tools/minizinc_ffi/src/ffi_bindings.rs", line_number: 115, line_content: "    pub fn typeinst_is_float(typeinst_ptr: *mut std::os::raw::c_void) -> bool;" },
  { file_path: "tools/minizinc_ffi/src/ffi_bindings.rs", line_number: 118, line_content: "    pub fn typeinst_is_string(typeinst_ptr: *mut std::os::raw::c_void) -> bool;" },
  { file_path: "tools/minizinc_ffi/src/ffi_bindings.rs", line_number: 121, line_content: "    pub fn typeinst_is_ann(typeinst_ptr: *mut std::os::raw::c_void) -> bool;" },
  { file_path: "tools/minizinc_ffi/src/ffi_bindings.rs", line_number: 124, line_content: "    pub fn typeinst_is_unknown(typeinst_ptr: *mut std::os::raw::c_void) -> bool;" },
  { file_path: "tools/minizinc_ffi/src/ffi_bindings.rs", line_number: 127, line_content: "    pub fn typeinst_is_plain(typeinst_ptr: *mut std::os::raw::c_void) -> bool;" },
  { file_path: "tools/minizinc_ffi/src/ffi_bindings.rs", line_number: 130, line_content: "    pub fn typeinst_is_bot(typeinst_ptr: *mut std::os::raw::c_void) -> bool;" },
  { file_path: "tools/minizinc_ffi/src/ffi_bindings.rs", line_number: 133, line_content: "    pub fn typeinst_is_top(typeinst_ptr: *mut std::os::raw::c_void) -> bool;" },
  { file_path: "tools/minizinc_ffi/src/ffi_bindings.rs", line_number: 136, line_content: "    pub fn typeinst_is_int_set(typeinst_ptr: *mut std::os::raw::c_void) -> bool;" },
  { file_path: "tools/minizinc_ffi/src/ffi_bindings.rs", line_number: 139, line_content: "    pub fn typeinst_is_bool_set(typeinst_ptr: *mut std::os::raw::c_void) -> bool;" },
  { file_path: "tools/minizinc_ffi/src/ffi_bindings.rs", line_number: 142, line_content: "    pub fn typeinst_is_float_set(typeinst_ptr: *mut std::os::raw::c_void) -> bool;" },
  { file_path: "tools/minizinc_ffi/src/ffi_bindings.rs", line_number: 145, line_content: "    pub fn typeinst_is_int_array(typeinst_ptr: *mut std::os::raw::c_void) -> bool;" },
  { file_path: "tools/minizinc_ffi/src/ffi_bindings.rs", line_number: 148, line_content: "    pub fn typeinst_is_bool_array(typeinst_ptr: *mut std::os::raw::c_void) -> bool;" },
  { file_path: "tools/minizinc_ffi/src/ffi_bindings.rs", line_number: 151, line_content: "    pub fn typeinst_is_int_set_array(typeinst_ptr: *mut std::os::raw::c_void) -> bool;" },
  { file_path: "tools/minizinc_ffi/src/ffi_bindings.rs", line_number: 154, line_content: "    pub fn expression_get_id(expr_ptr: *mut std::os::raw::c_void) -> i32;" },
  { file_path: "tools/minizinc_ffi/src/ffi_bindings.rs", line_number: 155, line_content: "    pub fn expression_is_intlit(expr_ptr: *mut std::os::raw::c_void) -> bool;" },
  { file_path: "tools/minizinc_ffi/src/ffi_bindings.rs", line_number: 158, line_content: "    pub fn expression_is_floatlit(expr_ptr: *mut std::os::raw::c_void) -> bool;" },
  { file_path: "tools/minizinc_ffi/src/ffi_bindings.rs", line_number: 159, line_content: "    pub fn expression_as_floatlit(expr_ptr: *mut std::os::raw::c_void) -> *mut std::os::raw::c_void;" },
  { file_path: "tools/minizinc_ffi/src/ffi_bindings.rs", line_number: 162, line_content: "    pub fn floatlit_get_value(floatlit_ptr: *mut std::os::raw::c_void) -> f64;" },
  { file_path: "tools/minizinc_ffi/src/ffi_bindings.rs", line_number: 165, line_content: "    pub fn expression_is_setlit(expr_ptr: *mut std::os::raw::c_void) -> bool;" },
  { file_path: "tools/minizinc_ffi/src/ffi_bindings.rs", line_number: 166, line_content: "    pub fn expression_as_setlit(expr_ptr: *mut std::os::raw::c_void) -> *mut std::os::raw::c_void;" },
  { file_path: "tools/minizinc_ffi/src/ffi_bindings.rs", line_number: 169, line_content: "    pub fn setlit_get_size(setlit_ptr: *mut std::os::raw::c_void) -> u32;" },
  { file_path: "tools/minizinc_ffi/src/ffi_bindings.rs", line_number: 170, line_content: "    pub fn setlit_get_element_at_index(setlit_ptr: *mut std::os::raw::c_void, index: u32) -> *mut std::os::raw::c_void;" },
  { file_path: "tools/minizinc_ffi/src/ffi_bindings.rs", line_number: 173, line_content: "    pub fn minizinc_get_mznlib_dir(env_ptr: *mut MznSolver) -> *const c_char;" },
  { file_path: "tools/minizinc_ffi/src/ffi_bindings.rs", line_number: 174, line_content: "    pub fn minizinc_get_executable_path() -> *const c_char;" },
  { file_path: "tools/minizinc_ffi/src/ffi_bindings.rs", line_number: 177, line_content: "    pub fn minizinc_solver_free(solver_ptr: *mut MznSolver);" },
  { file_path: "tools/minizinc_ffi/src/ffi_bindings.rs", line_number: 178, line_content: "    pub fn minizinc_solver_get_solver_instance(solver_ptr: *mut MznSolver) -> *mut std::os::raw::c_void;" },
  { file_path: "tools/minizinc_ffi/src/ffi_bindings.rs", line_number: 181, line_content: "    pub fn minizinc_solver_instance_next(solver_instance_ptr: *mut std::os::raw::c_void) -> i32;" },
  { file_path: "tools/minizinc_ffi/src/ffi_bindings.rs", line_number: 182, line_content: "    pub fn minizinc_solver_instance_print_solution(solver_instance_ptr: *mut std::os::raw::c_void);" },
  { file_path: "tools/minizinc_ffi/src/ffi_bindings.rs", line_number: 185, line_content: "    pub fn minizinc_solver_get_solution_value_int(solver_ptr: *mut MznSolver, var_name: *const c_char) -> i32;" },
  { file_path: "tools/minizinc_ffi/src/ffi_bindings.rs", line_number: 188, line_content: "    //pub fn minizinc_model_get_doc_comment(model_ptr: *mut std::os::raw::c_void) -> *const c_char;" },
  { file_path: "tools/minizinc_ffi/src/ffi_bindings.rs", line_number: 191, line_content: "    //pub fn minizinc_model_get_parent(model_ptr: *mut std::os::raw::c_void) -> *mut std::os::raw::c_void;" },
  { file_path: "tools/minizinc_ffi/src/ffi_bindings.rs", line_number: 194, line_content: "    //pub fn minizinc_model_get_solve_item(model_ptr: *mut std::os::raw::c_void) -> *mut std::os::raw::c_void;" },
  { file_path: "tools/minizinc_ffi/src/ffi_bindings.rs", line_number: 197, line_content: "    //pub fn minizinc_model_get_output_item(model_ptr: *mut std::os::raw::c_void) -> *mut std::os::raw::c_void;" },
  { file_path: "tools/minizinc_ffi/src/ffi_bindings.rs", line_number: 200, line_content: "    pub fn minizinc_gc_lock();" },
  { file_path: "tools/minizinc_ffi/src/ffi_bindings.rs", line_number: 201, line_content: "    pub fn minizinc_gc_unlock();" },
  { file_path: "tools/minizinc_ffi/src/float_lit.rs", line_number: 5, line_content: "    pub fn value(&self) -> f64 {" },
  { file_path: "tools/minizinc_ffi/src/id_impl.rs", line_number: 6, line_content: "    pub fn value(&self) -> String {" },
  { file_path: "tools/minizinc_ffi/src/item.rs", line_number: 6, line_content: "    pub fn item_id(&self) -> ItemId {" },
  { file_path: "tools/minizinc_ffi/src/item.rs", line_number: 11, line_content: "    pub fn is_vardecl(&self) -> bool {" },
  { file_path: "tools/minizinc_ffi/src/item.rs", line_number: 15, line_content: "    pub fn as_vardecl(&self) -> Option<MiniZincVarDecl> {" },
  { file_path: "tools/minizinc_ffi/src/item.rs", line_number: 24, line_content: "    pub fn is_assign(&self) -> bool {" },
  { file_path: "tools/minizinc_ffi/src/item.rs", line_number: 28, line_content: "    pub fn as_assign(&self) -> Option<MiniZincAssignItem> {" },
  { file_path: "tools/minizinc_ffi/src/item.rs", line_number: 37, line_content: "    pub fn is_constraint(&self) -> bool {" },
  { file_path: "tools/minizinc_ffi/src/item.rs", line_number: 41, line_content: "    pub fn as_constraint(&self) -> Option<MiniZincConstraintItem> {" },
  { file_path: "tools/minizinc_ffi/src/item.rs", line_number: 50, line_content: "    pub fn is_include(&self) -> bool {" },
  { file_path: "tools/minizinc_ffi/src/item.rs", line_number: 54, line_content: "    pub fn as_include(&self) -> Option<MiniZincIncludeItem> {" },
  { file_path: "tools/minizinc_ffi/src/item.rs", line_number: 63, line_content: "    pub fn is_function(&self) -> bool {" },
  { file_path: "tools/minizinc_ffi/src/item.rs", line_number: 67, line_content: "    pub fn as_function(&self) -> Option<MiniZincFunctionItem> {" },
  { file_path: "tools/minizinc_ffi/src/item_id.rs", line_number: 14, line_content: "    fn from(id: i32) -> Self {" },
  { file_path: "tools/minizinc_ffi/src/model.rs", line_number: 21, line_content: "    fn drop(&mut self) {" },
  { file_path: "tools/minizinc_ffi/src/model.rs", line_number: 32, line_content: "    pub fn filename(&self) -> String {" },
  { file_path: "tools/minizinc_ffi/src/model.rs", line_number: 50, line_content: "    pub fn filepath(&self) -> String {" },
  { file_path: "tools/minizinc_ffi/src/model.rs", line_number: 64, line_content: "    pub fn num_items(&self) -> u32 {" },
  { file_path: "tools/minizinc_ffi/src/model.rs", line_number: 68, line_content: "    pub fn get_item_at_index(&self, index: u32) -> Option<MiniZincItem> {" },
  { file_path: "tools/minizinc_ffi/src/model.rs", line_number: 77, line_content: "    pub fn doc_comment(&self) -> String {" },
  { file_path: "tools/minizinc_ffi/src/model.rs", line_number: 82, line_content: "    pub fn parent(&self) -> Option<MiniZincModel> {" },
  { file_path: "tools/minizinc_ffi/src/model.rs", line_number: 91, line_content: "    pub fn solve_item(&self) -> Option<MiniZincSolveItem> {" },
  { file_path: "tools/minizinc_ffi/src/model.rs", line_number: 100, line_content: "    pub fn output_item(&self) -> Option<MiniZincOutputItem> {" },
  { file_path: "tools/minizinc_ffi/src/set_lit.rs", line_number: 5, line_content: "    pub fn size(&self) -> u32 {" },
  { file_path: "tools/minizinc_ffi/src/set_lit.rs", line_number: 9, line_content: "    pub fn get_element_at_index(&self, index: u32) -> Option<MiniZincExpression> {" },
  { file_path: "tools/minizinc_ffi/src/string_lit_impl.rs", line_number: 6, line_content: "    pub fn value(&self) -> String {" },
  { file_path: "tools/minizinc_ffi/src/tests/mod.rs", line_number: 23, line_content: "    // fn test_get_version_string() {" },
  { file_path: "tools/minizinc_ffi/src/tests/mod.rs", line_number: 31, line_content: "    fn test_global_env_access() {" },
  { file_path: "tools/minizinc_ffi/src/tests/mod.rs", line_number: 37, line_content: "    // fn test_parse_string() {" },
  { file_path: "tools/minizinc_ffi/src/tests/mod.rs", line_number: 48, line_content: "    // fn test_solve_and_extract_int() {" },
  { file_path: "tools/minizinc_ffi/src/tests/test_parse_model_v2.rs", line_number: 4, line_content: "fn test_parse_model_v2() {" },
  { file_path: "tools/minizinc_ffi/src/tests/tests/minimal_crash_tests.rs", line_number: 8, line_content: "    fn test_01_init_global_env() {" },
  { file_path: "tools/minizinc_ffi/src/tests/tests/minimal_crash_tests.rs", line_number: 15, line_content: "    fn test_02_parse_minimal_model() {" },
  { file_path: "tools/minizinc_ffi/src/tests/tests/minimal_crash_tests.rs", line_number: 25, line_content: "    fn test_03_unwrap_model() {" },
  { file_path: "tools/minizinc_ffi/src/tests/tests/minimal_crash_tests.rs", line_number: 36, line_content: "    fn test_04_get_model_filename() {" },
  { file_path: "tools/minizinc_ffi/src/tests/tests/minimal_crash_tests.rs", line_number: 48, line_content: "    fn test_05_full_lifecycle_no_filepath() {" },
  { file_path: "tools/minizinc_ffi/src/tests/tests/parser_tests.rs", line_number: 7, line_content: "    fn test_parse_simple_model() {" },
  { file_path: "tools/minizinc_ffi/src/tests/tests/parser_tests.rs", line_number: 19, line_content: "    fn test_parse_model_with_parameters() {" },
  { file_path: "tools/minizinc_ffi/src/tests/tests/parser_tests.rs", line_number: 30, line_content: "    fn test_parse_model_with_array() {" },
  { file_path: "tools/minizinc_ffi/src/tests/tests/test_01_init_global_env.rs", line_number: 6, line_content: "    fn test_01_init_global_env() {" },
  { file_path: "tools/minizinc_ffi/src/tests/tests/test_02_parse_minimal_model.rs", line_number: 6, line_content: "    fn test_02_parse_minimal_model() {" },
  { file_path: "tools/minizinc_ffi/src/tests/tests/test_03_unwrap_model.rs", line_number: 6, line_content: "    fn test_03_unwrap_model() {" },
  { file_path: "tools/minizinc_ffi/src/tests/tests/test_04_get_model_filename.rs", line_number: 6, line_content: "    // fn test_04_get_model_filename() {" },
  { file_path: "tools/minizinc_ffi/src/tests/tests/test_05_full_lifecycle_no_filepath.rs", line_number: 6, line_content: "    fn test_05_full_lifecycle_no_filepath() {" },
  { file_path: "tools/minizinc_ffi/src/tests/tests/test_06_new_feature.rs", line_number: 6, line_content: "    fn test_06_parse_new_feature() {" },
  { file_path: "tools/minizinc_ffi/src/typeinst.rs", line_number: 6, line_content: "    pub fn base_type(&self) -> MiniZincBaseType {" },
  { file_path: "tools/minizinc_ffi/src/typeinst.rs", line_number: 11, line_content: "    pub fn is_var(&self) -> bool {" },
  { file_path: "tools/minizinc_ffi/src/typeinst.rs", line_number: 15, line_content: "    pub fn is_par(&self) -> bool {" },
  { file_path: "tools/minizinc_ffi/src/typeinst.rs", line_number: 19, line_content: "    pub fn is_opt(&self) -> bool {" },
  { file_path: "tools/minizinc_ffi/src/typeinst.rs", line_number: 23, line_content: "    pub fn is_present(&self) -> bool {" },
  { file_path: "tools/minizinc_ffi/src/typeinst.rs", line_number: 27, line_content: "    pub fn is_set(&self) -> bool {" },
  { file_path: "tools/minizinc_ffi/src/typeinst.rs", line_number: 31, line_content: "    pub fn is_int(&self) -> bool {" },
  { file_path: "tools/minizinc_ffi/src/typeinst.rs", line_number: 35, line_content: "    pub fn is_bool(&self) -> bool {" },
  { file_path: "tools/minizinc_ffi/src/typeinst.rs", line_number: 39, line_content: "    pub fn is_float(&self) -> bool {" },
  { file_path: "tools/minizinc_ffi/src/typeinst.rs", line_number: 43, line_content: "    pub fn is_string(&self) -> bool {" },
  { file_path: "tools/minizinc_ffi/src/typeinst.rs", line_number: 47, line_content: "    pub fn is_ann(&self) -> bool {" },
  { file_path: "tools/minizinc_ffi/src/typeinst.rs", line_number: 51, line_content: "    pub fn is_unknown(&self) -> bool {" },
  { file_path: "tools/minizinc_ffi/src/typeinst.rs", line_number: 55, line_content: "    pub fn is_plain(&self) -> bool {" },
  { file_path: "tools/minizinc_ffi/src/typeinst.rs", line_number: 59, line_content: "    pub fn is_bot(&self) -> bool {" },
  { file_path: "tools/minizinc_ffi/src/typeinst.rs", line_number: 63, line_content: "    pub fn is_top(&self) -> bool {" },
  { file_path: "tools/minizinc_ffi/src/typeinst.rs", line_number: 67, line_content: "    pub fn is_int_set(&self) -> bool {" },
  { file_path: "tools/minizinc_ffi/src/typeinst.rs", line_number: 71, line_content: "    pub fn is_bool_set(&self) -> bool {" },
  { file_path: "tools/minizinc_ffi/src/typeinst.rs", line_number: 75, line_content: "    pub fn is_float_set(&self) -> bool {" },
  { file_path: "tools/minizinc_ffi/src/typeinst.rs", line_number: 79, line_content: "    pub fn is_int_array(&self) -> bool {" },
  { file_path: "tools/minizinc_ffi/src/typeinst.rs", line_number: 83, line_content: "    pub fn is_bool_array(&self) -> bool {" },
  { file_path: "tools/minizinc_ffi/src/typeinst.rs", line_number: 87, line_content: "    pub fn is_int_set_array(&self) -> bool {" },
  { file_path: "tools/minizinc_ffi/src/vardecl.rs", line_number: 6, line_content: "    pub fn id(&self) -> String {" },
  { file_path: "tools/minizinc_ffi/src/vardecl.rs", line_number: 11, line_content: "    pub fn type_inst(&self) -> MiniZincTypeInst {" },
  { file_path: "tools/minizinc_ffi/src/vardecl.rs", line_number: 16, line_content: "    pub fn expression(&self) -> Option<MiniZincExpression> {" },
  { file_path: "tools/minizinc_ffi/src/vardecl.rs", line_number: 25, line_content: "    pub fn is_toplevel(&self) -> bool {" },
  { file_path: "tools/minizinc_ffi/src/vardecl.rs", line_number: 29, line_content: "    pub fn is_introduced(&self) -> bool {" },
  { file_path: "tools/minizinc_ffi/src/vardecl.rs", line_number: 33, line_content: "    pub fn is_evaluated(&self) -> bool {" },
  { file_path: "tools/minizinc_ffi/src/vardecl.rs", line_number: 37, line_content: "    pub fn payload(&self) -> i32 {" },
  { file_path: "tools/minizinc_ffi/src/vardecl.rs", line_number: 41, line_content: "    pub fn is_type_alias(&self) -> bool {" },
  { file_path: "tools/minizinc_model_generator_rs/minizinc_model_generator_rs/src/main.rs", line_number: 5, line_content: "fn main() -> io::Result<()> {" },
  { file_path: "tools/minizinc_report_generator_rs/minizinc_report_generator_rs/src/main.rs", line_number: 4, line_content: "fn main() -> io::Result<()> {" },
  { file_path: "tools/minizinc_report_generator_rs/src/main.rs", line_number: 4, line_content: "fn main() -> io::Result<()> {" },
  { file_path: "tools/minizinc_test_runner_rs/minizinc_test_runner_rs/src/main.rs", line_number: 1, line_content: "fn main() {" },
  { file_path: "tools/minizinc_test_runner_rs/src/main.rs", line_number: 6, line_content: "fn main() -> io::Result<()> {" },
  { file_path: "vendor/clang-rs/examples/structs.rs", line_number: 5, line_content: "fn main() {" },
  { file_path: "vendor/clang-rs/src/completion.rs", line_number: 91, line_content: "    pub fn get_text(&self) -> Option<String> {" },
  { file_path: "vendor/clang-rs/src/completion.rs", line_number: 118, line_content: "    pub fn is_optional(&self) -> bool {" },
  { file_path: "vendor/clang-rs/src/completion.rs", line_number: 152, line_content: "    pub fn new<F: Into<PathBuf>>(" },
  { file_path: "vendor/clang-rs/src/completion.rs", line_number: 163, line_content: "    pub fn unsaved(&mut self, unsaved: &[Unsaved]) -> &mut Completer<'tu> {" },
  { file_path: "vendor/clang-rs/src/completion.rs", line_number: 171, line_content: "    pub fn complete(&self) -> CompletionResults {" },
  { file_path: "vendor/clang-rs/src/completion.rs", line_number: 256, line_content: "    fn from_raw(raw: CXCompletionResult) -> CompletionResult<'r> {" },
  { file_path: "vendor/clang-rs/src/completion.rs", line_number: 263, line_content: "    fn partial_cmp(&self, other: &CompletionResult<'r>) -> Option<Ordering> {" },
  { file_path: "vendor/clang-rs/src/completion.rs", line_number: 269, line_content: "    fn cmp(&self, other: &CompletionResult<'r>) -> Ordering {" },
  { file_path: "vendor/clang-rs/src/completion.rs", line_number: 284, line_content: "    fn from_ptr(ptr: *mut CXCodeCompleteResults) -> CompletionResults {" },
  { file_path: "vendor/clang-rs/src/completion.rs", line_number: 293, line_content: "    pub fn get_diagnostics<'tu>(&self, tu: &'tu TranslationUnit<'tu>) -> Vec<Diagnostic<'tu>> {" },
  { file_path: "vendor/clang-rs/src/completion.rs", line_number: 301, line_content: "    pub fn get_context(&self) -> Option<CompletionContext> {" },
  { file_path: "vendor/clang-rs/src/completion.rs", line_number: 312, line_content: "    pub fn get_container_kind(&self) -> Option<(EntityKind, bool)> {" },
  { file_path: "vendor/clang-rs/src/completion.rs", line_number: 324, line_content: "    pub fn get_objc_selector(&self) -> Option<String> {" },
  { file_path: "vendor/clang-rs/src/completion.rs", line_number: 330, line_content: "    pub fn get_usr(&self) -> Option<Usr> {" },
  { file_path: "vendor/clang-rs/src/completion.rs", line_number: 335, line_content: "    pub fn get_results(&self) -> Vec<CompletionResult> {" },
  { file_path: "vendor/clang-rs/src/completion.rs", line_number: 344, line_content: "    fn drop(&mut self) {" },
  { file_path: "vendor/clang-rs/src/completion.rs", line_number: 350, line_content: "    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {" },
  { file_path: "vendor/clang-rs/src/completion.rs", line_number: 370, line_content: "    pub fn from_ptr(ptr: CXCompletionString) -> CompletionString<'r> {" },
  { file_path: "vendor/clang-rs/src/completion.rs", line_number: 379, line_content: "    pub fn get_priority(&self) -> usize {" },
  { file_path: "vendor/clang-rs/src/completion.rs", line_number: 384, line_content: "    pub fn get_annotations(&self) -> Vec<String> {" },
  { file_path: "vendor/clang-rs/src/completion.rs", line_number: 392, line_content: "    pub fn get_availability(&self) -> Availability {" },
  { file_path: "vendor/clang-rs/src/completion.rs", line_number: 398, line_content: "    pub fn get_comment_brief(&self) -> Option<String> {" },
  { file_path: "vendor/clang-rs/src/completion.rs", line_number: 404, line_content: "    pub fn get_parent_name(&self) -> Option<String> {" },
  { file_path: "vendor/clang-rs/src/completion.rs", line_number: 409, line_content: "    pub fn get_typed_text(&self) -> Option<String> {" },
  { file_path: "vendor/clang-rs/src/completion.rs", line_number: 419, line_content: "    pub fn get_chunks(&self) -> Vec<CompletionChunk> {" },
  { file_path: "vendor/clang-rs/src/completion.rs", line_number: 464, line_content: "    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {" },
  { file_path: "vendor/clang-rs/src/completion.rs", line_number: 472, line_content: "    fn eq(&self, other: &CompletionString<'r>) -> bool {" },
  { file_path: "vendor/clang-rs/src/completion.rs", line_number: 480, line_content: "    fn partial_cmp(&self, other: &CompletionString<'r>) -> Option<Ordering> {" },
  { file_path: "vendor/clang-rs/src/completion.rs", line_number: 486, line_content: "    fn cmp(&self, other: &CompletionString<'r>) -> Ordering {" },
  { file_path: "vendor/clang-rs/src/diagnostic.rs", line_number: 80, line_content: "    pub fn from_ptr(ptr: CXDiagnostic, tu: &'tu TranslationUnit<'tu>) -> Diagnostic<'tu> {" },
  { file_path: "vendor/clang-rs/src/diagnostic.rs", line_number: 88, line_content: "    pub fn get_severity(&self) -> Severity {" },
  { file_path: "vendor/clang-rs/src/diagnostic.rs", line_number: 93, line_content: "    pub fn get_text(&self) -> String {" },
  { file_path: "vendor/clang-rs/src/diagnostic.rs", line_number: 98, line_content: "    pub fn get_location(&self) -> SourceLocation<'tu> {" },
  { file_path: "vendor/clang-rs/src/diagnostic.rs", line_number: 103, line_content: "    pub fn get_ranges(&self) -> Vec<SourceRange<'tu>> {" },
  { file_path: "vendor/clang-rs/src/diagnostic.rs", line_number: 111, line_content: "    pub fn get_fix_its(&self) -> Vec<FixIt<'tu>> {" },
  { file_path: "vendor/clang-rs/src/diagnostic.rs", line_number: 130, line_content: "    pub fn get_children(&self) -> Vec<Diagnostic> {" },
  { file_path: "vendor/clang-rs/src/diagnostic.rs", line_number: 139, line_content: "    pub fn formatter(&self) -> DiagnosticFormatter<'tu> {" },
  { file_path: "vendor/clang-rs/src/diagnostic.rs", line_number: 146, line_content: "    fn eq(&self, other: &Diagnostic<'tu>) -> bool {" },
  { file_path: "vendor/clang-rs/src/diagnostic.rs", line_number: 153, line_content: "    fn partial_cmp(&self, other: &Diagnostic<'tu>) -> Option<Ordering> {" },
  { file_path: "vendor/clang-rs/src/diagnostic.rs", line_number: 159, line_content: "    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {" },
  { file_path: "vendor/clang-rs/src/diagnostic.rs", line_number: 169, line_content: "    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {" },
  { file_path: "vendor/clang-rs/src/diagnostic.rs", line_number: 204, line_content: "    fn new(diagnostic: Diagnostic<'tu>) -> DiagnosticFormatter<'tu> {" },
  { file_path: "vendor/clang-rs/src/diagnostic.rs", line_number: 212, line_content: "    pub fn format(&self) -> String {" },
  { file_path: "vendor/clang-rs/src/documentation.rs", line_number: 62, line_content: "    fn from_raw(raw: CXComment) -> CommentChild {" },
  { file_path: "vendor/clang-rs/src/documentation.rs", line_number: 147, line_content: "    unsafe fn from_raw(raw: CXComment) -> BlockCommand {" },
  { file_path: "vendor/clang-rs/src/documentation.rs", line_number: 172, line_content: "    pub fn from_raw(raw: CXComment) -> Comment<'tu> {" },
  { file_path: "vendor/clang-rs/src/documentation.rs", line_number: 179, line_content: "    pub fn get_children(&self) -> Vec<CommentChild> {" },
  { file_path: "vendor/clang-rs/src/documentation.rs", line_number: 187, line_content: "    pub fn as_html(&self) -> String {" },
  { file_path: "vendor/clang-rs/src/documentation.rs", line_number: 192, line_content: "    pub fn as_xml(&self) -> String {" },
  { file_path: "vendor/clang-rs/src/documentation.rs", line_number: 198, line_content: "    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {" },
  { file_path: "vendor/clang-rs/src/documentation.rs", line_number: 219, line_content: "    unsafe fn from_raw(raw: CXComment) -> HtmlStartTag {" },
  { file_path: "vendor/clang-rs/src/documentation.rs", line_number: 247, line_content: "    unsafe fn from_raw(raw: CXComment) -> InlineCommand {" },
  { file_path: "vendor/clang-rs/src/documentation.rs", line_number: 279, line_content: "    unsafe fn from_raw(raw: CXComment) -> ParamCommand {" },
  { file_path: "vendor/clang-rs/src/documentation.rs", line_number: 314, line_content: "    unsafe fn from_raw(raw: CXComment) -> TParamCommand {" },
  { file_path: "vendor/clang-rs/src/error.rs", line_number: 44, line_content: "            fn from(error: $name) -> String {" },
  { file_path: "vendor/clang-rs/src/error.rs", line_number: 50, line_content: "            fn from_error(error: $underlying) -> Result<(), $name> {" },
  { file_path: "vendor/clang-rs/src/error.rs", line_number: 59, line_content: "            fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 81, line_content: "    fn from_raw(raw: c_int) -> Option<Self> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 106, line_content: "    fn from_raw(raw: c_int) -> Option<Self> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 166, line_content: "    fn from_raw(raw: c_int) -> Option<Self> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 810, line_content: "    fn from_raw(raw: c_int) -> Option<Self> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 820, line_content: "    fn from_raw_infallible(raw: c_int) -> Self {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 825, line_content: "    pub fn is_valid(&self) -> bool {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 903, line_content: "    fn from_raw(raw: c_int) -> Option<Self> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 930, line_content: "    fn from_raw(raw: c_int) -> Option<Self> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 955, line_content: "    fn from_raw(raw: c_int) -> Option<Self> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 1000, line_content: "    fn from_raw(raw: c_int) -> Option<Self> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 1025, line_content: "    fn from_raw(raw: c_int) -> Option<Self> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 1106, line_content: "    fn from_raw(raw: c_int) -> Option<Self> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 1142, line_content: "    fn from_raw(raw: c_int) -> Option<Self> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 1191, line_content: "    fn from_raw(raw: c_int) -> Option<Self> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 1574, line_content: "    fn from_raw(raw: c_int) -> Option<Self> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 1581, line_content: "    fn from_raw_infallible(raw: c_int) -> Self {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 1603, line_content: "    fn from_raw(raw: c_int) -> Option<Self> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 1638, line_content: "    pub fn new() -> Result<Clang, String> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 1654, line_content: "    pub fn new() -> Result<Clang, String> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 1665, line_content: "    fn drop(&mut self) {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 1673, line_content: "    fn drop(&mut self) {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 1688, line_content: "    pub fn from_directory<P: AsRef<Path>>(path: P) -> Result<CompilationDatabase, ()> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 1702, line_content: "    pub fn get_all_compile_commands(&self) -> CompileCommands {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 1709, line_content: "    pub fn get_compile_commands<P: AsRef<Path>>(&self, path: P) -> Result<CompileCommands, ()> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 1719, line_content: "    fn drop(&mut self) {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 1733, line_content: "    fn from_ptr(ptr: CXCompileCommands) -> CompileCommands {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 1739, line_content: "    pub fn get_commands(&self) -> Vec<CompileCommand> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 1750, line_content: "    fn drop(&mut self) {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 1765, line_content: "    fn from_ptr(_: &'cmds CompileCommands, ptr: CXCompileCommand) -> CompileCommand<'cmds> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 1774, line_content: "    pub fn get_directory(&self) -> PathBuf {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 1780, line_content: "    pub fn get_filename(&self) -> PathBuf {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 1785, line_content: "    pub fn get_arguments(&self) -> Vec<String> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 1809, line_content: "    fn from_raw(raw: CXCursor, tu: &'tu TranslationUnit<'tu>) -> Entity<'tu> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 1817, line_content: "    pub fn evaluate(&self) -> Option<EvaluationResult> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 1825, line_content: "        unsafe fn evaluate_integer(e: CXEvalResult) -> EvaluationResult {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 1834, line_content: "        unsafe fn evaluate_integer(e: CXEvalResult) -> EvaluationResult {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 1858, line_content: "    pub fn get_kind(&self) -> EntityKind {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 1866, line_content: "    pub fn get_display_name(&self) -> Option<String> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 1872, line_content: "    pub fn get_pretty_printer(&self) -> PrettyPrinter {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 1877, line_content: "    pub fn get_location(&self) -> Option<SourceLocation<'tu>> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 1882, line_content: "    pub fn get_range(&self) -> Option<SourceRange<'tu>> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 1887, line_content: "    pub fn get_accessibility(&self) -> Option<Accessibility> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 1897, line_content: "    pub fn get_arguments(&self) -> Option<Vec<Entity<'tu>>> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 1905, line_content: "    pub fn get_availability(&self) -> Availability {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 1910, line_content: "    pub fn get_bit_field_width(&self) -> Option<usize> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 1925, line_content: "    pub fn get_canonical_entity(&self) -> Entity<'tu> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 1930, line_content: "    pub fn get_comment(&self) -> Option<String> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 1935, line_content: "    pub fn get_parsed_comment(&self) -> Option<Comment<'tu>> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 1940, line_content: "    pub fn get_comment_brief(&self) -> Option<String> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 1945, line_content: "    pub fn get_comment_range(&self) -> Option<SourceRange<'tu>> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 1950, line_content: "    pub fn get_completion_string(&self) -> Option<CompletionString> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 1955, line_content: "    pub fn get_child(&self, mut index: usize) -> Option<Entity<'tu>> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 1970, line_content: "    pub fn get_children(&self) -> Vec<Entity<'tu>> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 1980, line_content: "    pub fn get_definition(&self) -> Option<Entity<'tu>> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 1985, line_content: "    pub fn get_enum_constant_value(&self) -> Option<(i64, u64)> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 1998, line_content: "    pub fn get_enum_underlying_type(&self) -> Option<Type<'tu>> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 2004, line_content: "    pub fn get_exception_specification(&self) -> Option<ExceptionSpecification> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 2015, line_content: "    pub fn get_external_symbol(&self) -> Option<ExternalSymbol> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 2033, line_content: "    pub fn get_file(&self) -> Option<File<'tu>> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 2038, line_content: "    pub fn get_language(&self) -> Option<Language> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 2048, line_content: "    pub fn get_lexical_parent(&self) -> Option<Entity<'tu>> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 2053, line_content: "    pub fn get_linkage(&self) -> Option<Linkage> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 2064, line_content: "    pub fn get_mangled_name(&self) -> Option<String> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 2070, line_content: "    pub fn get_mangled_names(&self) -> Option<Vec<String>> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 2076, line_content: "    pub fn get_mangled_objc_names(&self) -> Option<Vec<String>> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 2081, line_content: "    pub fn get_module(&self) -> Option<Module<'tu>> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 2086, line_content: "    pub fn get_name(&self) -> Option<String> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 2091, line_content: "    pub fn get_name_ranges(&self) -> Vec<SourceRange<'tu>> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 2108, line_content: "    pub fn get_objc_attributes(&self) -> Option<ObjCAttributes> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 2119, line_content: "    pub fn get_objc_getter_name(&self) -> Option<String> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 2124, line_content: "    pub fn get_objc_ib_outlet_collection_type(&self) -> Option<Type<'tu>> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 2129, line_content: "    pub fn get_objc_receiver_type(&self) -> Option<Type<'tu>> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 2134, line_content: "    pub fn get_objc_selector_index(&self) -> Option<usize> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 2145, line_content: "    pub fn get_objc_setter_name(&self) -> Option<String> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 2150, line_content: "    pub fn get_objc_type_encoding(&self) -> Option<String> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 2156, line_content: "    pub fn get_objc_qualifiers(&self) -> Option<ObjCQualifiers> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 2167, line_content: "    pub fn get_offset_of_field(&self) -> Result<usize, OffsetofError> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 2174, line_content: "    pub fn get_overloaded_declarations(&self) -> Option<Vec<Entity<'tu>>> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 2187, line_content: "    pub fn get_overridden_methods(&self) -> Option<Vec<Entity<'tu>>> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 2204, line_content: "    pub fn get_platform_availability(&self) -> Option<Vec<PlatformAvailability>> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 2225, line_content: "    pub fn get_reference(&self) -> Option<Entity<'tu>> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 2230, line_content: "    pub fn get_semantic_parent(&self) -> Option<Entity<'tu>> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 2237, line_content: "    pub fn get_storage_class(&self) -> Option<StorageClass> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 2248, line_content: "    pub fn get_template(&self) -> Option<Entity<'tu>> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 2255, line_content: "    pub fn get_template_arguments(&self) -> Option<Vec<TemplateArgument<'tu>>> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 2290, line_content: "    pub fn get_template_kind(&self) -> Option<EntityKind> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 2301, line_content: "    pub fn get_tls_kind(&self) -> Option<TlsKind> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 2311, line_content: "    pub fn get_translation_unit(&self) -> &'tu TranslationUnit<'tu> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 2316, line_content: "    pub fn get_type(&self) -> Option<Type<'tu>> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 2321, line_content: "    pub fn get_typedef_underlying_type(&self) -> Option<Type<'tu>> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 2326, line_content: "    pub fn get_usr(&self) -> Option<Usr> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 2332, line_content: "    pub fn get_visibility(&self) -> Option<Visibility> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 2342, line_content: "    pub fn get_result_type(&self) -> Option<Type<'tu>> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 2348, line_content: "    pub fn has_attributes(&self) -> bool {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 2354, line_content: "    pub fn is_abstract_record(&self) -> bool {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 2364, line_content: "    pub fn is_anonymous(&self) -> bool {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 2370, line_content: "    pub fn is_anonymous_record_decl(&self) -> bool {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 2376, line_content: "    pub fn is_inline_namespace(&self) -> bool {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 2381, line_content: "    pub fn is_bit_field(&self) -> bool {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 2387, line_content: "    pub fn is_builtin_macro(&self) -> bool {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 2392, line_content: "    pub fn is_const_method(&self) -> bool {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 2398, line_content: "    pub fn is_converting_constructor(&self) -> bool {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 2404, line_content: "    pub fn is_copy_constructor(&self) -> bool {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 2410, line_content: "    pub fn is_default_constructor(&self) -> bool {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 2416, line_content: "    pub fn is_defaulted(&self) -> bool {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 2422, line_content: "    pub fn is_definition(&self) -> bool {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 2430, line_content: "    pub fn is_dynamic_call(&self) -> bool {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 2436, line_content: "    pub fn is_function_like_macro(&self) -> bool {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 2442, line_content: "    pub fn is_inline_function(&self) -> bool {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 2448, line_content: "    pub fn is_invalid_declaration(&self) -> bool {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 2454, line_content: "    pub fn is_move_constructor(&self) -> bool {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 2460, line_content: "    pub fn is_mutable(&self) -> bool {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 2466, line_content: "    pub fn is_objc_optional(&self) -> bool {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 2471, line_content: "    pub fn is_pure_virtual_method(&self) -> bool {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 2477, line_content: "    pub fn is_scoped(&self) -> bool {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 2482, line_content: "    pub fn is_static_method(&self) -> bool {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 2487, line_content: "    pub fn is_variadic(&self) -> bool {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 2492, line_content: "    pub fn is_virtual_base(&self) -> bool {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 2497, line_content: "    pub fn is_virtual_method(&self) -> bool {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 2507, line_content: "    pub fn visit_children<F: FnMut(Entity<'tu>, Entity<'tu>) -> EntityVisitResult>(" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 2511, line_content: "            fn call(&mut self, entity: Entity<'tu>, parent: Entity<'tu>) -> EntityVisitResult;" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 2516, line_content: "            fn call(&mut self, entity: Entity<'tu>, parent: Entity<'tu>) -> EntityVisitResult {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 2521, line_content: "        extern \"C\" fn visit(" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 2541, line_content: "    pub fn is_attribute(&self) -> bool {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 2546, line_content: "    pub fn is_declaration(&self) -> bool {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 2551, line_content: "    pub fn is_expression(&self) -> bool {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 2556, line_content: "    pub fn is_preprocessing(&self) -> bool {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 2561, line_content: "    pub fn is_reference(&self) -> bool {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 2566, line_content: "    pub fn is_statement(&self) -> bool {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 2571, line_content: "    pub fn is_unexposed(&self) -> bool {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 2578, line_content: "    pub fn is_in_main_file(&self) -> bool {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 2583, line_content: "    pub fn is_in_system_header(&self) -> bool {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 2589, line_content: "    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 2599, line_content: "    fn eq(&self, other: &Entity<'tu>) -> bool {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 2607, line_content: "    fn hash<H: hash::Hasher>(&self, hasher: &mut H) {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 2642, line_content: "    fn from_ptr(ptr: CXIndex) -> Index<'c> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 2651, line_content: "    pub fn new(_: &'c Clang, exclude: bool, diagnostics: bool) -> Index<'c> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 2658, line_content: "    pub fn parser<F: Into<PathBuf>>(&'c self, f: F) -> Parser<'c> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 2664, line_content: "    pub fn set_invocation_emission_path<P: AsRef<Path>>(&'c self, path: P) {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 2670, line_content: "    pub fn get_thread_options(&self) -> ThreadOptions {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 2677, line_content: "    pub fn set_thread_options(&mut self, options: ThreadOptions) {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 2683, line_content: "    fn drop(&mut self) {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 2689, line_content: "    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 2808, line_content: "    fn new<F: Into<PathBuf>>(index: &'tu Index<'tu>, file: F) -> Parser<'tu> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 2824, line_content: "    pub fn arguments<S: AsRef<str>>(&mut self, arguments: &[S]) -> &mut Parser<'tu> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 2830, line_content: "    pub fn unsaved(&mut self, unsaved: &[Unsaved]) -> &mut Parser<'tu> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 2844, line_content: "    pub fn parse(&self) -> Result<TranslationUnit<'tu>, SourceError> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 2886, line_content: "    fn from_raw(raw: CXPlatformAvailability) -> PlatformAvailability {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 2911, line_content: "    fn from_raw(ptr: CXPrintingPolicy, entity: &'e Entity<'e>) -> Self {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 2919, line_content: "    pub fn get_flag(&self, flag: PrintingPolicyFlag) -> bool {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 2924, line_content: "    pub fn set_flag(&self, flag: PrintingPolicyFlag, value: bool) -> &Self {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 2931, line_content: "    pub fn get_indentation_amount(&self) -> u8 {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 2936, line_content: "    pub fn set_indentation_amount(&self, value: u8) -> &Self {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 2944, line_content: "    pub fn print(&self) -> String {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 2951, line_content: "    fn drop(&mut self) {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 2972, line_content: "    fn from_raw(raw: CXTargetInfo) -> Target {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 3008, line_content: "    fn from_ptr(ptr: CXTranslationUnit) -> TranslationUnit<'i> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 3018, line_content: "    pub fn from_ast<F: AsRef<Path>>(" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 3029, line_content: "    pub fn get_diagnostics(&'i self) -> Vec<Diagnostic<'i>> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 3036, line_content: "    pub fn get_entity(&'i self) -> Entity<'i> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 3041, line_content: "    pub fn get_file<F: AsRef<Path>>(&'i self, file: F) -> Option<File<'i>> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 3047, line_content: "    pub fn get_memory_usage(&self) -> HashMap<MemoryUsage, usize> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 3065, line_content: "    pub fn get_skipped_ranges(&'i self) -> Vec<SourceRange<'i>> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 3077, line_content: "    pub fn get_target(&self) -> Target {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 3082, line_content: "    pub fn annotate(&'i self, tokens: &[Token<'i>]) -> Vec<Option<Entity<'i>>> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 3092, line_content: "    pub fn completer<F: Into<PathBuf>>(&self, file: F, line: u32, column: u32) -> Completer {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 3102, line_content: "    pub fn save<F: AsRef<Path>>(&self, file: F) -> Result<(), SaveError> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 3119, line_content: "    pub fn reparse(self, unsaved: &[Unsaved]) -> Result<TranslationUnit<'i>, SourceError> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 3134, line_content: "    fn drop(&mut self) {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 3140, line_content: "    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 3160, line_content: "    fn from_raw(raw: CXType, tu: &'tu TranslationUnit<'tu>) -> Type<'tu> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 3167, line_content: "    pub fn get_kind(&self) -> TypeKind {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 3172, line_content: "    pub fn get_display_name(&self) -> String {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 3182, line_content: "    pub fn get_alignof(&self) -> Result<usize, AlignofError> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 3194, line_content: "    pub fn get_offsetof<F: AsRef<str>>(&self, field: F) -> Result<usize, OffsetofError> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 3207, line_content: "    pub fn get_sizeof(&self) -> Result<usize, SizeofError> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 3214, line_content: "    pub fn get_address_space(&self) -> usize {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 3219, line_content: "    pub fn get_argument_types(&self) -> Option<Vec<Type<'tu>>> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 3227, line_content: "    pub fn get_calling_convention(&self) -> Option<CallingConvention> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 3239, line_content: "    pub fn get_canonical_type(&self) -> Type<'tu> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 3244, line_content: "    pub fn get_class_type(&self) -> Option<Type<'tu>> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 3249, line_content: "    pub fn get_declaration(&self) -> Option<Entity<'tu>> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 3255, line_content: "    pub fn get_elaborated_type(&self) -> Option<Type<'tu>> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 3260, line_content: "    pub fn get_element_type(&self) -> Option<Type<'tu>> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 3266, line_content: "    pub fn get_exception_specification(&self) -> Option<ExceptionSpecification> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 3277, line_content: "    pub fn get_fields(&self) -> Option<Vec<Entity<'tu>>> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 3292, line_content: "    pub fn get_modified_type(&self) -> Option<Type<'tu>> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 3298, line_content: "    pub fn get_nullability(&self) -> Option<Nullability> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 3309, line_content: "    pub fn get_objc_encoding(&self) -> Option<String> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 3315, line_content: "    pub fn get_objc_object_base_type(&self) -> Option<Type> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 3321, line_content: "    pub fn get_objc_protocol_declarations(&self) -> Vec<Entity<'tu>> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 3330, line_content: "    pub fn get_objc_type_arguments(&self) -> Vec<Type<'tu>> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 3338, line_content: "    pub fn get_pointee_type(&self) -> Option<Type<'tu>> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 3343, line_content: "    pub fn get_ref_qualifier(&self) -> Option<RefQualifier> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 3353, line_content: "    pub fn get_result_type(&self) -> Option<Type<'tu>> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 3358, line_content: "    pub fn get_size(&self) -> Option<usize> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 3369, line_content: "    pub fn get_template_argument_types(&self) -> Option<Vec<Option<Type<'tu>>>> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 3378, line_content: "    pub fn get_typedef_name(&self) -> Option<String> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 3383, line_content: "    pub fn is_const_qualified(&self) -> bool {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 3388, line_content: "    pub fn is_elaborated(&self) -> Option<bool> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 3399, line_content: "    pub fn is_pod(&self) -> bool {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 3404, line_content: "    pub fn is_restrict_qualified(&self) -> bool {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 3410, line_content: "    pub fn is_transparent_tag(&self) -> bool {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 3415, line_content: "    pub fn is_variadic(&self) -> bool {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 3420, line_content: "    pub fn is_volatile_qualified(&self) -> bool {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 3428, line_content: "    pub fn visit_fields<F: FnMut(Entity<'tu>) -> bool>(&self, f: F) -> Option<bool> {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 3434, line_content: "            fn call(&mut self, field: Entity<'tu>) -> bool;" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 3438, line_content: "            fn call(&mut self, field: Entity<'tu>) -> bool {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 3443, line_content: "        extern \"C\" fn visit(cursor: CXCursor, data: CXClientData) -> CXVisitorResult {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 3466, line_content: "    pub fn is_integer(&self) -> bool {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 3471, line_content: "    pub fn is_signed_integer(&self) -> bool {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 3476, line_content: "    pub fn is_unsigned_integer(&self) -> bool {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 3482, line_content: "    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 3491, line_content: "    fn eq(&self, other: &Type<'tu>) -> bool {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 3511, line_content: "    pub fn new<P: AsRef<Path>, C: AsRef<str>>(path: P, contents: C) -> Unsaved {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 3517, line_content: "    fn as_raw(&self) -> CXUnsavedFile {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 3539, line_content: "    pub fn from_objc_category<C: AsRef<str>>(class: C, category: C) -> Usr {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 3547, line_content: "    pub fn from_objc_class<C: AsRef<str>>(class: C) -> Usr {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 3553, line_content: "    pub fn from_objc_ivar<N: AsRef<str>>(class: &Usr, name: N) -> Usr {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 3561, line_content: "    pub fn from_objc_method<N: AsRef<str>>(class: &Usr, name: N, instance: bool) -> Usr {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 3571, line_content: "    pub fn from_objc_property<N: AsRef<str>>(class: &Usr, name: N) -> Usr {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 3579, line_content: "    pub fn from_objc_protocol<P: AsRef<str>>(protocol: P) -> Usr {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 3601, line_content: "    fn from_raw(raw: CXVersion) -> Version {" },
  { file_path: "vendor/clang-rs/src/lib.rs", line_number: 3615, line_content: "pub fn get_version() -> String {" },
  { file_path: "vendor/clang-rs/src/sonar.rs", line_number: 41, line_content: "    fn from_entity(entity: Entity) -> Option<DefinitionValue> {" },
  { file_path: "vendor/clang-rs/src/sonar.rs", line_number: 89, line_content: "    fn new(name: String, entity: Entity<'tu>, source: Option<Entity<'tu>>) -> Declaration<'tu> {" },
  { file_path: "vendor/clang-rs/src/sonar.rs", line_number: 110, line_content: "    fn new(name: String, value: DefinitionValue, entity: Entity<'tu>) -> Definition<'tu> {" },
  { file_path: "vendor/clang-rs/src/sonar.rs", line_number: 127, line_content: "    fn new(entities: vec::IntoIter<Entity<'tu>>) -> Definitions<'tu> {" },
  { file_path: "vendor/clang-rs/src/sonar.rs", line_number: 135, line_content: "    fn next(&mut self) -> Option<Definition<'tu>> {" },
  { file_path: "vendor/clang-rs/src/sonar.rs", line_number: 163, line_content: "    fn new(entities: vec::IntoIter<Entity<'tu>>) -> Enums<'tu> {" },
  { file_path: "vendor/clang-rs/src/sonar.rs", line_number: 171, line_content: "    fn next(&mut self) -> Option<Declaration<'tu>> {" },
  { file_path: "vendor/clang-rs/src/sonar.rs", line_number: 188, line_content: "    fn new(entities: vec::IntoIter<Entity<'tu>>) -> Functions<'tu> {" },
  { file_path: "vendor/clang-rs/src/sonar.rs", line_number: 196, line_content: "    fn next(&mut self) -> Option<Declaration<'tu>> {" },
  { file_path: "vendor/clang-rs/src/sonar.rs", line_number: 222, line_content: "    fn new(entities: vec::IntoIter<Entity<'tu>>) -> Structs<'tu> {" },
  { file_path: "vendor/clang-rs/src/sonar.rs", line_number: 230, line_content: "    fn next(&mut self) -> Option<Declaration<'tu>> {" },
  { file_path: "vendor/clang-rs/src/sonar.rs", line_number: 247, line_content: "    fn new(entities: vec::IntoIter<Entity<'tu>>) -> Typedefs<'tu> {" },
  { file_path: "vendor/clang-rs/src/sonar.rs", line_number: 255, line_content: "    fn next(&mut self) -> Option<Declaration<'tu>> {" },
  { file_path: "vendor/clang-rs/src/sonar.rs", line_number: 290, line_content: "    fn new(entities: vec::IntoIter<Entity<'tu>>) -> Unions<'tu> {" },
  { file_path: "vendor/clang-rs/src/sonar.rs", line_number: 298, line_content: "    fn next(&mut self) -> Option<Declaration<'tu>> {" },
  { file_path: "vendor/clang-rs/src/sonar.rs", line_number: 307, line_content: "fn is(type_: Type, prefix: &str) -> bool {" },
  { file_path: "vendor/clang-rs/src/sonar.rs", line_number: 311, line_content: "fn is_alias(type_: Type, name: &str) -> bool {" },
  { file_path: "vendor/clang-rs/src/sonar.rs", line_number: 323, line_content: "fn is_elaborated(type_: Type) -> bool {" },
  { file_path: "vendor/clang-rs/src/sonar.rs", line_number: 327, line_content: "fn next<'tu>(" },
  { file_path: "vendor/clang-rs/src/sonar.rs", line_number: 371, line_content: "pub fn find_definitions<'tu, E: Into<Vec<Entity<'tu>>>>(entities: E) -> Definitions<'tu> {" },
  { file_path: "vendor/clang-rs/src/sonar.rs", line_number: 378, line_content: "pub fn find_enums<'tu, E: Into<Vec<Entity<'tu>>>>(entities: E) -> Enums<'tu> {" },
  { file_path: "vendor/clang-rs/src/sonar.rs", line_number: 385, line_content: "pub fn find_functions<'tu, E: Into<Vec<Entity<'tu>>>>(entities: E) -> Functions<'tu> {" },
  { file_path: "vendor/clang-rs/src/sonar.rs", line_number: 392, line_content: "pub fn find_structs<'tu, E: Into<Vec<Entity<'tu>>>>(entities: E) -> Structs<'tu> {" },
  { file_path: "vendor/clang-rs/src/sonar.rs", line_number: 399, line_content: "pub fn find_typedefs<'tu, E: Into<Vec<Entity<'tu>>>>(entities: E) -> Typedefs<'tu> {" },
  { file_path: "vendor/clang-rs/src/sonar.rs", line_number: 406, line_content: "pub fn find_unions<'tu, E: Into<Vec<Entity<'tu>>>>(entities: E) -> Unions<'tu> {" },
  { file_path: "vendor/clang-rs/src/source.rs", line_number: 49, line_content: "    pub fn from_ptr(ptr: CXFile, tu: &'tu TranslationUnit<'tu>) -> File<'tu> {" },
  { file_path: "vendor/clang-rs/src/source.rs", line_number: 57, line_content: "    pub fn get_path(&self) -> PathBuf {" },
  { file_path: "vendor/clang-rs/src/source.rs", line_number: 62, line_content: "    pub fn get_time(&self) -> time_t {" },
  { file_path: "vendor/clang-rs/src/source.rs", line_number: 67, line_content: "    pub fn get_id(&self) -> (u64, u64, u64) {" },
  { file_path: "vendor/clang-rs/src/source.rs", line_number: 78, line_content: "    pub fn get_contents(&self) -> Option<String> {" },
  { file_path: "vendor/clang-rs/src/source.rs", line_number: 93, line_content: "    pub fn get_module(&self) -> Option<Module<'tu>> {" },
  { file_path: "vendor/clang-rs/src/source.rs", line_number: 102, line_content: "    pub fn get_skipped_ranges(&self) -> Vec<SourceRange<'tu>> {" },
  { file_path: "vendor/clang-rs/src/source.rs", line_number: 113, line_content: "    pub fn is_include_guarded(&self) -> bool {" },
  { file_path: "vendor/clang-rs/src/source.rs", line_number: 122, line_content: "    pub fn get_location(&self, line: u32, column: u32) -> SourceLocation<'tu> {" },
  { file_path: "vendor/clang-rs/src/source.rs", line_number: 133, line_content: "    pub fn get_offset_location(&self, offset: u32) -> SourceLocation<'tu> {" },
  { file_path: "vendor/clang-rs/src/source.rs", line_number: 140, line_content: "    pub fn get_includes(&self) -> Vec<Entity<'tu>> {" },
  { file_path: "vendor/clang-rs/src/source.rs", line_number: 150, line_content: "    pub fn get_references(&self, entity: Entity<'tu>) -> Vec<Entity<'tu>> {" },
  { file_path: "vendor/clang-rs/src/source.rs", line_number: 161, line_content: "    pub fn visit_includes<F: FnMut(Entity<'tu>, SourceRange<'tu>) -> bool>(&self, f: F) -> bool {" },
  { file_path: "vendor/clang-rs/src/source.rs", line_number: 167, line_content: "    pub fn visit_references<F: FnMut(Entity<'tu>, SourceRange<'tu>) -> bool>(" },
  { file_path: "vendor/clang-rs/src/source.rs", line_number: 175, line_content: "    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {" },
  { file_path: "vendor/clang-rs/src/source.rs", line_number: 181, line_content: "    fn eq(&self, other: &File<'tu>) -> bool {" },
  { file_path: "vendor/clang-rs/src/source.rs", line_number: 189, line_content: "    fn hash<H: hash::Hasher>(&self, hasher: &mut H) {" },
  { file_path: "vendor/clang-rs/src/source.rs", line_number: 222, line_content: "    pub fn from_ptr(ptr: CXModule, tu: &'tu TranslationUnit<'tu>) -> Module<'tu> {" },
  { file_path: "vendor/clang-rs/src/source.rs", line_number: 230, line_content: "    pub fn get_name(&self) -> String {" },
  { file_path: "vendor/clang-rs/src/source.rs", line_number: 235, line_content: "    pub fn get_full_name(&self) -> String {" },
  { file_path: "vendor/clang-rs/src/source.rs", line_number: 240, line_content: "    pub fn get_parent(&self) -> Option<Module<'tu>> {" },
  { file_path: "vendor/clang-rs/src/source.rs", line_number: 245, line_content: "    pub fn get_file(&self) -> File<'tu> {" },
  { file_path: "vendor/clang-rs/src/source.rs", line_number: 250, line_content: "    pub fn get_top_level_headers(&self) -> Vec<File<'tu>> {" },
  { file_path: "vendor/clang-rs/src/source.rs", line_number: 258, line_content: "    pub fn is_system(&self) -> bool {" },
  { file_path: "vendor/clang-rs/src/source.rs", line_number: 264, line_content: "    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {" },
  { file_path: "vendor/clang-rs/src/source.rs", line_number: 273, line_content: "    fn eq(&self, other: &Module<'tu>) -> bool {" },
  { file_path: "vendor/clang-rs/src/source.rs", line_number: 284, line_content: "        fn uninit<T>() -> mem::MaybeUninit<T> { mem::MaybeUninit::uninit() }" },
  { file_path: "vendor/clang-rs/src/source.rs", line_number: 313, line_content: "    pub fn from_raw(raw: CXSourceLocation, tu: &'tu TranslationUnit<'tu>) -> SourceLocation<'tu> {" },
  { file_path: "vendor/clang-rs/src/source.rs", line_number: 323, line_content: "    pub fn get_expansion_location(&self) -> Location<'tu> {" },
  { file_path: "vendor/clang-rs/src/source.rs", line_number: 332, line_content: "    pub fn get_file_location(&self) -> Location<'tu> {" },
  { file_path: "vendor/clang-rs/src/source.rs", line_number: 338, line_content: "    pub fn get_presumed_location(&self) -> (String, u32, u32) {" },
  { file_path: "vendor/clang-rs/src/source.rs", line_number: 340, line_content: "            fn uninit<T>() -> mem::MaybeUninit<T> { mem::MaybeUninit::uninit() }" },
  { file_path: "vendor/clang-rs/src/source.rs", line_number: 353, line_content: "    pub fn get_spelling_location(&self) -> Location<'tu> {" },
  { file_path: "vendor/clang-rs/src/source.rs", line_number: 358, line_content: "    pub fn get_entity(&self) -> Option<Entity<'tu>> {" },
  { file_path: "vendor/clang-rs/src/source.rs", line_number: 363, line_content: "    pub fn is_in_main_file(&self) -> bool {" },
  { file_path: "vendor/clang-rs/src/source.rs", line_number: 368, line_content: "    pub fn is_in_system_header(&self) -> bool {" },
  { file_path: "vendor/clang-rs/src/source.rs", line_number: 374, line_content: "    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {" },
  { file_path: "vendor/clang-rs/src/source.rs", line_number: 386, line_content: "    fn eq(&self, other: &SourceLocation<'tu>) -> bool {" },
  { file_path: "vendor/clang-rs/src/source.rs", line_number: 394, line_content: "    fn hash<H: hash::Hasher>(&self, hasher: &mut H) {" },
  { file_path: "vendor/clang-rs/src/source.rs", line_number: 412, line_content: "    pub fn from_raw(raw: CXSourceRange, tu: &'tu TranslationUnit<'tu>) -> SourceRange<'tu> {" },
  { file_path: "vendor/clang-rs/src/source.rs", line_number: 417, line_content: "    pub fn new(start: SourceLocation<'tu>, end: SourceLocation<'tu>) -> SourceRange<'tu> {" },
  { file_path: "vendor/clang-rs/src/source.rs", line_number: 424, line_content: "    pub fn get_start(&self) -> SourceLocation<'tu> {" },
  { file_path: "vendor/clang-rs/src/source.rs", line_number: 429, line_content: "    pub fn get_end(&self) -> SourceLocation<'tu> {" },
  { file_path: "vendor/clang-rs/src/source.rs", line_number: 434, line_content: "    pub fn is_in_main_file(&self) -> bool {" },
  { file_path: "vendor/clang-rs/src/source.rs", line_number: 439, line_content: "    pub fn is_in_system_header(&self) -> bool {" },
  { file_path: "vendor/clang-rs/src/source.rs", line_number: 444, line_content: "    pub fn tokenize(&self) -> Vec<Token<'tu>> {" },
  { file_path: "vendor/clang-rs/src/source.rs", line_number: 464, line_content: "    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {" },
  { file_path: "vendor/clang-rs/src/source.rs", line_number: 473, line_content: "    fn eq(&self, other: &SourceRange<'tu>) -> bool {" },
  { file_path: "vendor/clang-rs/src/source.rs", line_number: 481, line_content: "    fn hash<H: hash::Hasher>(&self, hasher: &mut H) {" },
  { file_path: "vendor/clang-rs/src/source.rs", line_number: 491, line_content: "fn visit<'tu, F, G>(tu: &'tu TranslationUnit<'tu>, f: F, g: G) -> bool" },
  { file_path: "vendor/clang-rs/src/source.rs", line_number: 496, line_content: "        fn call(&mut self, entity: Entity<'tu>, range: SourceRange<'tu>) -> bool;" },
  { file_path: "vendor/clang-rs/src/source.rs", line_number: 500, line_content: "        fn call(&mut self, entity: Entity<'tu>, range: SourceRange<'tu>) -> bool {" },
  { file_path: "vendor/clang-rs/src/source.rs", line_number: 505, line_content: "    extern \"C\" fn visit(data: CXClientData, cursor: CXCursor, range: CXSourceRange) -> CXVisitorResult {" },
  { file_path: "vendor/clang-rs/src/token.rs", line_number: 65, line_content: "    pub fn from_raw(raw: CXToken, tu: &'tu TranslationUnit<'tu>) -> Token<'tu> {" },
  { file_path: "vendor/clang-rs/src/token.rs", line_number: 72, line_content: "    pub fn get_kind(&self) -> TokenKind {" },
  { file_path: "vendor/clang-rs/src/token.rs", line_number: 77, line_content: "    pub fn get_spelling(&self) -> String {" },
  { file_path: "vendor/clang-rs/src/token.rs", line_number: 82, line_content: "    pub fn get_location(&self) -> SourceLocation<'tu> {" },
  { file_path: "vendor/clang-rs/src/token.rs", line_number: 87, line_content: "    pub fn get_range(&self) -> SourceRange<'tu> {" },
  { file_path: "vendor/clang-rs/src/token.rs", line_number: 93, line_content: "    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {" },
  { file_path: "vendor/clang-rs/src/utility.rs", line_number: 43, line_content: "            $($(#[$odoc])+ pub fn $option(&mut self, $option: bool) -> &mut $name<'tu> {" },
  { file_path: "vendor/clang-rs/src/utility.rs", line_number: 98, line_content: "            fn from(flags: ::clang_sys::$underlying) -> $name {" },
  { file_path: "vendor/clang-rs/src/utility.rs", line_number: 104, line_content: "            fn from(options: $name) -> ::clang_sys::$underlying {" },
  { file_path: "vendor/clang-rs/src/utility.rs", line_number: 114, line_content: "    }, $fname:ident: #[$feature:meta] {" },
  { file_path: "vendor/clang-rs/src/utility.rs", line_number: 118, line_content: "        mod $fname {" },
  { file_path: "vendor/clang-rs/src/utility.rs", line_number: 129, line_content: "        mod $fname {" },
  { file_path: "vendor/clang-rs/src/utility.rs", line_number: 138, line_content: "        pub use $fname::{$name};" },
  { file_path: "vendor/clang-rs/src/utility.rs", line_number: 150, line_content: "    fn from_error(error: T) -> Result<(), Self>;" },
  { file_path: "vendor/clang-rs/src/utility.rs", line_number: 157, line_content: "    fn map<U, F: FnOnce(Self) -> U>(self, f: F) -> Option<U>;" },
  { file_path: "vendor/clang-rs/src/utility.rs", line_number: 161, line_content: "    fn map<U, F: FnOnce(*mut c_void) -> U>(self, f: F) -> Option<U> {" },
  { file_path: "vendor/clang-rs/src/utility.rs", line_number: 171, line_content: "    fn map<U, F: FnOnce(CXComment) -> U>(self, f: F) -> Option<U> {" },
  { file_path: "vendor/clang-rs/src/utility.rs", line_number: 181, line_content: "    fn map<U, F: FnOnce(CXCursor) -> U>(self, f: F) -> Option<U> {" },
  { file_path: "vendor/clang-rs/src/utility.rs", line_number: 194, line_content: "    fn map<U, F: FnOnce(CXSourceLocation) -> U>(self, f: F) -> Option<U> {" },
  { file_path: "vendor/clang-rs/src/utility.rs", line_number: 206, line_content: "    fn map<U, F: FnOnce(CXSourceRange) -> U>(self, f: F) -> Option<U> {" },
  { file_path: "vendor/clang-rs/src/utility.rs", line_number: 218, line_content: "    fn map<U, F: FnOnce(CXString) -> U>(self, f: F) -> Option<U> {" },
  { file_path: "vendor/clang-rs/src/utility.rs", line_number: 228, line_content: "    fn map<U, F: FnOnce(CXType) -> U>(self, f: F) -> Option<U> {" },
  { file_path: "vendor/clang-rs/src/utility.rs", line_number: 238, line_content: "    fn map<U, F: FnOnce(CXVersion) -> U>(self, f: F) -> Option<U> {" },
  { file_path: "vendor/clang-rs/src/utility.rs", line_number: 251, line_content: "pub fn addressof<T>(value: &mut T) -> *mut c_void {" },
  { file_path: "vendor/clang-rs/src/utility.rs", line_number: 255, line_content: "pub fn from_path<P: AsRef<Path>>(path: P) -> CString {" },
  { file_path: "vendor/clang-rs/src/utility.rs", line_number: 259, line_content: "pub fn to_path(clang: CXString) -> PathBuf {" },
  { file_path: "vendor/clang-rs/src/utility.rs", line_number: 264, line_content: "pub fn from_string<S: AsRef<str>>(string: S) -> CString {" },
  { file_path: "vendor/clang-rs/src/utility.rs", line_number: 268, line_content: "pub unsafe fn to_string(clang: CXString) -> String {" },
  { file_path: "vendor/clang-rs/src/utility.rs", line_number: 275, line_content: "pub fn to_string_option(clang: CXString) -> Option<String> {" },
  { file_path: "vendor/clang-rs/src/utility.rs", line_number: 286, line_content: "pub fn to_string_set_option(clang: *mut CXStringSet) -> Option<Vec<String>> {" },
  { file_path: "vendor/clang-rs/src/utility.rs", line_number: 301, line_content: "pub fn with_string<S: AsRef<str>, T, F: FnOnce(CXString) -> T>(string: S, f: F) -> T {" },
  { file_path: "vendor/clang-rs/tests/completion.rs", line_number: 4, line_content: "pub fn test(clang: &Clang) {" },
  { file_path: "vendor/clang-rs/tests/diagnostic.rs", line_number: 4, line_content: "pub fn test(clang: &Clang) {" },
  { file_path: "vendor/clang-rs/tests/documentation.rs", line_number: 4, line_content: "pub fn test(clang: &Clang) {" },
  { file_path: "vendor/clang-rs/tests/sonar.rs", line_number: 3, line_content: "pub fn test(clang: &Clang) {" },
  { file_path: "vendor/clang-rs/tests/sonar.rs", line_number: 260, line_content: "    fn test_headers(clang: &Clang) {" },
  { file_path: "vendor/clang-rs/tests/sonar.rs", line_number: 261, line_content: "        fn test(clang: &Clang, header: &str) {" },
  { file_path: "vendor/clang-rs/tests/sonar.rs", line_number: 302, line_content: "    fn test_headers(_: &Clang) { }" },
  { file_path: "vendor/clang-rs/tests/source.rs", line_number: 7, line_content: "pub fn test(clang: &Clang) {" },
  { file_path: "vendor/clang-rs/tests/source.rs", line_number: 12, line_content: "        fn test_get_contents(file: &File) {" },
  { file_path: "vendor/clang-rs/tests/source.rs", line_number: 17, line_content: "        fn test_get_contents(_: &File) { }" },
  { file_path: "vendor/clang-rs/tests/source.rs", line_number: 42, line_content: "        fn test_get_skipped_ranges<'tu>(tu: TranslationUnit<'tu>, f: &Path) {" },
  { file_path: "vendor/clang-rs/tests/source.rs", line_number: 54, line_content: "        fn test_get_skipped_ranges<'tu>(tu: TranslationUnit<'tu>, f: &Path) {" },
  { file_path: "vendor/clang-rs/tests/source.rs", line_number: 62, line_content: "    super::with_file(&clang, \"#ifndef _TEST_H_\n#define _TEST_H_\nint a = 322;\n#endif\", |_, f| {" },
  { file_path: "vendor/clang-rs/tests/tests.rs", line_number: 39, line_content: "fn with_entity<'c, F: FnOnce(Entity)>(clang: &'c Clang, contents: &str, f: F) {" },
  { file_path: "vendor/clang-rs/tests/tests.rs", line_number: 43, line_content: "fn with_file<'c, F: FnOnce(&Path, File)>(clang: &'c Clang, contents: &str, f: F) {" },
  { file_path: "vendor/clang-rs/tests/tests.rs", line_number: 51, line_content: "fn with_temporary_directory<F: FnOnce(&Path)>(f: F) {" },
  { file_path: "vendor/clang-rs/tests/tests.rs", line_number: 68, line_content: "fn with_temporary_file<F: FnOnce(&Path, &Path)>(name: &str, contents: &str, f: F) {" },
  { file_path: "vendor/clang-rs/tests/tests.rs", line_number: 72, line_content: "fn with_temporary_files<F: FnOnce(&Path, Vec<PathBuf>)>(files: &[(&str, &str)], f: F) {" },
  { file_path: "vendor/clang-rs/tests/tests.rs", line_number: 84, line_content: "fn with_translation_unit<'c, F>(" },
  { file_path: "vendor/clang-rs/tests/tests.rs", line_number: 93, line_content: "fn with_types<'c, F: FnOnce(Vec<Type>)>(clang: &'c Clang, contents: &str, f: F) {" },
  { file_path: "vendor/clang-rs/tests/tests.rs", line_number: 118, line_content: "fn test() {" },
  { file_path: "vendor/clang-rs/tests/tests.rs", line_number: 143, line_content: "        fn test_is_abstract_record(children: &[Entity]) {" },
  { file_path: "vendor/clang-rs/tests/tests.rs", line_number: 149, line_content: "        fn test_is_abstract_record(_: &[Entity]) { }" },
  { file_path: "vendor/clang-rs/tests/tests.rs", line_number: 161, line_content: "        fn test_get_tls_kind(children: &[Entity]) {" },
  { file_path: "vendor/clang-rs/tests/tests.rs", line_number: 168, line_content: "        fn test_get_tls_kind(_: &[Entity]) { }" },
  { file_path: "vendor/clang-rs/tests/tests.rs", line_number: 175, line_content: "        fn test_target(tu: &TranslationUnit) {" },
  { file_path: "vendor/clang-rs/tests/tests.rs", line_number: 182, line_content: "        fn test_target(_: &TranslationUnit) { }" },
  { file_path: "vendor/clang-rs/tests/tests.rs", line_number: 229, line_content: "        fn test_evaluate<'tu>(expressions: &[Entity<'tu>]) {" },
  { file_path: "vendor/clang-rs/tests/tests.rs", line_number: 241, line_content: "        fn test_evaluate<'tu>(expressions: &[Entity<'tu>]) {" },
  { file_path: "vendor/clang-rs/tests/tests.rs", line_number: 253, line_content: "        fn test_evaluate<'tu>(_: &[Entity<'tu>]) { }" },
  { file_path: "vendor/clang-rs/tests/tests.rs", line_number: 320, line_content: "        fn test_is_anonymous<'tu>(children: &[Entity<'tu>]) {" },
  { file_path: "vendor/clang-rs/tests/tests.rs", line_number: 329, line_content: "        fn test_is_anonymous<'tu>(_: &[Entity<'tu>]) { }" },
  { file_path: "vendor/clang-rs/tests/tests.rs", line_number: 411, line_content: "        fn test_get_exception_specification(children: &[Entity]) {" },
  { file_path: "vendor/clang-rs/tests/tests.rs", line_number: 418, line_content: "        fn test_get_exception_specification(_: &[Entity]) { }" },
  { file_path: "vendor/clang-rs/tests/tests.rs", line_number: 483, line_content: "        fn test_get_storage_class<'tu>(entity: Entity<'tu>) {" },
  { file_path: "vendor/clang-rs/tests/tests.rs", line_number: 492, line_content: "        fn test_get_storage_class<'tu>(_: Entity<'tu>) { }" },
  { file_path: "vendor/clang-rs/tests/tests.rs", line_number: 556, line_content: "        fn test_get_template_arguments<'tu>(children: &[Entity<'tu>]) {" },
  { file_path: "vendor/clang-rs/tests/tests.rs", line_number: 566, line_content: "        fn test_get_template_arguments<'tu>(_: &[Entity<'tu>]) { }" },
  { file_path: "vendor/clang-rs/tests/tests.rs", line_number: 603, line_content: "        fn test_get_visibility<'tu>(children: &[Entity<'tu>]) {" },
  { file_path: "vendor/clang-rs/tests/tests.rs", line_number: 609, line_content: "        fn test_get_visibility<'tu>(_: &[Entity<'tu>]) { }" },
  { file_path: "vendor/clang-rs/tests/tests.rs", line_number: 624, line_content: "        fn test_attributes<'tu>(children: &[Entity<'tu>]) {" },
  { file_path: "vendor/clang-rs/tests/tests.rs", line_number: 630, line_content: "        fn test_attributes<'tu>(_: &[Entity<'tu>]) { }" },
  { file_path: "vendor/clang-rs/tests/tests.rs", line_number: 673, line_content: "        fn test_is_scoped(children: &[Entity]) {" },
  { file_path: "vendor/clang-rs/tests/tests.rs", line_number: 679, line_content: "        fn test_is_scoped(_: &[Entity]) { }" },
  { file_path: "vendor/clang-rs/tests/tests.rs", line_number: 698, line_content: "        fn test_constructors<'tu>(children: &[Entity<'tu>]) {" },
  { file_path: "vendor/clang-rs/tests/tests.rs", line_number: 716, line_content: "        fn test_constructors<'tu>(_: &[Entity<'tu>]) { }" },
  { file_path: "vendor/clang-rs/tests/tests.rs", line_number: 756, line_content: "        fn test_get_external_symbol(children: &[Entity]) {" },
  { file_path: "vendor/clang-rs/tests/tests.rs", line_number: 767, line_content: "        fn test_get_external_symbol(_: &[Entity]) { }" },
  { file_path: "vendor/clang-rs/tests/tests.rs", line_number: 784, line_content: "        fn test_is_mutable<'tu>(children: &[Entity<'tu>]) {" },
  { file_path: "vendor/clang-rs/tests/tests.rs", line_number: 790, line_content: "        fn test_is_mutable<'tu>(_: &[Entity<'tu>]) { }" },
  { file_path: "vendor/clang-rs/tests/tests.rs", line_number: 854, line_content: "        fn test_get_mangled_objc_names(entity: &Entity) {" },
  { file_path: "vendor/clang-rs/tests/tests.rs", line_number: 860, line_content: "        fn test_get_mangled_objc_names(entity: &Entity) {" },
  { file_path: "vendor/clang-rs/tests/tests.rs", line_number: 866, line_content: "        fn test_get_mangled_objc_names(_: &Entity) { }" },
  { file_path: "vendor/clang-rs/tests/tests.rs", line_number: 882, line_content: "        fn test_get_offset_of_field(fields: &[Entity]) {" },
  { file_path: "vendor/clang-rs/tests/tests.rs", line_number: 888, line_content: "        fn test_get_offset_of_field(_: &[Entity]) {}" },
  { file_path: "vendor/clang-rs/tests/tests.rs", line_number: 901, line_content: "        fn test_is_invalid_declaration(entity: Entity) {" },
  { file_path: "vendor/clang-rs/tests/tests.rs", line_number: 906, line_content: "        fn test_is_invalid_declaration(_: Entity) {}" },
  { file_path: "vendor/clang-rs/tests/tests.rs", line_number: 921, line_content: "        fn test_pretty_printer(entity: Entity) {" },
  { file_path: "vendor/clang-rs/tests/tests.rs", line_number: 954, line_content: "        fn test_pretty_printer(_: Entity) {}" },
  { file_path: "vendor/clang-rs/tests/tests.rs", line_number: 969, line_content: "        fn test_get_objc_getter_setter_name(properties: &[Entity]) {" },
  { file_path: "vendor/clang-rs/tests/tests.rs", line_number: 975, line_content: "        fn test_get_objc_getter_setter_name(_: &[Entity]) {}" },
  { file_path: "vendor/clang-rs/tests/tests.rs", line_number: 1107, line_content: "        fn test_get_elaborated_type<'tu>(types: &[Type<'tu>]) {" },
  { file_path: "vendor/clang-rs/tests/tests.rs", line_number: 1112, line_content: "        fn test_get_elaborated_type<'tu>(_: &[Type<'tu>]) { }" },
  { file_path: "vendor/clang-rs/tests/tests.rs", line_number: 1138, line_content: "        fn test_get_exception_specification(ts: &[Type]) {" },
  { file_path: "vendor/clang-rs/tests/tests.rs", line_number: 1145, line_content: "        fn test_get_exception_specification(_: &[Type]) { }" },
  { file_path: "vendor/clang-rs/tests/tests.rs", line_number: 1156, line_content: "        fn test_get_fields<'tu>(entity: Entity<'tu>) {" },
  { file_path: "vendor/clang-rs/tests/tests.rs", line_number: 1161, line_content: "        fn test_get_fields<'tu>(_: Entity<'tu>) { }" },
  { file_path: "vendor/clang-rs/tests/tests.rs", line_number: 1213, line_content: "        fn test_get_typedef_name(ts: &[Type]) {" },
  { file_path: "vendor/clang-rs/tests/tests.rs", line_number: 1220, line_content: "        fn test_get_typedef_name(_: &[Type]) { }" },
  { file_path: "vendor/clang-rs/tests/tests.rs", line_number: 1279, line_content: "        fn test_objc_object_type(e: &[Entity]) {" },
  { file_path: "vendor/clang-rs/tests/tests.rs", line_number: 1291, line_content: "        fn test_objc_object_type(_: &[Entity]) {}" },
  { file_path: "vendor/clang-rs/tests/token.rs", line_number: 4, line_content: "pub fn test(clang: &Clang) {" },
  { file_path: "vendor/clang-rs/tests/token.rs", line_number: 27, line_content: "        fn test_annotate<'tu>(tu: &'tu TranslationUnit<'tu>, tokens: &[Token<'tu>]) {" },
  { file_path: "vendor/clang-sys/bindgen-test/build.rs", line_number: 6, line_content: "fn main() {" },
  { file_path: "vendor/clang-sys/bindgen-test/src/main.rs", line_number: 7, line_content: "fn main() {" },
  { file_path: "vendor/clang-sys/build/common.rs", line_number: 21, line_content: "fn add_command_error(name: &str, path: &str, arguments: &[&str], message: String) {" },
  { file_path: "vendor/clang-sys/build/common.rs", line_number: 49, line_content: "    pub fn discard(mut self) {" },
  { file_path: "vendor/clang-sys/build/common.rs", line_number: 55, line_content: "    fn drop(&mut self) {" },
  { file_path: "vendor/clang-sys/build/common.rs", line_number: 101, line_content: "fn run_command(name: &str, path: &str, arguments: &[&str]) -> Option<String> {" },
  { file_path: "vendor/clang-sys/build/common.rs", line_number: 127, line_content: "pub fn run_llvm_config(arguments: &[&str]) -> Option<String> {" },
  { file_path: "vendor/clang-sys/build/common.rs", line_number: 134, line_content: "pub fn run_xcode_select(arguments: &[&str]) -> Option<String> {" },
  { file_path: "vendor/clang-sys/build/common.rs", line_number: 208, line_content: "fn search_directory(directory: &Path, filenames: &[String]) -> Vec<(PathBuf, String)> {" },
  { file_path: "vendor/clang-sys/build/common.rs", line_number: 249, line_content: "fn search_directories(directory: &Path, filenames: &[String]) -> Vec<(PathBuf, String)> {" },
  { file_path: "vendor/clang-sys/build/common.rs", line_number: 267, line_content: "pub fn search_libclang_directories(filenames: &[String], variable: &str) -> Vec<(PathBuf, String)> {" },
  { file_path: "vendor/clang-sys/build/dynamic.rs", line_number: 15, line_content: "fn parse_elf_header(path: &Path) -> io::Result<u8> {" },
  { file_path: "vendor/clang-sys/build/dynamic.rs", line_number: 27, line_content: "fn parse_pe_header(path: &Path) -> io::Result<(u16, u16)> {" },
  { file_path: "vendor/clang-sys/build/dynamic.rs", line_number: 60, line_content: "fn validate_library(path: &Path) -> Result<(), String> {" },
  { file_path: "vendor/clang-sys/build/dynamic.rs", line_number: 106, line_content: "fn parse_version(filename: &str) -> Vec<u32> {" },
  { file_path: "vendor/clang-sys/build/dynamic.rs", line_number: 120, line_content: "fn search_libclang_directories(runtime: bool) -> Result<Vec<(PathBuf, String, Vec<u32>)>, String> {" },
  { file_path: "vendor/clang-sys/build/dynamic.rs", line_number: 191, line_content: "pub fn find(runtime: bool) -> Result<(PathBuf, String), String> {" },
  { file_path: "vendor/clang-sys/build/dynamic.rs", line_number: 220, line_content: "pub fn link() {" },
  { file_path: "vendor/clang-sys/build/static.rs", line_number: 31, line_content: "fn get_library_name(path: &Path) -> Option<String> {" },
  { file_path: "vendor/clang-sys/build/static.rs", line_number: 43, line_content: "fn get_llvm_libraries() -> Vec<String> {" },
  { file_path: "vendor/clang-sys/build/static.rs", line_number: 61, line_content: "fn get_clang_libraries<P: AsRef<Path>>(directory: P) -> Vec<String> {" },
  { file_path: "vendor/clang-sys/build/static.rs", line_number: 79, line_content: "fn find() -> PathBuf {" },
  { file_path: "vendor/clang-sys/build/static.rs", line_number: 103, line_content: "pub fn link() {" },
  { file_path: "vendor/clang-sys/build.rs", line_number: 33, line_content: "fn copy(source: &str, destination: &Path) {" },
  { file_path: "vendor/clang-sys/build.rs", line_number: 51, line_content: "fn main() {" },
  { file_path: "vendor/clang-sys/build.rs", line_number: 66, line_content: "fn main() {" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 35, line_content: "pub type CXCursorVisitor = extern \"C\" fn(CXCursor, CXCursor, CXClientData) -> CXChildVisitResult;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 37, line_content: "pub type CXFieldVisitor = extern \"C\" fn(CXCursor, CXClientData) -> CXVisitorResult;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 38, line_content: "pub type CXInclusionVisitor = extern \"C\" fn(CXFile, *mut CXSourceLocation, c_uint, CXClientData);" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 81, line_content: "            fn default() -> $ty {" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 89, line_content: "            fn default() -> $ty {" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 1500, line_content: "    pub visit: Option<extern \"C\" fn(*mut c_void, CXCursor, CXSourceRange) -> CXVisitorResult>," },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 1843, line_content: "    pub abortQuery: Option<extern \"C\" fn(CXClientData, *mut c_void) -> c_int>," },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 1844, line_content: "    pub diagnostic: Option<extern \"C\" fn(CXClientData, CXDiagnosticSet, *mut c_void)>," },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 1845, line_content: "    pub enteredMainFile: Option<extern \"C\" fn(CXClientData, CXFile, *mut c_void) -> CXIdxClientFile>," },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 1846, line_content: "    pub ppIncludedFile: Option<extern \"C\" fn(CXClientData, *const CXIdxIncludedFileInfo) -> CXIdxClientFile>," },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 1847, line_content: "    pub importedASTFile: Option<extern \"C\" fn(CXClientData, *const CXIdxImportedASTFileInfo) -> CXIdxClientASTFile>," },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 1848, line_content: "    pub startedTranslationUnit: Option<extern \"C\" fn(CXClientData, *mut c_void) -> CXIdxClientContainer>," },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 1849, line_content: "    pub indexDeclaration: Option<extern \"C\" fn(CXClientData, *const CXIdxDeclInfo)>," },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 1850, line_content: "    pub indexEntityReference: Option<extern \"C\" fn(CXClientData, *const CXIdxEntityRefInfo)>," },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 1860, line_content: "    pub fn clang_CXCursorSet_contains(set: CXCursorSet, cursor: CXCursor) -> c_uint;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 1861, line_content: "    pub fn clang_CXCursorSet_insert(set: CXCursorSet, cursor: CXCursor) -> c_uint;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 1862, line_content: "    pub fn clang_CXIndex_getGlobalOptions(index: CXIndex) -> CXGlobalOptFlags;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 1863, line_content: "    pub fn clang_CXIndex_setGlobalOptions(index: CXIndex, flags: CXGlobalOptFlags);" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 1866, line_content: "    pub fn clang_CXIndex_setInvocationEmissionPathOption(index: CXIndex, path: *const c_char);" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 1869, line_content: "    pub fn clang_CXXConstructor_isConvertingConstructor(cursor: CXCursor) -> c_uint;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 1872, line_content: "    pub fn clang_CXXConstructor_isCopyConstructor(cursor: CXCursor) -> c_uint;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 1875, line_content: "    pub fn clang_CXXConstructor_isDefaultConstructor(cursor: CXCursor) -> c_uint;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 1878, line_content: "    pub fn clang_CXXConstructor_isMoveConstructor(cursor: CXCursor) -> c_uint;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 1881, line_content: "    pub fn clang_CXXField_isMutable(cursor: CXCursor) -> c_uint;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 1882, line_content: "    pub fn clang_CXXMethod_isConst(cursor: CXCursor) -> c_uint;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 1885, line_content: "    pub fn clang_CXXMethod_isCopyAssignmentOperator(cursor: CXCursor) -> c_uint;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 1888, line_content: "    pub fn clang_CXXMethod_isDefaulted(cursor: CXCursor) -> c_uint;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 1891, line_content: "    pub fn clang_CXXMethod_isDeleted(cursor: CXCursor) -> c_uint;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 1894, line_content: "    pub fn clang_CXXMethod_isMoveAssignmentOperator(cursor: CXCursor) -> c_uint;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 1895, line_content: "    pub fn clang_CXXMethod_isPureVirtual(cursor: CXCursor) -> c_uint;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 1896, line_content: "    pub fn clang_CXXMethod_isStatic(cursor: CXCursor) -> c_uint;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 1897, line_content: "    pub fn clang_CXXMethod_isVirtual(cursor: CXCursor) -> c_uint;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 1900, line_content: "    pub fn clang_CXXMethod_isExplicit(cursor: CXCursor) -> c_uint;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 1903, line_content: "    pub fn clang_CXXRecord_isAbstract(cursor: CXCursor) -> c_uint;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 1904, line_content: "    pub fn clang_CompilationDatabase_dispose(database: CXCompilationDatabase);" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 1905, line_content: "    pub fn clang_CompilationDatabase_fromDirectory(directory: *const c_char, error: *mut CXCompilationDatabase_Error) -> CXCompilationDatabase;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 1906, line_content: "    pub fn clang_CompilationDatabase_getAllCompileCommands(database: CXCompilationDatabase) -> CXCompileCommands;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 1907, line_content: "    pub fn clang_CompilationDatabase_getCompileCommands(database: CXCompilationDatabase, filename: *const c_char) -> CXCompileCommands;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 1908, line_content: "    pub fn clang_CompileCommand_getArg(command: CXCompileCommand, index: c_uint) -> CXString;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 1909, line_content: "    pub fn clang_CompileCommand_getDirectory(command: CXCompileCommand) -> CXString;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 1912, line_content: "    pub fn clang_CompileCommand_getFilename(command: CXCompileCommand) -> CXString;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 1915, line_content: "    pub fn clang_CompileCommand_getMappedSourceContent(command: CXCompileCommand, index: c_uint) -> CXString;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 1918, line_content: "    pub fn clang_CompileCommand_getMappedSourcePath(command: CXCompileCommand, index: c_uint) -> CXString;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 1919, line_content: "    pub fn clang_CompileCommand_getNumArgs(command: CXCompileCommand) -> c_uint;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 1920, line_content: "    pub fn clang_CompileCommand_getNumMappedSources(command: CXCompileCommand) -> c_uint;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 1921, line_content: "    pub fn clang_CompileCommands_dispose(command: CXCompileCommands);" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 1922, line_content: "    pub fn clang_CompileCommands_getCommand(command: CXCompileCommands, index: c_uint) -> CXCompileCommand;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 1923, line_content: "    pub fn clang_CompileCommands_getSize(command: CXCompileCommands) -> c_uint;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 1926, line_content: "    pub fn clang_Cursor_Evaluate(cursor: CXCursor) -> CXEvalResult;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 1927, line_content: "    pub fn clang_Cursor_getArgument(cursor: CXCursor, index: c_uint) -> CXCursor;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 1928, line_content: "    pub fn clang_Cursor_getBriefCommentText(cursor: CXCursor) -> CXString;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 1931, line_content: "    pub fn clang_Cursor_getCXXManglings(cursor: CXCursor) -> *mut CXStringSet;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 1932, line_content: "    pub fn clang_Cursor_getCommentRange(cursor: CXCursor) -> CXSourceRange;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 1935, line_content: "    pub fn clang_Cursor_getMangling(cursor: CXCursor) -> CXString;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 1936, line_content: "    pub fn clang_Cursor_getModule(cursor: CXCursor) -> CXModule;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 1937, line_content: "    pub fn clang_Cursor_getNumArguments(cursor: CXCursor) -> c_int;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 1940, line_content: "    pub fn clang_Cursor_getNumTemplateArguments(cursor: CXCursor) -> c_int;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 1941, line_content: "    pub fn clang_Cursor_getObjCDeclQualifiers(cursor: CXCursor) -> CXObjCDeclQualifierKind;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 1944, line_content: "    pub fn clang_Cursor_getObjCManglings(cursor: CXCursor) -> *mut CXStringSet;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 1945, line_content: "    pub fn clang_Cursor_getObjCPropertyAttributes(cursor: CXCursor, reserved: c_uint) -> CXObjCPropertyAttrKind;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 1948, line_content: "    pub fn clang_Cursor_getObjCPropertyGetterName(cursor: CXCursor) -> CXString;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 1951, line_content: "    pub fn clang_Cursor_getObjCPropertySetterName(cursor: CXCursor) -> CXString;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 1952, line_content: "    pub fn clang_Cursor_getObjCSelectorIndex(cursor: CXCursor) -> c_int;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 1955, line_content: "    pub fn clang_Cursor_getOffsetOfField(cursor: CXCursor) -> c_longlong;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 1956, line_content: "    pub fn clang_Cursor_getRawCommentText(cursor: CXCursor) -> CXString;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 1957, line_content: "    pub fn clang_Cursor_getReceiverType(cursor: CXCursor) -> CXType;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 1958, line_content: "    pub fn clang_Cursor_getSpellingNameRange(cursor: CXCursor, index: c_uint, reserved: c_uint) -> CXSourceRange;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 1961, line_content: "    pub fn clang_Cursor_getStorageClass(cursor: CXCursor) -> CX_StorageClass;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 1964, line_content: "    pub fn clang_Cursor_getTemplateArgumentKind(cursor: CXCursor, index: c_uint) -> CXTemplateArgumentKind;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 1967, line_content: "    pub fn clang_Cursor_getTemplateArgumentType(cursor: CXCursor, index: c_uint) -> CXType;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 1970, line_content: "    pub fn clang_Cursor_getTemplateArgumentUnsignedValue(cursor: CXCursor, index: c_uint) -> c_ulonglong;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 1973, line_content: "    pub fn clang_Cursor_getTemplateArgumentValue(cursor: CXCursor, index: c_uint) -> c_longlong;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 1974, line_content: "    pub fn clang_Cursor_getTranslationUnit(cursor: CXCursor) -> CXTranslationUnit;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 1977, line_content: "    pub fn clang_Cursor_getVarDeclInitializer(cursor: CXCursor) -> CXCursor;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 1980, line_content: "    pub fn clang_Cursor_hasAttrs(cursor: CXCursor) -> c_uint;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 1983, line_content: "    pub fn clang_Cursor_hasVarDeclGlobalStorage(cursor: CXCursor) -> c_uint;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 1986, line_content: "    pub fn clang_Cursor_hasVarDeclExternalStorage(cursor: CXCursor) -> c_uint;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 1989, line_content: "    pub fn clang_Cursor_isAnonymous(cursor: CXCursor) -> c_uint;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 1992, line_content: "    pub fn clang_Cursor_isAnonymousRecordDecl(cursor: CXCursor) -> c_uint;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 1993, line_content: "    pub fn clang_Cursor_isBitField(cursor: CXCursor) -> c_uint;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 1994, line_content: "    pub fn clang_Cursor_isDynamicCall(cursor: CXCursor) -> c_int;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 1997, line_content: "    pub fn clang_Cursor_isExternalSymbol(cursor: CXCursor, language: *mut CXString, from: *mut CXString, generated: *mut c_uint) -> c_uint;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2000, line_content: "    pub fn clang_Cursor_isFunctionInlined(cursor: CXCursor) -> c_uint;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2003, line_content: "    pub fn clang_Cursor_isInlineNamespace(cursor: CXCursor) -> c_uint;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2006, line_content: "    pub fn clang_Cursor_isMacroBuiltin(cursor: CXCursor) -> c_uint;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2009, line_content: "    pub fn clang_Cursor_isMacroFunctionLike(cursor: CXCursor) -> c_uint;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2010, line_content: "    pub fn clang_Cursor_isNull(cursor: CXCursor) -> c_int;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2011, line_content: "    pub fn clang_Cursor_isObjCOptional(cursor: CXCursor) -> c_uint;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2012, line_content: "    pub fn clang_Cursor_isVariadic(cursor: CXCursor) -> c_uint;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2015, line_content: "    pub fn clang_EnumDecl_isScoped(cursor: CXCursor) -> c_uint;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2018, line_content: "    pub fn clang_EvalResult_dispose(result: CXEvalResult);" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2021, line_content: "    pub fn clang_EvalResult_getAsDouble(result: CXEvalResult) -> libc::c_double;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2024, line_content: "    pub fn clang_EvalResult_getAsInt(result: CXEvalResult) -> c_int;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2027, line_content: "    pub fn clang_EvalResult_getAsLongLong(result: CXEvalResult) -> c_longlong;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2030, line_content: "    pub fn clang_EvalResult_getAsStr(result: CXEvalResult) -> *const c_char;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2033, line_content: "    pub fn clang_EvalResult_getAsUnsigned(result: CXEvalResult) -> c_ulonglong;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2036, line_content: "    pub fn clang_EvalResult_getKind(result: CXEvalResult) -> CXEvalResultKind;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2039, line_content: "    pub fn clang_EvalResult_isUnsignedInt(result: CXEvalResult) -> c_uint;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2042, line_content: "    pub fn clang_File_isEqual(left: CXFile, right: CXFile) -> c_int;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2045, line_content: "    pub fn clang_File_tryGetRealPathName(file: CXFile) -> CXString;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2046, line_content: "    pub fn clang_IndexAction_create(index: CXIndex) -> CXIndexAction;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2047, line_content: "    pub fn clang_IndexAction_dispose(index: CXIndexAction);" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2048, line_content: "    pub fn clang_Location_isFromMainFile(location: CXSourceLocation) -> c_int;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2049, line_content: "    pub fn clang_Location_isInSystemHeader(location: CXSourceLocation) -> c_int;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2050, line_content: "    pub fn clang_Module_getASTFile(module: CXModule) -> CXFile;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2051, line_content: "    pub fn clang_Module_getFullName(module: CXModule) -> CXString;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2052, line_content: "    pub fn clang_Module_getName(module: CXModule) -> CXString;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2053, line_content: "    pub fn clang_Module_getNumTopLevelHeaders(tu: CXTranslationUnit, module: CXModule) -> c_uint;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2054, line_content: "    pub fn clang_Module_getParent(module: CXModule) -> CXModule;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2055, line_content: "    pub fn clang_Module_getTopLevelHeader(tu: CXTranslationUnit, module: CXModule, index: c_uint) -> CXFile;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2056, line_content: "    pub fn clang_Module_isSystem(module: CXModule) -> c_int;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2059, line_content: "    pub fn clang_PrintingPolicy_dispose(policy: CXPrintingPolicy);" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2062, line_content: "    pub fn clang_PrintingPolicy_getProperty(policy: CXPrintingPolicy, property: CXPrintingPolicyProperty) -> c_uint;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2065, line_content: "    pub fn clang_PrintingPolicy_setProperty(policy: CXPrintingPolicy, property: CXPrintingPolicyProperty, value: c_uint);" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2066, line_content: "    pub fn clang_Range_isNull(range: CXSourceRange) -> c_int;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2069, line_content: "    pub fn clang_TargetInfo_dispose(info: CXTargetInfo);" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2072, line_content: "    pub fn clang_TargetInfo_getPointerWidth(info: CXTargetInfo) -> c_int;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2075, line_content: "    pub fn clang_TargetInfo_getTriple(info: CXTargetInfo) -> CXString;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2076, line_content: "    pub fn clang_Type_getAlignOf(type_: CXType) -> c_longlong;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2077, line_content: "    pub fn clang_Type_getCXXRefQualifier(type_: CXType) -> CXRefQualifierKind;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2078, line_content: "    pub fn clang_Type_getClassType(type_: CXType) -> CXType;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2081, line_content: "    pub fn clang_Type_getModifiedType(type_: CXType) -> CXType;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2084, line_content: "    pub fn clang_Type_getNamedType(type_: CXType) -> CXType;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2087, line_content: "    pub fn clang_Type_getNullability(type_: CXType) -> CXTypeNullabilityKind;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2090, line_content: "    pub fn clang_Type_getNumObjCProtocolRefs(type_: CXType) -> c_uint;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2093, line_content: "    pub fn clang_Type_getNumObjCTypeArgs(type_: CXType) -> c_uint;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2094, line_content: "    pub fn clang_Type_getNumTemplateArguments(type_: CXType) -> c_int;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2097, line_content: "    pub fn clang_Type_getObjCEncoding(type_: CXType) -> CXString;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2100, line_content: "    pub fn clang_Type_getObjCObjectBaseType(type_: CXType) -> CXType;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2103, line_content: "    pub fn clang_Type_getObjCProtocolDecl(type_: CXType, index: c_uint) -> CXCursor;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2106, line_content: "    pub fn clang_Type_getObjCTypeArg(type_: CXType, index: c_uint) -> CXType;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2107, line_content: "    pub fn clang_Type_getOffsetOf(type_: CXType, field: *const c_char) -> c_longlong;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2108, line_content: "    pub fn clang_Type_getSizeOf(type_: CXType) -> c_longlong;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2109, line_content: "    pub fn clang_Type_getTemplateArgumentAsType(type_: CXType, index: c_uint) -> CXType;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2112, line_content: "    pub fn clang_Type_getValueType(type_: CXType) -> CXType;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2115, line_content: "    pub fn clang_Type_isTransparentTagTypedef(type_: CXType) -> c_uint;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2118, line_content: "    pub fn clang_Type_visitFields(type_: CXType, visitor: CXFieldVisitor, data: CXClientData) -> CXVisitorResult;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2119, line_content: "    pub fn clang_annotateTokens(tu: CXTranslationUnit, tokens: *mut CXToken, n_tokens: c_uint, cursors: *mut CXCursor);" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2120, line_content: "    pub fn clang_codeCompleteAt(tu: CXTranslationUnit, file: *const c_char, line: c_uint, column: c_uint, unsaved: *mut CXUnsavedFile, n_unsaved: c_uint, flags: CXCodeComplete_Flags) -> *mut CXCodeCompleteResults;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2121, line_content: "    pub fn clang_codeCompleteGetContainerKind(results: *mut CXCodeCompleteResults, incomplete: *mut c_uint) -> CXCursorKind;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2122, line_content: "    pub fn clang_codeCompleteGetContainerUSR(results: *mut CXCodeCompleteResults) -> CXString;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2123, line_content: "    pub fn clang_codeCompleteGetContexts(results: *mut CXCodeCompleteResults) -> c_ulonglong;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2124, line_content: "    pub fn clang_codeCompleteGetDiagnostic(results: *mut CXCodeCompleteResults, index: c_uint) -> CXDiagnostic;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2125, line_content: "    pub fn clang_codeCompleteGetNumDiagnostics(results: *mut CXCodeCompleteResults) -> c_uint;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2126, line_content: "    pub fn clang_codeCompleteGetObjCSelector(results: *mut CXCodeCompleteResults) -> CXString;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2127, line_content: "    pub fn clang_constructUSR_ObjCCategory(class: *const c_char, category: *const c_char) -> CXString;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2128, line_content: "    pub fn clang_constructUSR_ObjCClass(class: *const c_char) -> CXString;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2129, line_content: "    pub fn clang_constructUSR_ObjCIvar(name: *const c_char, usr: CXString) -> CXString;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2130, line_content: "    pub fn clang_constructUSR_ObjCMethod(name: *const c_char, instance: c_uint, usr: CXString) -> CXString;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2131, line_content: "    pub fn clang_constructUSR_ObjCProperty(property: *const c_char, usr: CXString) -> CXString;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2132, line_content: "    pub fn clang_constructUSR_ObjCProtocol(protocol: *const c_char) -> CXString;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2133, line_content: "    pub fn clang_createCXCursorSet() -> CXCursorSet;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2134, line_content: "    pub fn clang_createIndex(exclude: c_int, display: c_int) -> CXIndex;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2137, line_content: "    pub fn clang_createIndexWithOptions(options: CXIndexOptions) -> CXIndex;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2138, line_content: "    pub fn clang_createTranslationUnit(index: CXIndex, file: *const c_char) -> CXTranslationUnit;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2139, line_content: "    pub fn clang_createTranslationUnit2(index: CXIndex, file: *const c_char, tu: *mut CXTranslationUnit) -> CXErrorCode;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2140, line_content: "    pub fn clang_createTranslationUnitFromSourceFile(index: CXIndex, file: *const c_char, n_arguments: c_int, arguments: *const *const c_char, n_unsaved: c_uint, unsaved: *mut CXUnsavedFile) -> CXTranslationUnit;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2141, line_content: "    pub fn clang_defaultCodeCompleteOptions() -> CXCodeComplete_Flags;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2142, line_content: "    pub fn clang_defaultDiagnosticDisplayOptions() -> CXDiagnosticDisplayOptions;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2143, line_content: "    pub fn clang_defaultEditingTranslationUnitOptions() -> CXTranslationUnit_Flags;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2144, line_content: "    pub fn clang_defaultReparseOptions(tu: CXTranslationUnit) -> CXReparse_Flags;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2145, line_content: "    pub fn clang_defaultSaveOptions(tu: CXTranslationUnit) -> CXSaveTranslationUnit_Flags;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2146, line_content: "    pub fn clang_disposeCXCursorSet(set: CXCursorSet);" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2147, line_content: "    pub fn clang_disposeCXPlatformAvailability(availability: *mut CXPlatformAvailability);" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2148, line_content: "    pub fn clang_disposeCXTUResourceUsage(usage: CXTUResourceUsage);" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2149, line_content: "    pub fn clang_disposeCodeCompleteResults(results: *mut CXCodeCompleteResults);" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2150, line_content: "    pub fn clang_disposeDiagnostic(diagnostic: CXDiagnostic);" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2151, line_content: "    pub fn clang_disposeDiagnosticSet(diagnostic: CXDiagnosticSet);" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2152, line_content: "    pub fn clang_disposeIndex(index: CXIndex);" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2153, line_content: "    pub fn clang_disposeOverriddenCursors(cursors: *mut CXCursor);" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2154, line_content: "    pub fn clang_disposeSourceRangeList(list: *mut CXSourceRangeList);" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2155, line_content: "    pub fn clang_disposeString(string: CXString);" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2158, line_content: "    pub fn clang_disposeStringSet(set: *mut CXStringSet);" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2159, line_content: "    pub fn clang_disposeTokens(tu: CXTranslationUnit, tokens: *mut CXToken, n_tokens: c_uint);" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2160, line_content: "    pub fn clang_disposeTranslationUnit(tu: CXTranslationUnit);" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2161, line_content: "    pub fn clang_enableStackTraces();" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2162, line_content: "    pub fn clang_equalCursors(left: CXCursor, right: CXCursor) -> c_uint;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2163, line_content: "    pub fn clang_equalLocations(left: CXSourceLocation, right: CXSourceLocation) -> c_uint;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2164, line_content: "    pub fn clang_equalRanges(left: CXSourceRange, right: CXSourceRange) -> c_uint;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2165, line_content: "    pub fn clang_equalTypes(left: CXType, right: CXType) -> c_uint;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2166, line_content: "    pub fn clang_executeOnThread(function: extern fn(*mut c_void), data: *mut c_void, stack: c_uint);" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2167, line_content: "    pub fn clang_findIncludesInFile(tu: CXTranslationUnit, file: CXFile, cursor: CXCursorAndRangeVisitor) -> CXResult;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2168, line_content: "    pub fn clang_findReferencesInFile(cursor: CXCursor, file: CXFile, visitor: CXCursorAndRangeVisitor) -> CXResult;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2169, line_content: "    pub fn clang_formatDiagnostic(diagnostic: CXDiagnostic, flags: CXDiagnosticDisplayOptions) -> CXString;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2172, line_content: "    pub fn clang_free(buffer: *mut c_void);" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2175, line_content: "    pub fn clang_getAddressSpace(type_: CXType) -> c_uint;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2178, line_content: "    pub fn clang_getAllSkippedRanges(tu: CXTranslationUnit) -> *mut CXSourceRangeList;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2179, line_content: "    pub fn clang_getArgType(type_: CXType, index: c_uint) -> CXType;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2180, line_content: "    pub fn clang_getArrayElementType(type_: CXType) -> CXType;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2181, line_content: "    pub fn clang_getArraySize(type_: CXType) -> c_longlong;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2184, line_content: "    pub fn clang_getBinaryOperatorKindSpelling(kind: CXBinaryOperatorKind) -> CXString;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2185, line_content: "    pub fn clang_getCString(string: CXString) -> *const c_char;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2186, line_content: "    pub fn clang_getCXTUResourceUsage(tu: CXTranslationUnit) -> CXTUResourceUsage;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2187, line_content: "    pub fn clang_getCXXAccessSpecifier(cursor: CXCursor) -> CX_CXXAccessSpecifier;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2188, line_content: "    pub fn clang_getCanonicalCursor(cursor: CXCursor) -> CXCursor;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2189, line_content: "    pub fn clang_getCanonicalType(type_: CXType) -> CXType;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2190, line_content: "    pub fn clang_getChildDiagnostics(diagnostic: CXDiagnostic) -> CXDiagnosticSet;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2191, line_content: "    pub fn clang_getClangVersion() -> CXString;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2192, line_content: "    pub fn clang_getCompletionAnnotation(string: CXCompletionString, index: c_uint) -> CXString;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2193, line_content: "    pub fn clang_getCompletionAvailability(string: CXCompletionString) -> CXAvailabilityKind;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2194, line_content: "    pub fn clang_getCompletionBriefComment(string: CXCompletionString) -> CXString;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2195, line_content: "    pub fn clang_getCompletionChunkCompletionString(string: CXCompletionString, index: c_uint) -> CXCompletionString;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2196, line_content: "    pub fn clang_getCompletionChunkKind(string: CXCompletionString, index: c_uint) -> CXCompletionChunkKind;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2197, line_content: "    pub fn clang_getCompletionChunkText(string: CXCompletionString, index: c_uint) -> CXString;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2200, line_content: "    pub fn clang_getCompletionFixIt(results: *mut CXCodeCompleteResults, completion_index: c_uint, fixit_index: c_uint, range: *mut CXSourceRange) -> CXString;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2201, line_content: "    pub fn clang_getCompletionNumAnnotations(string: CXCompletionString) -> c_uint;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2204, line_content: "    pub fn clang_getCompletionNumFixIts(results: *mut CXCodeCompleteResults, completion_index: c_uint) -> c_uint;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2205, line_content: "    pub fn clang_getCompletionParent(string: CXCompletionString, kind: *mut CXCursorKind) -> CXString;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2206, line_content: "    pub fn clang_getCompletionPriority(string: CXCompletionString) -> c_uint;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2207, line_content: "    pub fn clang_getCursor(tu: CXTranslationUnit, location: CXSourceLocation) -> CXCursor;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2208, line_content: "    pub fn clang_getCursorAvailability(cursor: CXCursor) -> CXAvailabilityKind;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2211, line_content: "    pub fn clang_getCursorBinaryOperatorKind(cursor: CXCursor) -> CXBinaryOperatorKind;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2212, line_content: "    pub fn clang_getCursorCompletionString(cursor: CXCursor) -> CXCompletionString;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2213, line_content: "    pub fn clang_getCursorDefinition(cursor: CXCursor) -> CXCursor;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2214, line_content: "    pub fn clang_getCursorDisplayName(cursor: CXCursor) -> CXString;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2217, line_content: "    pub fn clang_getCursorExceptionSpecificationType(cursor: CXCursor) -> CXCursor_ExceptionSpecificationKind;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2218, line_content: "    pub fn clang_getCursorExtent(cursor: CXCursor) -> CXSourceRange;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2219, line_content: "    pub fn clang_getCursorKind(cursor: CXCursor) -> CXCursorKind;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2220, line_content: "    pub fn clang_getCursorKindSpelling(kind: CXCursorKind) -> CXString;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2221, line_content: "    pub fn clang_getCursorLanguage(cursor: CXCursor) -> CXLanguageKind;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2222, line_content: "    pub fn clang_getCursorLexicalParent(cursor: CXCursor) -> CXCursor;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2223, line_content: "    pub fn clang_getCursorLinkage(cursor: CXCursor) -> CXLinkageKind;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2224, line_content: "    pub fn clang_getCursorLocation(cursor: CXCursor) -> CXSourceLocation;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2225, line_content: "    pub fn clang_getCursorPlatformAvailability(cursor: CXCursor, deprecated: *mut c_int, deprecated_message: *mut CXString, unavailable: *mut c_int, unavailable_message: *mut CXString, availability: *mut CXPlatformAvailability, n_availability: c_int) -> c_int;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2228, line_content: "    pub fn clang_getCursorPrettyPrinted(cursor: CXCursor, policy: CXPrintingPolicy) -> CXString;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2231, line_content: "    pub fn clang_getCursorPrintingPolicy(cursor: CXCursor) -> CXPrintingPolicy;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2232, line_content: "    pub fn clang_getCursorReferenceNameRange(cursor: CXCursor, flags: CXNameRefFlags, index: c_uint) -> CXSourceRange;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2233, line_content: "    pub fn clang_getCursorReferenced(cursor: CXCursor) -> CXCursor;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2234, line_content: "    pub fn clang_getCursorResultType(cursor: CXCursor) -> CXType;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2235, line_content: "    pub fn clang_getCursorSemanticParent(cursor: CXCursor) -> CXCursor;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2236, line_content: "    pub fn clang_getCursorSpelling(cursor: CXCursor) -> CXString;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2239, line_content: "    pub fn clang_getCursorTLSKind(cursor: CXCursor) -> CXTLSKind;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2240, line_content: "    pub fn clang_getCursorType(cursor: CXCursor) -> CXType;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2243, line_content: "    pub fn clang_getCursorUnaryOperatorKind(cursor: CXCursor) -> CXUnaryOperatorKind;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2244, line_content: "    pub fn clang_getCursorUSR(cursor: CXCursor) -> CXString;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2247, line_content: "    pub fn clang_getCursorVisibility(cursor: CXCursor) -> CXVisibilityKind;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2248, line_content: "    pub fn clang_getDeclObjCTypeEncoding(cursor: CXCursor) -> CXString;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2249, line_content: "    pub fn clang_getDefinitionSpellingAndExtent(cursor: CXCursor, start: *mut *const c_char, end: *mut *const c_char, start_line: *mut c_uint, start_column: *mut c_uint, end_line: *mut c_uint, end_column: *mut c_uint);" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2250, line_content: "    pub fn clang_getDiagnostic(tu: CXTranslationUnit, index: c_uint) -> CXDiagnostic;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2251, line_content: "    pub fn clang_getDiagnosticCategory(diagnostic: CXDiagnostic) -> c_uint;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2252, line_content: "    pub fn clang_getDiagnosticCategoryName(category: c_uint) -> CXString;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2253, line_content: "    pub fn clang_getDiagnosticCategoryText(diagnostic: CXDiagnostic) -> CXString;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2254, line_content: "    pub fn clang_getDiagnosticFixIt(diagnostic: CXDiagnostic, index: c_uint, range: *mut CXSourceRange) -> CXString;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2255, line_content: "    pub fn clang_getDiagnosticInSet(diagnostic: CXDiagnosticSet, index: c_uint) -> CXDiagnostic;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2256, line_content: "    pub fn clang_getDiagnosticLocation(diagnostic: CXDiagnostic) -> CXSourceLocation;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2257, line_content: "    pub fn clang_getDiagnosticNumFixIts(diagnostic: CXDiagnostic) -> c_uint;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2258, line_content: "    pub fn clang_getDiagnosticNumRanges(diagnostic: CXDiagnostic) -> c_uint;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2259, line_content: "    pub fn clang_getDiagnosticOption(diagnostic: CXDiagnostic, option: *mut CXString) -> CXString;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2260, line_content: "    pub fn clang_getDiagnosticRange(diagnostic: CXDiagnostic, index: c_uint) -> CXSourceRange;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2261, line_content: "    pub fn clang_getDiagnosticSetFromTU(tu: CXTranslationUnit) -> CXDiagnosticSet;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2262, line_content: "    pub fn clang_getDiagnosticSeverity(diagnostic: CXDiagnostic) -> CXDiagnosticSeverity;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2263, line_content: "    pub fn clang_getDiagnosticSpelling(diagnostic: CXDiagnostic) -> CXString;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2264, line_content: "    pub fn clang_getElementType(type_: CXType) -> CXType;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2265, line_content: "    pub fn clang_getEnumConstantDeclUnsignedValue(cursor: CXCursor) -> c_ulonglong;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2266, line_content: "    pub fn clang_getEnumConstantDeclValue(cursor: CXCursor) -> c_longlong;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2267, line_content: "    pub fn clang_getEnumDeclIntegerType(cursor: CXCursor) -> CXType;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2270, line_content: "    pub fn clang_getExceptionSpecificationType(type_: CXType) -> CXCursor_ExceptionSpecificationKind;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2271, line_content: "    pub fn clang_getExpansionLocation(location: CXSourceLocation, file: *mut CXFile, line: *mut c_uint, column: *mut c_uint, offset: *mut c_uint);" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2272, line_content: "    pub fn clang_getFieldDeclBitWidth(cursor: CXCursor) -> c_int;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2273, line_content: "    pub fn clang_getFile(tu: CXTranslationUnit, file: *const c_char) -> CXFile;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2276, line_content: "    pub fn clang_getFileContents(tu: CXTranslationUnit, file: CXFile, size: *mut size_t) -> *const c_char;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2277, line_content: "    pub fn clang_getFileLocation(location: CXSourceLocation, file: *mut CXFile, line: *mut c_uint, column: *mut c_uint, offset: *mut c_uint);" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2278, line_content: "    pub fn clang_getFileName(file: CXFile) -> CXString;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2279, line_content: "    pub fn clang_getFileTime(file: CXFile) -> time_t;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2280, line_content: "    pub fn clang_getFileUniqueID(file: CXFile, id: *mut CXFileUniqueID) -> c_int;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2281, line_content: "    pub fn clang_getFunctionTypeCallingConv(type_: CXType) -> CXCallingConv;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2282, line_content: "    pub fn clang_getIBOutletCollectionType(cursor: CXCursor) -> CXType;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2283, line_content: "    pub fn clang_getIncludedFile(cursor: CXCursor) -> CXFile;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2284, line_content: "    pub fn clang_getInclusions(tu: CXTranslationUnit, visitor: CXInclusionVisitor, data: CXClientData);" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2285, line_content: "    pub fn clang_getInstantiationLocation(location: CXSourceLocation, file: *mut CXFile, line: *mut c_uint, column: *mut c_uint, offset: *mut c_uint);" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2286, line_content: "    pub fn clang_getLocation(tu: CXTranslationUnit, file: CXFile, line: c_uint, column: c_uint) -> CXSourceLocation;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2287, line_content: "    pub fn clang_getLocationForOffset(tu: CXTranslationUnit, file: CXFile, offset: c_uint) -> CXSourceLocation;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2288, line_content: "    pub fn clang_getModuleForFile(tu: CXTranslationUnit, file: CXFile) -> CXModule;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2291, line_content: "    pub fn clang_getNonReferenceType(type_: CXType) -> CXType;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2292, line_content: "    pub fn clang_getNullCursor() -> CXCursor;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2293, line_content: "    pub fn clang_getNullLocation() -> CXSourceLocation;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2294, line_content: "    pub fn clang_getNullRange() -> CXSourceRange;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2295, line_content: "    pub fn clang_getNumArgTypes(type_: CXType) -> c_int;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2296, line_content: "    pub fn clang_getNumCompletionChunks(string: CXCompletionString) -> c_uint;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2297, line_content: "    pub fn clang_getNumDiagnostics(tu: CXTranslationUnit) -> c_uint;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2298, line_content: "    pub fn clang_getNumDiagnosticsInSet(diagnostic: CXDiagnosticSet) -> c_uint;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2299, line_content: "    pub fn clang_getNumElements(type_: CXType) -> c_longlong;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2300, line_content: "    pub fn clang_getNumOverloadedDecls(cursor: CXCursor) -> c_uint;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2301, line_content: "    pub fn clang_getOverloadedDecl(cursor: CXCursor, index: c_uint) -> CXCursor;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2302, line_content: "    pub fn clang_getOverriddenCursors(cursor: CXCursor, cursors: *mut *mut CXCursor, n_cursors: *mut c_uint);" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2303, line_content: "    pub fn clang_getPointeeType(type_: CXType) -> CXType;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2304, line_content: "    pub fn clang_getPresumedLocation(location: CXSourceLocation, file: *mut CXString, line: *mut c_uint, column: *mut c_uint);" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2305, line_content: "    pub fn clang_getRange(start: CXSourceLocation, end: CXSourceLocation) -> CXSourceRange;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2306, line_content: "    pub fn clang_getRangeEnd(range: CXSourceRange) -> CXSourceLocation;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2307, line_content: "    pub fn clang_getRangeStart(range: CXSourceRange) -> CXSourceLocation;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2308, line_content: "    pub fn clang_getRemappings(file: *const c_char) -> CXRemapping;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2309, line_content: "    pub fn clang_getRemappingsFromFileList(files: *mut *const c_char, n_files: c_uint) -> CXRemapping;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2310, line_content: "    pub fn clang_getResultType(type_: CXType) -> CXType;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2311, line_content: "    pub fn clang_getSkippedRanges(tu: CXTranslationUnit, file: CXFile) -> *mut CXSourceRangeList;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2312, line_content: "    pub fn clang_getSpecializedCursorTemplate(cursor: CXCursor) -> CXCursor;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2313, line_content: "    pub fn clang_getSpellingLocation(location: CXSourceLocation, file: *mut CXFile, line: *mut c_uint, column: *mut c_uint, offset: *mut c_uint);" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2314, line_content: "    pub fn clang_getTUResourceUsageName(kind: CXTUResourceUsageKind) -> *const c_char;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2315, line_content: "    pub fn clang_getTemplateCursorKind(cursor: CXCursor) -> CXCursorKind;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2316, line_content: "    pub fn clang_getToken(tu: CXTranslationUnit, location: CXSourceLocation) -> *mut CXToken;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2317, line_content: "    pub fn clang_getTokenExtent(tu: CXTranslationUnit, token: CXToken) -> CXSourceRange;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2318, line_content: "    pub fn clang_getTokenKind(token: CXToken) -> CXTokenKind;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2319, line_content: "    pub fn clang_getTokenLocation(tu: CXTranslationUnit, token: CXToken) -> CXSourceLocation;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2320, line_content: "    pub fn clang_getTokenSpelling(tu: CXTranslationUnit, token: CXToken) -> CXString;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2321, line_content: "    pub fn clang_getTranslationUnitCursor(tu: CXTranslationUnit) -> CXCursor;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2322, line_content: "    pub fn clang_getTranslationUnitSpelling(tu: CXTranslationUnit) -> CXString;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2325, line_content: "    pub fn clang_getTranslationUnitTargetInfo(tu: CXTranslationUnit) -> CXTargetInfo;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2328, line_content: "    pub fn clang_getUnaryOperatorKindSpelling(kind: CXUnaryOperatorKind) -> CXString;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2331, line_content: "    pub fn clang_getUnqualifiedType(type_: CXType) -> CXType;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2332, line_content: "    pub fn clang_getTypeDeclaration(type_: CXType) -> CXCursor;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2333, line_content: "    pub fn clang_getTypeKindSpelling(type_: CXTypeKind) -> CXString;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2334, line_content: "    pub fn clang_getTypeSpelling(type_: CXType) -> CXString;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2335, line_content: "    pub fn clang_getTypedefDeclUnderlyingType(cursor: CXCursor) -> CXType;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2338, line_content: "    pub fn clang_getTypedefName(type_: CXType) -> CXString;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2339, line_content: "    pub fn clang_hashCursor(cursor: CXCursor) -> c_uint;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2340, line_content: "    pub fn clang_indexLoc_getCXSourceLocation(location: CXIdxLoc) -> CXSourceLocation;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2341, line_content: "    pub fn clang_indexLoc_getFileLocation(location: CXIdxLoc, index_file: *mut CXIdxClientFile, file: *mut CXFile, line: *mut c_uint, column: *mut c_uint, offset: *mut c_uint);" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2342, line_content: "    pub fn clang_indexSourceFile(index: CXIndexAction, data: CXClientData, callbacks: *mut IndexerCallbacks, n_callbacks: c_uint, index_flags: CXIndexOptFlags, file: *const c_char, arguments: *const *const c_char, n_arguments: c_int, unsaved: *mut CXUnsavedFile, n_unsaved: c_uint, tu: *mut CXTranslationUnit, tu_flags: CXTranslationUnit_Flags) -> CXErrorCode;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2345, line_content: "    pub fn clang_indexSourceFileFullArgv(index: CXIndexAction, data: CXClientData, callbacks: *mut IndexerCallbacks, n_callbacks: c_uint, index_flags: CXIndexOptFlags, file: *const c_char, arguments: *const *const c_char, n_arguments: c_int, unsaved: *mut CXUnsavedFile, n_unsaved: c_uint, tu: *mut CXTranslationUnit, tu_flags: CXTranslationUnit_Flags) -> CXErrorCode;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2346, line_content: "    pub fn clang_indexTranslationUnit(index: CXIndexAction, data: CXClientData, callbacks: *mut IndexerCallbacks, n_callbacks: c_uint, flags: CXIndexOptFlags, tu: CXTranslationUnit) -> c_int;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2347, line_content: "    pub fn clang_index_getCXXClassDeclInfo(info: *const CXIdxDeclInfo) -> *const CXIdxCXXClassDeclInfo;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2348, line_content: "    pub fn clang_index_getClientContainer(info: *const CXIdxContainerInfo) -> CXIdxClientContainer;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2349, line_content: "    pub fn clang_index_getClientEntity(info: *const CXIdxEntityInfo) -> CXIdxClientEntity;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2350, line_content: "    pub fn clang_index_getIBOutletCollectionAttrInfo(info: *const CXIdxAttrInfo) -> *const CXIdxIBOutletCollectionAttrInfo;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2351, line_content: "    pub fn clang_index_getObjCCategoryDeclInfo(info: *const CXIdxDeclInfo) -> *const CXIdxObjCCategoryDeclInfo;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2352, line_content: "    pub fn clang_index_getObjCContainerDeclInfo(info: *const CXIdxDeclInfo) -> *const CXIdxObjCContainerDeclInfo;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2353, line_content: "    pub fn clang_index_getObjCInterfaceDeclInfo(info: *const CXIdxDeclInfo) -> *const CXIdxObjCInterfaceDeclInfo;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2354, line_content: "    pub fn clang_index_getObjCPropertyDeclInfo(info: *const CXIdxDeclInfo) -> *const CXIdxObjCPropertyDeclInfo;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2355, line_content: "    pub fn clang_index_getObjCProtocolRefListInfo(info: *const CXIdxDeclInfo) -> *const CXIdxObjCProtocolRefListInfo;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2356, line_content: "    pub fn clang_index_isEntityObjCContainerKind(info: CXIdxEntityKind) -> c_int;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2357, line_content: "    pub fn clang_index_setClientContainer(info: *const CXIdxContainerInfo, container: CXIdxClientContainer);" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2358, line_content: "    pub fn clang_index_setClientEntity(info: *const CXIdxEntityInfo, entity: CXIdxClientEntity);" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2359, line_content: "    pub fn clang_isAttribute(kind: CXCursorKind) -> c_uint;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2360, line_content: "    pub fn clang_isConstQualifiedType(type_: CXType) -> c_uint;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2361, line_content: "    pub fn clang_isCursorDefinition(cursor: CXCursor) -> c_uint;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2362, line_content: "    pub fn clang_isDeclaration(kind: CXCursorKind) -> c_uint;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2363, line_content: "    pub fn clang_isExpression(kind: CXCursorKind) -> c_uint;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2364, line_content: "    pub fn clang_isFileMultipleIncludeGuarded(tu: CXTranslationUnit, file: CXFile) -> c_uint;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2365, line_content: "    pub fn clang_isFunctionTypeVariadic(type_: CXType) -> c_uint;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2366, line_content: "    pub fn clang_isInvalid(kind: CXCursorKind) -> c_uint;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2369, line_content: "    pub fn clang_isInvalidDeclaration(cursor: CXCursor) -> c_uint;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2370, line_content: "    pub fn clang_isPODType(type_: CXType) -> c_uint;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2371, line_content: "    pub fn clang_isPreprocessing(kind: CXCursorKind) -> c_uint;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2372, line_content: "    pub fn clang_isReference(kind: CXCursorKind) -> c_uint;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2373, line_content: "    pub fn clang_isRestrictQualifiedType(type_: CXType) -> c_uint;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2374, line_content: "    pub fn clang_isStatement(kind: CXCursorKind) -> c_uint;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2375, line_content: "    pub fn clang_isTranslationUnit(kind: CXCursorKind) -> c_uint;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2376, line_content: "    pub fn clang_isUnexposed(kind: CXCursorKind) -> c_uint;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2377, line_content: "    pub fn clang_isVirtualBase(cursor: CXCursor) -> c_uint;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2378, line_content: "    pub fn clang_isVolatileQualifiedType(type_: CXType) -> c_uint;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2379, line_content: "    pub fn clang_loadDiagnostics(file: *const c_char, error: *mut CXLoadDiag_Error, message: *mut CXString) -> CXDiagnosticSet;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2380, line_content: "    pub fn clang_parseTranslationUnit(index: CXIndex, file: *const c_char, arguments: *const *const c_char, n_arguments: c_int, unsaved: *mut CXUnsavedFile, n_unsaved: c_uint, flags: CXTranslationUnit_Flags) -> CXTranslationUnit;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2381, line_content: "    pub fn clang_parseTranslationUnit2(index: CXIndex, file: *const c_char, arguments: *const *const c_char, n_arguments: c_int, unsaved: *mut CXUnsavedFile, n_unsaved: c_uint, flags: CXTranslationUnit_Flags, tu: *mut CXTranslationUnit) -> CXErrorCode;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2384, line_content: "    pub fn clang_parseTranslationUnit2FullArgv(index: CXIndex, file: *const c_char, arguments: *const *const c_char, n_arguments: c_int, unsaved: *mut CXUnsavedFile, n_unsaved: c_uint, flags: CXTranslationUnit_Flags, tu: *mut CXTranslationUnit) -> CXErrorCode;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2385, line_content: "    pub fn clang_remap_dispose(remapping: CXRemapping);" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2386, line_content: "    pub fn clang_remap_getFilenames(remapping: CXRemapping, index: c_uint, original: *mut CXString, transformed: *mut CXString);" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2387, line_content: "    pub fn clang_remap_getNumFiles(remapping: CXRemapping) -> c_uint;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2388, line_content: "    pub fn clang_reparseTranslationUnit(tu: CXTranslationUnit, n_unsaved: c_uint, unsaved: *mut CXUnsavedFile, flags: CXReparse_Flags) -> CXErrorCode;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2389, line_content: "    pub fn clang_saveTranslationUnit(tu: CXTranslationUnit, file: *const c_char, options: CXSaveTranslationUnit_Flags) -> CXSaveError;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2390, line_content: "    pub fn clang_sortCodeCompletionResults(results: *mut CXCompletionResult, n_results: c_uint);" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2393, line_content: "    pub fn clang_suspendTranslationUnit(tu: CXTranslationUnit) -> c_uint;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2394, line_content: "    pub fn clang_toggleCrashRecovery(recovery: c_uint);" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2395, line_content: "    pub fn clang_tokenize(tu: CXTranslationUnit, range: CXSourceRange, tokens: *mut *mut CXToken, n_tokens: *mut c_uint);" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2396, line_content: "    pub fn clang_visitChildren(cursor: CXCursor, visitor: CXCursorVisitor, data: CXClientData) -> c_uint;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2399, line_content: "    pub fn clang_BlockCommandComment_getArgText(comment: CXComment, index: c_uint) -> CXString;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2400, line_content: "    pub fn clang_BlockCommandComment_getCommandName(comment: CXComment) -> CXString;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2401, line_content: "    pub fn clang_BlockCommandComment_getNumArgs(comment: CXComment) -> c_uint;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2402, line_content: "    pub fn clang_BlockCommandComment_getParagraph(comment: CXComment) -> CXComment;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2403, line_content: "    pub fn clang_Comment_getChild(comment: CXComment, index: c_uint) -> CXComment;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2404, line_content: "    pub fn clang_Comment_getKind(comment: CXComment) -> CXCommentKind;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2405, line_content: "    pub fn clang_Comment_getNumChildren(comment: CXComment) -> c_uint;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2406, line_content: "    pub fn clang_Comment_isWhitespace(comment: CXComment) -> c_uint;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2407, line_content: "    pub fn clang_Cursor_getParsedComment(C: CXCursor) -> CXComment;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2408, line_content: "    pub fn clang_FullComment_getAsHTML(comment: CXComment) -> CXString;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2409, line_content: "    pub fn clang_FullComment_getAsXML(comment: CXComment) -> CXString;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2410, line_content: "    pub fn clang_HTMLStartTag_getAttrName(comment: CXComment, index: c_uint) -> CXString;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2411, line_content: "    pub fn clang_HTMLStartTag_getAttrValue(comment: CXComment, index: c_uint) -> CXString;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2412, line_content: "    pub fn clang_HTMLStartTag_getNumAttrs(comment: CXComment) -> c_uint;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2413, line_content: "    pub fn clang_HTMLStartTagComment_isSelfClosing(comment: CXComment) -> c_uint;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2414, line_content: "    pub fn clang_HTMLTagComment_getAsString(comment: CXComment) -> CXString;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2415, line_content: "    pub fn clang_HTMLTagComment_getTagName(comment: CXComment) -> CXString;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2416, line_content: "    pub fn clang_InlineCommandComment_getArgText(comment: CXComment, index: c_uint) -> CXString;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2417, line_content: "    pub fn clang_InlineCommandComment_getCommandName(comment: CXComment) -> CXString;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2418, line_content: "    pub fn clang_InlineCommandComment_getNumArgs(comment: CXComment) -> c_uint;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2419, line_content: "    pub fn clang_InlineCommandComment_getRenderKind(comment: CXComment) -> CXCommentInlineCommandRenderKind;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2420, line_content: "    pub fn clang_InlineContentComment_hasTrailingNewline(comment: CXComment) -> c_uint;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2421, line_content: "    pub fn clang_ParamCommandComment_getDirection(comment: CXComment) -> CXCommentParamPassDirection;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2422, line_content: "    pub fn clang_ParamCommandComment_getParamIndex(comment: CXComment) -> c_uint;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2423, line_content: "    pub fn clang_ParamCommandComment_getParamName(comment: CXComment) -> CXString;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2424, line_content: "    pub fn clang_ParamCommandComment_isDirectionExplicit(comment: CXComment) -> c_uint;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2425, line_content: "    pub fn clang_ParamCommandComment_isParamIndexValid(comment: CXComment) -> c_uint;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2426, line_content: "    pub fn clang_TextComment_getText(comment: CXComment) -> CXString;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2427, line_content: "    pub fn clang_TParamCommandComment_getDepth(comment: CXComment) -> c_uint;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2428, line_content: "    pub fn clang_TParamCommandComment_getIndex(comment: CXComment, depth: c_uint) -> c_uint;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2429, line_content: "    pub fn clang_TParamCommandComment_getParamName(comment: CXComment) -> CXString;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2430, line_content: "    pub fn clang_TParamCommandComment_isParamPositionValid(comment: CXComment) -> c_uint;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2431, line_content: "    pub fn clang_VerbatimBlockLineComment_getText(comment: CXComment) -> CXString;" },
  { file_path: "vendor/clang-sys/src/lib.rs", line_number: 2432, line_content: "    pub fn clang_VerbatimLineComment_getText(comment: CXComment) -> CXString;" },
  { file_path: "vendor/clang-sys/src/link.rs", line_number: 13, line_content: "        fn $name:ident($($pname:ident: $pty:ty), *) $(-> $ret:ty)*" },
  { file_path: "vendor/clang-sys/src/link.rs", line_number: 17, line_content: "        pub fn $name(library: &mut super::SharedLibrary) {" },
  { file_path: "vendor/clang-sys/src/link.rs", line_number: 26, line_content: "        pub fn $name(_: &mut super::SharedLibrary) {}" },
  { file_path: "vendor/clang-sys/src/link.rs", line_number: 31, line_content: "        fn $name:ident($($pname:ident: $pty:ty), *) $(-> $ret:ty)*" },
  { file_path: "vendor/clang-sys/src/link.rs", line_number: 33, line_content: "        link!(@LOAD: #[cfg(feature = \"runtime\")] fn $name($($pname: $pty), *) $(-> $ret)*);" },
  { file_path: "vendor/clang-sys/src/link.rs", line_number: 39, line_content: "            pub fn $name:ident($($pname:ident: $pty:ty), *) $(-> $ret:ty)*;" },
  { file_path: "vendor/clang-sys/src/link.rs", line_number: 69, line_content: "            fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {" },
  { file_path: "vendor/clang-sys/src/link.rs", line_number: 96, line_content: "                pub $name: Option<unsafe extern fn($($pname: $pty), *) $(-> $ret)*>," },
  { file_path: "vendor/clang-sys/src/link.rs", line_number: 109, line_content: "            fn new(library: libloading::Library, path: PathBuf) -> Self {" },
  { file_path: "vendor/clang-sys/src/link.rs", line_number: 114, line_content: "            pub fn path(&self) -> &Path {" },
  { file_path: "vendor/clang-sys/src/link.rs", line_number: 125, line_content: "            pub fn version(&self) -> Option<Version> {" },
  { file_path: "vendor/clang-sys/src/link.rs", line_number: 127, line_content: "                    ($fn:expr, $version:ident) => {" },
  { file_path: "vendor/clang-sys/src/link.rs", line_number: 128, line_content: "                        if self.library.get::<unsafe extern fn()>($fn).is_ok() {" },
  { file_path: "vendor/clang-sys/src/link.rs", line_number: 159, line_content: "        pub fn is_loaded() -> bool {" },
  { file_path: "vendor/clang-sys/src/link.rs", line_number: 163, line_content: "        fn with_library<T, F>(f: F) -> Option<T> where F: FnOnce(&SharedLibrary) -> T {" },
  { file_path: "vendor/clang-sys/src/link.rs", line_number: 176, line_content: "            pub unsafe fn $name($($pname: $pty), *) $(-> $ret)* {" },
  { file_path: "vendor/clang-sys/src/link.rs", line_number: 207, line_content: "                pub fn is_loaded() -> bool {" },
  { file_path: "vendor/clang-sys/src/link.rs", line_number: 214, line_content: "            $(link!(@LOAD: $(#[cfg($cfg)])* fn $name($($pname: $pty), *) $(-> $ret)*);)+" },
  { file_path: "vendor/clang-sys/src/link.rs", line_number: 226, line_content: "        pub fn load_manually() -> Result<SharedLibrary, String> {" },
  { file_path: "vendor/clang-sys/src/link.rs", line_number: 264, line_content: "        pub fn load() -> Result<(), String> {" },
  { file_path: "vendor/clang-sys/src/link.rs", line_number: 275, line_content: "        pub fn unload() -> Result<(), String> {" },
  { file_path: "vendor/clang-sys/src/link.rs", line_number: 287, line_content: "        pub fn get_library() -> Option<Arc<SharedLibrary>> {" },
  { file_path: "vendor/clang-sys/src/link.rs", line_number: 294, line_content: "        pub fn set_library(library: Option<Arc<SharedLibrary>>) -> Option<Arc<SharedLibrary>> {" },
  { file_path: "vendor/clang-sys/src/link.rs", line_number: 305, line_content: "            pub fn $name:ident($($pname:ident: $pty:ty), *) $(-> $ret:ty)*;" },
  { file_path: "vendor/clang-sys/src/link.rs", line_number: 311, line_content: "                pub fn $name($($pname: $pty), *) $(-> $ret)*;" },
  { file_path: "vendor/clang-sys/src/link.rs", line_number: 318, line_content: "                pub fn is_loaded() -> bool { true }" },
  { file_path: "vendor/clang-sys/src/support.rs", line_number: 35, line_content: "    fn new(path: impl AsRef<Path>, args: &[String]) -> Self {" },
  { file_path: "vendor/clang-sys/src/support.rs", line_number: 61, line_content: "    pub fn find(path: Option<&Path>, args: &[String]) -> Option<Clang> {" },
  { file_path: "vendor/clang-sys/src/support.rs", line_number: 150, line_content: "fn find(directory: &Path, patterns: &[&str]) -> Option<PathBuf> {" },
  { file_path: "vendor/clang-sys/src/support.rs", line_number: 172, line_content: "fn is_executable(path: &Path) -> io::Result<bool> {" },
  { file_path: "vendor/clang-sys/src/support.rs", line_number: 181, line_content: "fn is_executable(_: &Path) -> io::Result<bool> {" },
  { file_path: "vendor/clang-sys/src/support.rs", line_number: 187, line_content: "fn run(executable: &str, arguments: &[&str]) -> Result<(String, String), String> {" },
  { file_path: "vendor/clang-sys/src/support.rs", line_number: 200, line_content: "fn run_clang(path: &Path, arguments: &[&str]) -> (String, String) {" },
  { file_path: "vendor/clang-sys/src/support.rs", line_number: 205, line_content: "fn run_llvm_config(arguments: &[&str]) -> Result<String, String> {" },
  { file_path: "vendor/clang-sys/src/support.rs", line_number: 211, line_content: "fn parse_version_number(number: &str) -> Option<c_int> {" },
  { file_path: "vendor/clang-sys/src/support.rs", line_number: 221, line_content: "fn parse_version(path: &Path) -> Option<CXVersion> {" },
  { file_path: "vendor/clang-sys/src/support.rs", line_number: 236, line_content: "fn parse_search_paths(path: &Path, language: &str, args: &[String]) -> Option<Vec<PathBuf>> {" },
  { file_path: "vendor/clang-sys/tests/build.rs", line_number: 39, line_content: "    fn pe_machine_type(self) -> u16 {" },
  { file_path: "vendor/clang-sys/tests/build.rs", line_number: 49, line_content: "    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {" },
  { file_path: "vendor/clang-sys/tests/build.rs", line_number: 72, line_content: "    fn new(os: &str, arch: Arch, pointer_width: &str) -> Self {" },
  { file_path: "vendor/clang-sys/tests/build.rs", line_number: 92, line_content: "    fn env(mut self, env: &str) -> Self {" },
  { file_path: "vendor/clang-sys/tests/build.rs", line_number: 97, line_content: "    fn var(mut self, name: &str, value: Option<&str>) -> Self {" },
  { file_path: "vendor/clang-sys/tests/build.rs", line_number: 103, line_content: "    fn dir(mut self, path: &str) -> Self {" },
  { file_path: "vendor/clang-sys/tests/build.rs", line_number: 110, line_content: "    fn file(mut self, path: &str, contents: &[u8]) -> Self {" },
  { file_path: "vendor/clang-sys/tests/build.rs", line_number: 118, line_content: "    fn dll(self, path: &str, arch: Arch, pointer_width: &str) -> Self {" },
  { file_path: "vendor/clang-sys/tests/build.rs", line_number: 130, line_content: "    fn so(self, path: &str, pointer_width: &str) -> Self {" },
  { file_path: "vendor/clang-sys/tests/build.rs", line_number: 138, line_content: "    fn command(self, command: &str, args: &[&str], response: &str) -> Self {" },
  { file_path: "vendor/clang-sys/tests/build.rs", line_number: 149, line_content: "    fn enable(self) -> Self {" },
  { file_path: "vendor/clang-sys/tests/build.rs", line_number: 188, line_content: "    fn drop(&mut self) {" },
  { file_path: "vendor/clang-sys/tests/build.rs", line_number: 210, line_content: "fn test_all() {" },
  { file_path: "vendor/clang-sys/tests/build.rs", line_number: 245, line_content: "fn test_linux_directory_preference() {" },
  { file_path: "vendor/clang-sys/tests/build.rs", line_number: 257, line_content: "fn test_linux_version_preference() {" },
  { file_path: "vendor/clang-sys/tests/build.rs", line_number: 270, line_content: "fn test_linux_directory_and_version_preference() {" },
  { file_path: "vendor/clang-sys/tests/build.rs", line_number: 286, line_content: "fn test_windows_bin_sibling() {" },
  { file_path: "vendor/clang-sys/tests/build.rs", line_number: 299, line_content: "fn test_windows_mingw_gnu() {" },
  { file_path: "vendor/clang-sys/tests/build.rs", line_number: 315, line_content: "fn test_windows_mingw_msvc() {" },
  { file_path: "vendor/clang-sys/tests/build.rs", line_number: 331, line_content: "fn test_windows_arm64_on_x86_64() {" },
  { file_path: "vendor/clang-sys/tests/build.rs", line_number: 345, line_content: "fn test_windows_x86_64_on_arm64() {" },
  { file_path: "vendor/clang-sys/tests/lib.rs", line_number: 7, line_content: "fn parse() {" },
  { file_path: "vendor/clang-sys/tests/lib.rs", line_number: 27, line_content: "fn test() {" },
  { file_path: "vendor/clang-sys/tests/lib.rs", line_number: 37, line_content: "fn test() {" },
  { file_path: "vendor/clang-sys/tests/lib.rs", line_number: 42, line_content: "fn test_support() {" },
  { file_path: "vendor/clang-sys/tests/lib.rs", line_number: 48, line_content: "fn test_support_target() {" },
  { file_path: "vendor/clang-sys/tests/lib.rs", line_number: 56, line_content: "fn test_support_runtime() {" }
];
pattern_searched = "fn";
