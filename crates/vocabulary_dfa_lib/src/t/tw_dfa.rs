use regex::Regex;

pub fn matches_tw(text: &str) -> bool {
    let pattern = r"^(twait|tweak_1|tweak_2|tweak_score|tweak_score_top_collector|tweakedscoretopcollector|tweaker|tweediedistribution|tweedieproblem|tweedieregressorparams|tweedieregressorvalidparams|tween|twenty|twenty_hundred_mib|twenty_nine|twentyfive|twentyfour|twentyone|twentythree|twentytwo|twi|twice_fundamental|twilio|twilio_config|twiliowebhook|twins|twirp|twisting|twistor|twistor_space|twistor_transform|twistors|twitterdump|twix|twixt|two16|two17|two17_scalar|two1nine|two_16|two_arg_fn|two_arg_returning_usize_fn|two_arguments_form_expr|two_at_rev_instead_of_tag|two_bindings|two_bits|two_btn_first|two_btn_last|two_buffer|two_constants|two_d|two_dep_forms|two_deps_only_update_one|two_dots1|two_dots2|two_explicit_versions|two_fn_overload_module|two_fns|two_fruit|two_fruits|two_indexes|two_integer|two_kinds_of_msg_format_err|two_levels_of_nesting|two_levels_of_nesting_with_trailing_slash|two_lines|two_lockfiles|two_matching_in_config|two_methods|two_new|two_nowarn|two_pair_tests|two_pass_k_threshold|two_path_extractors|two_phantom|two_pi|two_pow_n|two_power|two_pt_prompt|two_refs|two_roots|two_semver_compatible|two_serve_dirs|two_types_in_same_mod|two_variables_defined_inside_and_used_after_no_ret|two_vecs|two_versions|two_words|twocalltype|twofixoverlapping|twofold|twogenericparams|twoh|twohe|twohea|twohead|twoheadl|twoheadle|twoheadlef|twoheadleft|twoheadlefta|twoheadleftar|twoheadleftarr|twoheadleftarro|twoheadleftarrow|twoheadr|twoheadri|twoheadrig|twoheadrigh|twoheadright|twoheadrighta|twoheadrightar|twoheadrightarr|twoheadrightarro|twoheadrightarrow|tword|tword_cost|tworld|twos|twostrs|twothreefourˇfive|twotwotwotwˇo|twoval|twoway|twowayattentionblock|twox|twoˇck|twrite|twriter|twˇ|twˇofish)$";
    let re = Regex::new(pattern).unwrap();
    re.is_match(text)
}
