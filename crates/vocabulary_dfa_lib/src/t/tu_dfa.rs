use regex::Regex;

pub fn matches_tu(text: &str) -> bool {
    let pattern = r"^(tu6fjhfhfzunppvmj8l55ap2bbg4|tu_first_loop|tu_flags|tu_second_loop|tua|tuas|tub|tube|tubine|tufts|tui_cli|tui_input|tuicli|tuiimage|tuiloggerleveloutput|tuiloggersmartwidget|tuis|tuiwidgetevent|tuiwidgetstate|tukaani|tukids|tundrarum|tuned_model_id|tuned_model_source|tuned_models|tunedmodelslistiterator|tunedmodelslistpager|tunedmodelsource|tungstenitecloseframe|tungstenitemessage|tuning_example|tuning_system|tuning_task|tuningexample|tuningsnapshot|tuningtask|tunnel_protocol|tunneled|tunnelerror|tunneling|tunnelprotocol|tunnels|tunnelunexpectedeof|tunnelunsuccessful|tuo|tuohon|tuoi|tuoksi|tuolla|tuolle|tuolta|tuon|tuona|tuossa|tuosta|tuota|tup_ref|tup_ty|tuple0|tuple1_object|tuple2_object|tuple2deserializer|tuple3_object|tuple_args|tuple_array_conversions_info|tuple_as_embedded_triple|tuple_attrs|tuple_double_parens|tuple_ellipsis_pattern|tuple_encode|tuple_enum|tuple_enum_variants|tuple_expr_leading_comma|tuple_expression|tuple_field_access_types|tuple_field_accesses_rev|tuple_field_attrs|tuple_field_detail|tuple_field_first|tuple_field_iterator|tuple_field_list_recovery|tuple_field_to_def|tuple_fields_before|tuple_function_usage|tuple_in_parentheses_index_usage|tuple_index|tuple_index_in_macro|tuple_index_usage|tuple_infallible|tuple_init|tuple_of_2|tuple_of_3|tuple_of_bools_with_ellipsis_at_beginning_missing_arm|tuple_of_bools_with_ellipsis_at_end_missing_arm|tuple_of_bools_with_ellipsis_in_middle_missing_arm|tuple_of_enum_no_diagnostic|tuple_of_maybe_3|tuple_of_non_enum|tuple_of_one|tuple_of_tuple_and_bools|tuple_of_two|tuple_of_two_empty_tuple|tuple_param|tuple_param_matches_exactly|tuple_params|tuple_pat_fields|tuple_pat_leading_comma|tuple_pats|tuple_pattern|tuple_pattern_nested_match_ergonomics|tuple_private_fields_not_applicable|tuple_ptr_with_dst_tail|tuple_responses|tuple_round_trips|tuple_static|tuple_struct_destructured_with_self|tuple_struct_ellipsis_pattern|tuple_struct_field|tuple_struct_fields|tuple_struct_init|tuple_struct_name_collision|tuple_struct_out|tuple_struct_pat_rest|tuple_struct_pattern_with_unmatched_args_crash|tuple_struct_where|tuple_struct_with_fn|tuple_tests|tuple_to_array|tuple_trait_impl|tuple_trait_inner|tuple_type_fields|tuple_types|tuple_usage|tuple_variant|tuple_variant_record_literal|tuple_wildcard|tuple_with_ref|tupledata|tupledefault|tuplederiveddefault|tupleenumvariantparser|tupleidx|tupleindex|tupleinfallible|tuplekind|tuplelike|tuplemulti|tuplenums|tuplereturnerbad|tuplereturnerok|tuplereturnerok2|tuplereturnerok3|tuples_bad|tuplestructderiveddefault|tuplestructnoteq|tuplestructreprc|tuplestructvec|tuplestructwithnoncopy|tupletypeschema|tuplevariant|tuplevariant1|tuplevariant2|tuplevariant3|tuplevariantserializer|tuplewrapper|tups|tur|turbine_fec_set_index_counts|turbine_quic_client|turbine_quic_endpoint|turbine_quic_endpoint_join_handle|turbine_quic_endpoint_receiver|turbine_quic_endpoint_runtime|turbine_quic_server|turbine_start|turbine_wire_format_packets|turbinequicstats|turbnbnrp22nwzcmgvvxfsshz7h7v23zmzqga46ypmq|turbofish_args|turbofish_generic_arg_list|turbofish_range|turbofish_target|turbofishing|turbosetting|turbrptzbzdu6pjmwvrtbcjxxgxus19cvqamurrd9bn|turbulence|turbulobroom|turdus|turing|turkey|turkmen|turl|turn_back|turn_duration|turn_id|turn_idx|turn_input|turn_input_messages|turn_output|turn_processor|turn_progress|turn_threshold|turnings|turninterrupted|turnning|turnover|turnover_ratio|turns_taken|turnstile|turnstone|turpis|turtle1|turtle_cmd_vel_topic|turtle_cmd_vel_writer|turtle_path|turtle_pose_reader|turtle_pose_topic|turtle_string_with_literal|turtle_strings|turtle_teleop|turtle_twist_topic|turtle_vel_publisher|turtleformatter|turtlesim|tus|tusjzm09xatcmk9u2igqze|tusker|tutorials_dir|tutti|tutto|tuve|tuviera|tuvierais|tuvieran|tuvieras|tuvieron|tuviese|tuvieseis|tuviesen|tuvieses|tuvimos|tuviste|tuvisteis|tuviéramos|tuviésemos|tuvo|tuya|tuyas|tuyo|tuyos)$";
    let re = Regex::new(pattern).unwrap();
    re.is_match(text)
}
