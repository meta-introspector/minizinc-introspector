use regex::Regex;

pub fn matches_mc(text: &str) -> bool {
    let pattern = r"^(mc5xb47h3dkjhym5rla9mpzwv5snersf3knv5aauxk8|mcall_expr|mcar|mcarton_sees_all|mcd|mcdr|mce|mcexp|mcfresult|mci0|mci1|mci2|mcluhanimpl|mco|mcode|mcom|mcomm|mcomma|mcons|mcp_|mcp_attribute|mcp_authentication|mcp_authorization|mcp_client_config|mcp_client_rs|mcp_command|mcp_config|mcp_config_manager|mcp_connection_errors|mcp_connection_manager|mcp_core_macros|mcp_dyn|mcp_enabled|mcp_error|mcp_executor|mcp_github|mcp_google_drive|mcp_hammer|mcp_handler_name|mcp_load_record|mcp_local_config|mcp_manager|mcp_mic|mcp_mic2|mcp_mic3|mcp_mic4|mcp_notification_rx|mcp_notifications|mcp_path|mcp_protocol_version|mcp_queries|mcp_registry|mcp_request|mcp_response_|mcp_response_log|mcp_rx|mcp_server_env|mcp_server_layer|mcp_server_name|mcp_server_name_without_tool_specification_to_include_all_tools|mcp_server_protocol|mcp_server_transport|mcp_services|mcp_slack|mcp_snowflake|mcp_status|mcp_target|mcp_test|mcp_tool_call|mcp_tool_call_end_event|mcp_tool_name|mcp_tool_name_delimiter|mcp_tool_to_openai_tool|mcp_toolboxes|mcp_url|mcp_user_config|mcpaddargs|mcpaddjsonargs|mcpclientbox|mcpclientconfig|mcpclienterror|mcpcommand|mcpcommandgroup|mcpconnectionmanager|mcpcontent|mcpgetargs|mcphandler|mcpidp|mcpinfo|mcpinittimeout|mcpinterface|mcploadedbefore|mcpnointeractivetimeout|mcpnotification|mcpplaygroundapp|mcpquery|mcpremoveargs|mcpservererror|mcpserverinit|mcpservername|mcpspinners|mcpsseserver|mcpstdioserver|mcptarget|mcptargetname|mcptargetspec|mcptool|mcptoolcallbegin|mcptoolcallbeginevent|mcptoolcallend|mcptoolcallendevent|mcptoolcalloutput|mcptoolerror|mcptoolinfo|mcptools|mcptoolspanel|mcpu|mcsvm_cs|mcts|mcy)$";
    let re = Regex::new(pattern).unwrap();
    re.is_match(text)
}
