use regex::Regex;

pub fn matches_ms(text: &str) -> bool {
    let pattern = r"^(ms3jqgsazcx17h|ms_agent_name|ms_ctl|ms_for_n_slots|ms_jurisdiction_country|ms_jurisdiction_locality|ms_jurisdiction_state_or_province|ms_per_age|ms_per_h|ms_per_m|ms_per_slot|ms_rdonly|ms_spc|ms_version|msaa|msaa_texture|msaa_texture_ref|msan|msasmstmt|msb_offset_mask|msb_offsets|msb_scales|msb_scales_mask|msb_two_bits_mask|msboption|msc|mscale|mscale_all_dim|mscodeind|mscope|mscr|mselector|msflags|msftedit|msg1|msg2|msg3|msg_019lblyfj7fg3fuaqzurqbyi|msg_01dzdmxysgq8apqxmqobv6kb|msg_123|msg_456|msg_all_components_built_successfully|msg_arg|msg_atomic|msg_b|msg_build_dir|msg_building_all_components|msg_building_coverage_instrumentation|msg_building_ffi_wrapper|msg_building_gecode|msg_building_libminizinc|msg_building_rust_ffi_crate|msg_bytes|msg_cache_test|msg_checking_library_at|msg_cmake_command|msg_cmake_command_executed|msg_control|msg_controllen|msg_count|msg_else_block_not_needed|msg_end|msg_ensuring_build_dir_exists|msg_event|msg_ffi_headers_generated_successfully|msg_ffi_wrapper_built_successfully|msg_finished_build_ffi_wrapper|msg_flags|msg_gecode_built_successfully|msg_generating_ffi_headers|msg_hdr|msg_header_offset|msg_header_offset_plus_one|msg_id_2|msg_inbox|msg_iov|msg_iovlen|msg_libminizinc_built_successfully|msg_libminizinc_built_with_coverage|msg_make_command|msg_make_command_executed|msg_map|msg_minizinc_ffi_crate_dir|msg_mkdir_command_executed|msg_mkdir_stderr|msg_mkdir_stdout|msg_namelen|msg_no_build_command_provided|msg_opt|msg_outbox|msg_per_sec|msg_post_condition_met_lib_found|msg_pre_condition_met_build_dir_exists|msg_project_root|msg_redundant_continue_expression|msg_redundant_else_block|msg_res|msg_result|msg_running_cmake|msg_running_make|msg_rust_ffi_crate_built_successfully|msg_rx|msg_send|msg_seq|msg_setting_up_solver_configs|msg_signers|msg_size|msg_size_offsets|msg_sizes|msg_snippet|msg_solver_configs_set_up_successfully|msg_start|msg_start_offset|msg_start_offsets|msg_starting_build_ffi_wrapper|msg_temporary|msg_temporary_refmut|msg_waitforone|msg_with_id|msg_with_package|msgs_len|msgwaitformultipleobjects|msi|mside|msix_app_dir|msjurisdictioncountry|msjurisdictionlocality|msjurisdictionstateorprovince|msm_base_cost|msm_incremental_cost|msm_product|msmarco|msp|msp430_dash_interrupt|msp430interrupt|mspace|msqrt|msra|msrv_1_12|msrv_1_13|msrv_1_16|msrv_1_17|msrv_1_23|msrv_1_24|msrv_1_27|msrv_1_28|msrv_1_29|msrv_1_30|msrv_1_32|msrv_1_42|msrv_1_47|msrv_1_49|msrv_1_55|msrv_1_57|msrv_1_58|msrv_1_62|msrv_1_63|msrv_1_64|msrv_1_65|msrv_1_71|msrv_1_76|msrv_1_77|msrv_1_82|msrv_1_88|msrv_1_xx|msrv_1_yy|msrv_aliases|msrv_attr|msrv_attr_impl|msrv_attrs|msrv_compat_count|msrv_ctor|msrv_cx|msrv_dep|msrv_deps|msrv_edition|msrv_fresh|msrv_from_nearest_manifest_path_or_ws|msrv_juust_right|msrv_non_ok_in_const|msrv_not_meet|msrv_note|msrv_ok_in_const|msrv_policy|msrv_ref|msrv_stack|msrv_too_low|msrv_ty|mss|msse3|mssql|mst|mstore|mstp|mstpo|mstpos|mstyle|msu|msubsup|msup|msvcrt|msys2|msys64)$";
    let re = Regex::new(pattern).unwrap();
    re.is_match(text)
}
