use regex::Regex;

pub fn matches_my(text: &str) -> bool {
    let pattern = r"^(my11111111111111111111111111111111111111111|my22211111111111111111111111111111111111111|my33311111111111111111111111111111111111111|my3byzvqsc5mv0gqljhnnbq|my_0p5|my_1_frac_pi|my_3|my_a|my_adapter|my_add|my_adds|my_agg_level1|my_agg_level2|my_arr|my_attr|my_attribute_macro|my_attribute_macro_signature|my_awesome_crate|my_awesome_lib|my_awesome_ui_library|my_bad_macro|my_bad_macro2|my_bank_forks|my_bankhash|my_block|my_build_task|my_bytes|my_client_index|my_clone|my_cmp|my_code_stack|my_collection|my_component|my_const_full_check|my_cool_helper_attribute|my_crate_name|my_crawler|my_current_count|my_custom_attr|my_custom_attribute|my_custom_check|my_custom_tool|my_date|my_default_value|my_dependencies|my_derive|my_derive_macro|my_derive_macro_signature|my_div|my_drop|my_drop2|my_e|my_embed|my_embeddings|my_enum|my_enum_module|my_epoch|my_example_function|my_favorite_linked_list|my_feature|my_feature_name|my_field_name|my_fixture|my_fn2|my_frac_1_sqrt_2|my_frac_2_pi|my_frac_2_sq_pi|my_frac_pi_2|my_frac_pi_3|my_frac_pi_4|my_frac_pi_6|my_frac_pi_8|my_fun|my_function_like_macro|my_function_like_macro_signature|my_generic_struct|my_genesis_accounts|my_get_item|my_good_macro|my_gossip_addr|my_hashes_per_second|my_heaviest_fork|my_heaviest_fork_bankhash|my_heaviest_fork_hash|my_heaviest_fork_slot|my_histogram|my_home|my_http_request|my_identity|my_ids|my_int|my_intersperse|my_interval|my_io_definition|my_item|my_iterator|my_keypairs|my_last_report_count|my_last_vote_epoch|my_last_voted_fork_slots|my_latest_landed_vote|my_latest_landed_vote_slot|my_latest_optimistically_confirmed_slot|my_layer|my_leader_slot|my_lib|my_library|my_lint|my_list|my_ln_10|my_ln_2|my_local|my_log10_e|my_log2_e|my_lower_right|my_macro___|my_macro_created_function|my_max|my_mcp|my_member|my_min|my_multiply|my_neg_1|my_new_size|my_node_name_test|my_node_pubkey|my_old_pubkey|my_org|my_other_embeddings|my_other_mod|my_panic|my_parition_index|my_partition|my_pi|my_plugin_module|my_plugin_module_id|my_pos|my_prelude|my_primitive_value|my_primitive_value_type|my_principal|my_println|my_println2|my_println2_args|my_println_args|my_private_key|my_ptr|my_pubkey1|my_public_key|my_rank|my_recipe|my_refactor|my_refactor_callbacks|my_regex|my_requests|my_role|my_rule|my_runner|my_scope|my_scores1|my_scores2|my_scores3|my_season|my_secret_key_missing|my_service_client|my_snapshot|my_special_const|my_special_tool|my_speedy_|my_speedy_crate_|my_sq2|my_stack_frame|my_struct_trait|my_sub|my_tau|my_term|my_tests|my_text_field|my_texts2|my_tool|my_tos|my_total_newly_processed_slots_since_last_report|my_transformer|my_transmute|my_ttl_workflow|my_type|my_uncool_type|my_union|my_val|my_value_type|my_vote_keypair|my_vote_pubkey|my_votes|myalais|myalias|myaliasstr|myaliasvec|myanmar|myany|myatomic|myattr|myattribute|mybag|mybangmacro|mybench|mybin|mybnode|mybody|mybox|mycelialnode|mycelium_color_code|mycelium_essence|mycelium_essence_|mycelium_grid|mycelium_height|mycelium_width|myceliumweb|mycell|mycfg|mycfgstruct|mycfgtuplestruct|mycket|myclass|myclone|mycollection|myconfig|myconnectinfo|mycontainer|mycontext|mycooltrait|mycooltype|mycooltypeinternal|mycrate|mycustombuild|mycustomdocument|mycustomiter|mycustomvalue|myd|myderivedtrait|mydg|myds|myelˇ|myembeddingmodeltype|myemptystruct|myemptytuplestruct|myerr|myerrorwithparam|myexm|myexm1|myexm2|myfeature|myfun|myfunc|myfut|mygadg|mygenericstruct|mygenericstruct2|myhisto|myhttprequest|myi|myid|myimportantfile|myinnertype|myinternalterm|myinternaltriple|myintersperse|myintersperseext|myintoiter|myiodefinition|myiterabletype|myiterator|mykje|mylib_sys|mylibraryextractor|mylibrarystate|mylockfile|mylog|mymetadata|mymod|mymodeltype|myndex|mynone|myoption|myotherprofile|mypackage|mypathnamed|mypathunit|mypathunnamed|mypercentiles|myprimitivevalue|myprimitivevaluetype|myprofile|mypug|mypure|mypuretrait|mypy|myquery|myqueryrejection|myref|myres|myresponse|myscript|mysecrets|myseektrait|mysensitive|myserde|myservice|mysharedtesttrait|mysimplestruct|mysingletuplestruct|mysized|myslice|mysolution|mysome|myspecialfnmut|mysterious|mystical|mystructwithprivitem|mystructwithpubitem|mystérieux|mysubfield|mysummary|myt|mytable|mythic|mything|mythomax|mythomax_l2_13b|mythomax_l2_13b_lite|mytokenizer|mytoolbox|mytrait2|mytrait3|mytraitalias|mytraitmap2|mytriple|mytype2|mytypealias|mytypedebug|mytypeid|mytypenondebug|myug|myuncheckedtable|myuncooltype|myunio|myunion|myunitlikestruct|myvalue|myvaluetype|mywrapper)$";
    let re = Regex::new(pattern).unwrap();
    re.is_match(text)
}
