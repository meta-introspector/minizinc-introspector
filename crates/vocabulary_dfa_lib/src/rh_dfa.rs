use regex::Regex;

pub fn matches_rh(text: &str) -> bool {
    let pattern = r"^(rha|rhai_fn_add_together|rhai_fn_attr|rhai_fn_do_nothing|rhai_fn_do_something|rhai_fn_increment|rhai_fn_return_dynamic|rhai_fn_special_print|rhai_fns|rhai_generate_into_module|rhai_inclusive_range|rhai_inclusive_range_expand|rhai_inclusive_range_type|rhai_module_generate|rhai_range|rhai_range_expand|rhai_range_type|rhai_result_of_type|rhai_result_of_type_expand|rhai_result_type|rhai_result_type_expand|rhai_script_extension|rhai_std|rhaiscript|rhar|rhard|rharu|rharul|rhashmapvisitor|rhello|rhgf|rhinoceros|rhm|rhode|rhodesian|rhoncus|rhos_c|rhos_p|rhov|rhs0|rhs1|rhs2|rhs2_path|rhs_|rhs_a_to_b|rhs_b|rhs_b_to_a|rhs_bound|rhs_bounds|rhs_buffer|rhs_c|rhs_chars|rhs_child|rhs_children|rhs_children_clone|rhs_col|rhs_conj|rhs_const|rhs_cs|rhs_curr|rhs_device|rhs_dim1|rhs_dim2|rhs_dims|rhs_dual_idx|rhs_ele|rhs_entries|rhs_expect|rhs_expr|rhs_from_glob|rhs_from_specific|rhs_grad|rhs_guard|rhs_has_allowed_ty|rhs_helper|rhs_i|rhs_id|rhs_is_auto|rhs_is_different|rhs_is_simple_path|rhs_k|rhs_keys|rhs_kind|rhs_layout|rhs_len|rhs_lhs|rhs_m1|rhs_m2|rhs_name|rhs_ndims|rhs_norm|rhs_op|rhs_operand|rhs_other|rhs_p|rhs_paren|rhs_permutation|rhs_place|rhs_prefix|rhs_proj|rhs_ref_counter|rhs_rel|rhs_rels|rhs_rhs|rhs_rs|rhs_snip|rhs_snippet|rhs_span|rhs_storage|rhs_str|rhs_stride|rhs_string|rhs_sum_grad|rhs_to_query_string|rhs_tree|rhs_ty_string|rhs_ty_string_elem|rhs_value|rhs_view|rhskind|rhslhs|rhsrelation|rhsrhs|rhythm1|rhythm2|rhythmic|rhythms)$";
    let re = Regex::new(pattern).unwrap();
    re.is_match(text)
}
