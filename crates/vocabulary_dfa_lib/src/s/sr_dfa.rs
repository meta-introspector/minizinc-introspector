use regex::Regex;

pub fn matches_sr(text: &str) -> bool {
    let pattern = r"^(sr16k|sr36kutsvos7n5b43zkaeuaxyq11hujzpxamc0ra1hm641s|sr8k|sr_in|sr_out|sr_ratios|sra|srar|srarr|srart|src4|src_access|src_addr|src_arg|src_base_str|src_big|src_bin|src_buf|src_bytes_per_pixel|src_c_idx|src_cfg|src_change_builder|src_chunk|src_chunk_addr|src_chunk_iter|src_clock|src_core_entry|src_dim_len|src_dim_size|src_el|src_end|src_entries|src_entry|src_epochschedule|src_eq_src|src_fees|src_file|src_file_id|src_file_path|src_files|src_format|src_func|src_grad|src_guard|src_h|src_h_idx|src_h_idxs|src_hashes|src_hashes_buf|src_history|src_history_buf|src_host_addr|src_idxs|src_insert|src_is_dir|src_is_ref|src_kind|src_lamports|src_limit|src_metadata|src_method|src_model|src_model_git|src_model_lean|src_model_lean_types|src_model_math|src_o|src_o_in_bytes|src_paths_types|src_playground|src_principal|src_region|src_remaining|src_remove|src_rent|src_restart|src_rewards|src_right_len|src_rope|src_row_end|src_row_pixels|src_row_start|src_row_stride|src_s|src_s0|src_s1|src_s2|src_s3|src_slice|src_slot_output|src_snapshot_dir|src_snapshot_file|src_split|src_start|src_stat|src_state|src_status_cache|src_stride1|src_strides|src_sum_grad|src_sz|src_tty|src_ty|src_ty_range|src_type|src_type_def|src_type_path|src_u|src_v|src_va|src_val|src_vec|src_version_file|src_views|src_w|src_w_idx|src_w_idxs|src_y|srcdoc|srclang|srcnotfound|srcset|srctoken|srds07|sre|sreceiver|srecv|sreg|sresize|srgb_to_y|srgba|srical|srollwheelevent|srpdceummoss9nfhbdktdkdg9zyi0ibmcp6ymdex8q|srremy31j5y25fraapwvb9kzcfxbusymmsvtk9awv5q|srv_type|srw|srwindow|srwx|srx|srx20)$";
    let re = Regex::new(pattern).unwrap();
    re.is_match(text)
}
