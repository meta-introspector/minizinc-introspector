use regex::Regex;

pub fn matches_f3(text: &str) -> bool {
    let pattern = r"^(f32_100k|f32_10k|f32_1k|f32_approx_eq_ratio_test1|f32_approx_eq_ratio_test2|f32_approx_eq_ratio_test_against_a_zero_is_false|f32_approx_eq_ratio_test_negative_numbers|f32_approx_eq_ratio_test_zero_eq_zero_returns_true|f32_approx_eq_ratio_test_zero_ne_zero_returns_false|f32_approx_eq_test1|f32_approx_eq_test2|f32_approx_eq_test3|f32_approx_eq_test4|f32_approx_eq_test5|f32_approx_eq_test6|f32_approx_eq_ulps_test1|f32_approx_eq_ulps_test2|f32_approx_eq_ulps_test_zeroes|f32_ckernels|f32_const_token|f32_consts|f32_epsilon|f32_functions|f32_legacy_const_digits|f32_legacy_const_epsilon|f32_legacy_const_infinity|f32_legacy_const_mantissa_dig|f32_legacy_const_max|f32_legacy_const_max_10_exp|f32_legacy_const_max_exp|f32_legacy_const_min|f32_legacy_const_min_10_exp|f32_legacy_const_min_exp|f32_legacy_const_min_positive|f32_legacy_const_nan|f32_legacy_const_neg_infinity|f32_legacy_const_radix|f32_ordered_bits|f32_path|f32_self|f32_skernels|f32_suffixed|f32_to_decimal|f32_to_f64|f32_to_int|f32_ulps_test1|f32_ulps_test2|f32_ulps_test3|f32_ulps_test4|f32_ulps_test5|f32_ulps_test6|f32_vec|f32abs|f32margin|f32mm|f32parser|f32range|f32x4|f32x4_add|f32x4_convert_i32x4|f32x4_extract_lane|f32x4_mul|f32x4_relaxed_madd|f32x4_splat|f32x4_sub|f3_len|f3ohxsq1ilqmlriw2vorzuk52a9qqm1v5pmmywfmlwpmtpyqx0lkyorbkfh2x6v9yz62w21ewhsvbt|f3x)$";
    let re = Regex::new(pattern).unwrap();
    re.is_match(text)
}
