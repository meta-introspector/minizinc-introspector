use regex::Regex;

pub fn matches_fs(text: &str) -> bool {
    let pattern = r"^(fs_case_sensitive|fs_children_count|fs_create|fs_create_dir_all|fs_create_dirs|fs_create_service|fs_depth|fs_directory|fs_dot_git|fs_entries|fs_entries_depth|fs_entries_update_task|fs_events_rx|fs_fake|fs_image|fs_line|fs_meta|fs_metadata|fs_metadata_accessed|fs_metadata_accessed_definition|fs_metadata_created|fs_metadata_created_definition|fs_metadata_is_dir|fs_metadata_is_dir_definition|fs_metadata_is_file|fs_metadata_is_file_definition|fs_metadata_is_symlink|fs_metadata_is_symlink_definition|fs_metadata_len|fs_metadata_len_definition|fs_metadata_modified|fs_metadata_modified_definition|fs_mock|fs_modified|fs_module|fs_module_sandbox|fs_module_sb|fs_mono_sprite|fs_ops|fs_patch|fs_patch_service|fs_path_to_check|fs_paths_to_check|fs_poly_sprite|fs_proj|fs_quad|fs_read_service|fs_real|fs_remove_service|fs_search_service|fs_shadow|fs_snap|fs_state|fs_status|fs_std|fs_surface|fs_tokenizer|fs_try_exists|fs_underline|fs_undo|fs_undo_service|fs_utf8|fs_watcher_instance|fs_write_string|fschildren|fscr|fscreate|fsdasdsa|fsdghs|fsdirectory|fsdocument|fsdocumenterror|fsentry|fsentrydirectory|fsentryexternalfile|fsentryfile|fsevent_sys|fsevents|fseventsgetcurrenteventid|fseventstreamcontext|fseventstreamcreate|fseventstreameventflags|fseventstreameventid|fseventstreaminvalidate|fseventstreamref|fseventstreamrelease|fseventstreamschedulewithrunloop|fseventstreamstart|fseventstreamstop|fsextraerror|fsfcompliance|fsfileinfoinput|fsimage|fskip|fsline|fslistinput|fsmonitor|fsmonitor_daemon|fsn1|fspatch|fspatchinput|fsproj|fsreadoperation|fsremove|fssearchhelper|fssearchinput|fssl|fsstatus|fsstatusoutdated|fst_builder|fst_error|fst_error_to_io_error|fst_expanded|fst_file|fst_file_slice|fst_key|fst_len|fst_length|fst_slice|fst_termdict|fst_version|fsts|fstype|fsundo|fsundooutput|fswritemode|fsync|fsyntax)$";
    let re = Regex::new(pattern).unwrap();
    re.is_match(text)
}
