use regex::Regex;

pub fn matches_ig(text: &str) -> bool {
    let pattern = r"^(igen|ign_item|igniter|igniting|ignition|ignitor|ignorable|ignore_already_converted_if|ignore_already_converted_loop|ignore_arg_param_mismatch|ignore_attr|ignore_bad_directories|ignore_bindings|ignore_breakpoints|ignore_broken_symlinks|ignore_cache|ignore_command|ignore_completion_provider|ignore_contents|ignore_count|ignore_current_dir_workspace|ignore_current_insertion|ignore_cursor_in_body|ignore_debounce|ignore_default_excludes|ignore_derive_clone|ignore_dir|ignore_dir_path|ignore_disabled_for_language|ignore_disabled_input|ignore_dotdirs|ignore_dotfile|ignore_elements|ignore_else_branch|ignore_empty_lines|ignore_eos|ignore_err|ignore_errors|ignore_exclude|ignore_external|ignore_fake_clone|ignore_files|ignore_first|ignore_flyimport|ignore_flyimport_methods|ignore_functions|ignore_generic_clone|ignore_globs|ignore_headers|ignore_hidden|ignore_http_bad_gateway|ignore_impl_func_with_incorrect_return|ignore_inactive_targets|ignore_include|ignore_indent|ignore_index_target|ignore_inlay_hint_for_macro_call|ignore_inner_attr|ignore_inside_external_proc_macro|ignore_inside_if_stmt|ignore_inside_let_initializer|ignore_inside_with_span_proc_macro|ignore_invalid_headers_in_responses|ignore_invalid_json_lines|ignore_invalid_json_lines_git|ignore_invalid_json_lines_http|ignore_io_errors|ignore_last_segment|ignore_local_imports|ignore_locals|ignore_lockfile|ignore_lockfile_inner|ignore_merges|ignore_methods|ignore_missing_clone_from|ignore_mixed|ignore_nested|ignore_newlines|ignore_no_literal|ignore_nodes|ignore_non_errors_from_included_files|ignore_parameter_name|ignore_parent_abs_path|ignore_parent_path|ignore_patterns|ignore_pending_dir|ignore_pointers|ignore_proc_macro|ignore_queue|ignore_queue_rx|ignore_queue_tx|ignore_quiet|ignore_refcounts|ignore_reserved_accounts|ignore_return|ignore_rule|ignore_segments|ignore_selections_change|ignore_serde|ignore_set|ignore_should_package|ignore_shutdown_errors|ignore_span|ignore_stack|ignore_stack_for_abs_path|ignore_statements_after_if|ignore_statements_inside_if|ignore_stderr|ignore_stdin|ignore_stdout|ignore_struct|ignore_surrounding_workspace|ignore_text|ignore_timeout|ignore_tys|ignore_ulimit_nofile_error|ignore_underscore_prefix|ignore_underscore_prefixed|ignore_unknown|ignore_unrecognized_fields|ignore_unused_set|ignore_up_to|ignore_val|ignore_version_from_other_platform|ignore_when_crate_ignored|ignore_whitespace|ignore_without_reason_info|ignore_workspace_specifier|ignoreassocitems|ignoreattribute|ignorebreakpointstate|ignorecache|ignorecase|ignoreconstgenericnew|ignored_32bit|ignored_any|ignored_bar|ignored_comments|ignored_def_ids|ignored_dir|ignored_dir_entry|ignored_file|ignored_foo|ignored_git_revision|ignored_macros|ignored_moar|ignored_multi|ignored_multi_delta|ignored_nested|ignored_patterns|ignored_proc_macros|ignored_resource_foreground|ignored_resources|ignored_slot|ignored_storage|ignored_subdir|ignored_tests|ignored_traits|ignored_ty|ignored_unit_patterns_info|ignored_value|ignored_with_reason|ignored_without_reason|ignorederived|ignoredextensions|ignoredmulti|ignorefile|ignorefirst|ignoreflyimportmethods|ignoregenericnew|ignorelifetimenew|ignorelist|ignoreme|ignoreme2|ignorenewlines|ignores_by_parent_abs_path|ignores_carriage_return_in_lockfile|ignores_doc_hidden_and_non_exhaustive_for_crate_local_enums|ignores_doc_hidden_for_crate_local_enums|ignores_extern_items|ignores_extern_items_from_macro|ignores_failure_to_format_source|ignores_incremental|ignores_no_mangle_items|ignores_no_mangle_items_with_no_abi|ignores_non_exhaustive_for_crate_local_enums|ignores_on_stable|ignores_to_update|ignores_unknown_index_version|ignores_unknown_index_version_git|ignores_unknown_index_version_http|ignores_whitespace|ignorestack|ignoreunsafenew|igr|igra|igrav|igrave|iguana|igumnov|igumnovnsk)$";
    let re = Regex::new(pattern).unwrap();
    re.is_match(text)
}
