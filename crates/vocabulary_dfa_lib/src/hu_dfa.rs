use regex::Regex;

pub fn matches_hu(text: &str) -> bool {
    let pattern = r"^(huaku5psjxzuw54lrg1ksbxzhv2fzczq9snbmisvmeju|huang|hube|huberror|hubiera|hubierais|hubieran|hubieras|hubieron|hubiese|hubieseis|hubiesen|hubieses|hubimos|hubiste|hubisteis|hubiéramos|hubiésemos|hubo|hue_index|huge_clean|huge_struct|huggingface_api_base_url|huggingfaceapi|huggingfacechattemplate|huggingfacedatasetconverter|huggingfaceh4|huggingfaceremote|huggingfacetokenizerfile|huggingfacetokenizerstring|huggingfaceweight|huggingfaceweightbuilder|hugo|hum|human_bytes|human_format|human_name|human_readable_names|human_readable_package_name|human_sizes|humanemitter|humaneval|humanformat|humanified|humanize_context_length|humanize_token_count|humanized|humanized_action_names|humanui|humanuibutton|humanuipanel|humbleness|humbletype|humbly|hummingbirdcake|humour|hump|humpd|humpdo|humpdow|humpdown|humpdownh|humpdownhu|humpdownhum|humpdownhump|humpe|humpeq|humpequ|humpequa|humpequal|hun|hundred_thousands|hundredth|hungary|hungry|hunk_after_position|hunk_anchor|hunk_before_position|hunk_bounds|hunk_buffer_range|hunk_collapsed|hunk_display_end|hunk_display_start|hunk_end|hunk_end_point|hunk_excerpt_end|hunk_excerpt_start|hunk_expanded|hunk_header|hunk_hitbox|hunk_index|hunk_info|hunk_input|hunk_ix|hunk_lines|hunk_opacity|hunk_secondary_status|hunk_staging_operation_count|hunk_staging_operation_count_as_of_write|hunk_start_anchor|hunk_start_point|hunk_to_change|hunk_to_paint|hunkheader|hunkiter|hunkline|hunks_for_ranges|hunks_intersecting_range_rev|hunks_rx|hunks_tx|hunksstagedorunstaged|hunkstatus|hunt|hunter|hunter2|hunting|huqdwjodfhaewh6awdsdvuqsjrket5dyxmyydytd8hdn|hurd|hurdles|hurricane|hush|husky|hussar|hut|huyenchip)$";
    let re = Regex::new(pattern).unwrap();
    re.is_match(text)
}
