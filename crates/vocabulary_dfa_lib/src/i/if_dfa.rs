use regex::Regex;

pub fn matches_if(text: &str) -> bool {
    let pattern = r"^(if_arm|if_block_condition|if_body|if_body_expr|if_build_set_to_false_dont_treat_build_rs_as_build_script|if_check|if_clause|if_coerce|if_completion_in_match_arm_expr|if_completion_in_match_arm_expr_block|if_completion_in_match_guard|if_cond_range|if_condition|if_condition_with_if_inside|if_continue_filter_neg|if_else_adjust_for_branches_discard_type_var|if_else_coerce|if_else_if_highlight|if_else_never|if_expr_in_file|if_expr_positive|if_expr_to_guarded_return|if_exprs|if_handler|if_handler_with_bool|if_ident|if_idx|if_in_macro_highlight|if_indent_level|if_it_compiles_it_works|if_item_thing|if_keyword|if_kw_range|if_let_custom_enum|if_let_different_mutex|if_let_guards|if_let_in_macro|if_let_mov_func|if_let_mutex_info|if_let_ok_map|if_let_ok_map_err|if_let_option_result|if_let_or_match|if_let_redundant_pattern_matching|if_let_ref_func|if_let_result|if_let_return_err|if_let_some_map|if_let_some_result|if_let_type|if_log|if_log_enabled|if_never|if_not_els|if_not_else_info|if_odd|if_okay_dots_write_expr|if_okay_underscore_read_expr|if_okay_underscore_write_expr|if_okay_underscore_write_expr_true_negative|if_pos|if_range|if_return_unit_controller|if_same_then_else2|if_same_then_else_info|if_schema|if_single_statement|if_some|if_span|if_statement_binops|if_stmt|if_strategy|if_suggestion|if_test|if_then_backward|if_then_forward|if_then_some_backward|if_then_some_else_none_info|if_then_some_forward|if_to_process|if_to_ssa_handler|if_token_range|if_usable|if_vec_strategy|iface_config_map|iface_configs|iface_name|ifaces|ifb|ifb0|ifblock|ifblocktype|ifco|ifdesugar|ifexprctl|ifexprs|iff_token|iffy|ifheader|ifile|ifileopendialog|ifilesavedialog|ifis|ifkw|ifl|iflet_else_se|iflet_then_se|ifletlocal|ifomiter|ifoption|ifr|ifragment|ifrequired|ifs_same_cond_info|ifstmt|ift|ift_model|ifthen|ifthenelse|ifthenschema|iftop|ifunc|ifuncs|ifwhile|ifË‡)$";
    let re = Regex::new(pattern).unwrap();
    re.is_match(text)
}
