pub const MKDIR: &str = "mkdir";
pub const BUILD_C_WRAPPER_ON: &str = "-DBUILD_C_WRAPPER=ON";
pub const CMAKE: &str = "cmake";
pub const MINIZINC_C_WRAPPER: &str = "minizinc_c_wrapper";
pub const F_FLAG: &str = "-f";
pub const O_FLAG: &str = "-o";
pub const MAKE_STRACE_LOG: &str = "make_strace.log";
pub const MAKE: &str = "make";
pub const STRACE: &str = "strace";
pub const LIBMINIZINC_C_WRAPPER_SO: &str = "libminizinc_c_wrapper.so";
pub const BUILDS_ALL_CORE_COMPONENTS: &str = " Builds all core components (Gecode, libminizinc, FFI)";
pub const BUILDS_GECODE: &str = " Builds Gecode";
pub const BUILDS_LIBMINIZINC: &str = " Builds libminizinc";
pub const BUILDS_CPP_FFI_WRAPPER: &str = " Builds the C++ FFI wrapper";
pub const BUILDS_RUST_FFI_CRATE: &str = " Builds the Rust FFI crate";
pub const GENERATES_FFI_HEADER_DECLARATIONS: &str = " Generates FFI header declarations";
pub const SETS_UP_MINIZINC_SOLVER_CONFIGURATIONS: &str = " Sets up MiniZinc solver configurations";
pub const BUILDS_LIBMINIZINC_WITH_COVERAGE_INSTRUMENTATION: &str = " Builds libminizinc with coverage instrumentation";
pub const B_FLAG: &str = "-B";
pub const DOT: &str = ".";
pub const STR_TYPE: &str = "str";
pub const STRING_TYPE: &str = "String";
pub const CLEANS_ALL_BUILD_ARTIFACTS: &str = " Cleans all build artifacts";
pub const CLEANS_MAIN_BUILD_DIRECTORY: &str = " Cleans the main build directory";
pub const CLEANS_COVERAGE_BUILD_DIRECTORY: &str = " Cleans the coverage build directory";
pub const CLEANS_GENERATED_PROOF_TAPES: &str = " Cleans generated proof tapes";
pub const LD_LIBRARY_PATH: &str = "LD_LIBRARY_PATH";
pub const COVERAGE_DIR_SUFFIX: &str = "_coverage";
