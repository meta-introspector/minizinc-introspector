use crate::functions::types::{PoemFunctionRegistry, PoemFunctionEntry};
//use crate::functions::callbacks::handle_list_title_regex::{handle_list_title_regex, POEM_FUNCTION_METADATA as LIST_TITLE_METADATA};
//use crate::functions::callbacks::handle_list_description_regex::{handle_list_description_regex, POEM_FUNCTION_METADATA as LIST_DESCRIPTION_METADATA};
//use crate::functions::callbacks::handle_memes_regex::{handle_memes_regex, POEM_FUNCTION_METADATA as MEMES_METADATA};
// use crate::functions::callbacks::handle_meme_template_2_regex::{handle_meme_template_2_regex, POEM_FUNCTION_METADATA as MEME_TEMPLATE_2_METADATA};
// use crate::functions::callbacks::handle_meme_template_3_regex::{handle_meme_template_3_regex, POEM_FUNCTION_METADATA as MEME_TEMPLATE_3_METADATA};
// use crate::functions::callbacks::handle_meme_template_4_regex::{handle_meme_template_4_regex, POEM_FUNCTION_METADATA as MEME_TEMPLATE_4_METADATA};
// use crate::functions::callbacks::handle_meme_template_5_regex::{handle_meme_template_5_regex, POEM_FUNCTION_METADATA as MEME_TEMPLATE_5_METADATA};
// use crate::functions::callbacks::handle_meme_template_6_regex::{handle_meme_template_6_regex, POEM_FUNCTION_METADATA as MEME_TEMPLATE_6_METADATA};
// use crate::functions::callbacks::handle_meme_template_7_regex::{handle_meme_template_7_regex, POEM_FUNCTION_METADATA as MEME_TEMPLATE_7_METADATA};
// use crate::functions::callbacks::handle_summary_from_pattern_regex::{handle_summary_from_pattern_regex, POEM_FUNCTION_METADATA as SUMMARY_FROM_PATTERN_METADATA};
// use crate::functions::callbacks::handle_indented_content_regex::{handle_indented_content_regex, POEM_FUNCTION_METADATA as INDENTED_CONTENT_METADATA};
// use crate::functions::callbacks::handle_poem_regex::{handle_poem_regex, POEM_FUNCTION_METADATA as POEM_METADATA};
// use crate::functions::callbacks::handle_art_regex::{handle_art_regex, POEM_FUNCTION_METADATA as ART_METADATA};
// use crate::functions::callbacks::handle_day_regex::{handle_day_regex, POEM_FUNCTION_METADATA as DAY_METADATA};
// use crate::functions::callbacks::handle_desc_regex::{handle_desc_regex, POEM_FUNCTION_METADATA as DESC_METADATA};
// use crate::functions::callbacks::handle_lore_regex::{handle_lore_regex, POEM_FUNCTION_METADATA as LORE_METADATA};
// use crate::functions::callbacks::handle_nft_id_regex::{handle_nft_id_regex, POEM_FUNCTION_METADATA as NFT_ID_METADATA};
// use crate::functions::callbacks::handle_numerology_regex::{handle_numerology_regex, POEM_FUNCTION_METADATA as NUMEROLOGY_METADATA};
// use crate::functions::callbacks::handle_traits_regex::{handle_traits_regex, POEM_FUNCTION_METADATA as TRAITS_METADATA};
// use crate::functions::callbacks::handle_content_header_regex::{handle_content_header_regex, POEM_FUNCTION_METADATA as CONTENT_HEADER_METADATA};
// use crate::functions::callbacks::handle_content_header_2_regex::{handle_content_header_2_regex, POEM_FUNCTION_METADATA as CONTENT_HEADER_2_METADATA};
// use crate::functions::callbacks::handle_content_header_3_regex::{handle_content_header_3_regex, POEM_FUNCTION_METADATA as CONTENT_HEADER_3_METADATA};
// use crate::functions::callbacks::handle_description_raw_regex::{handle_description_raw_regex, POEM_FUNCTION_METADATA as DESCRIPTION_RAW_METADATA};
// use crate::functions::callbacks::handle_meme_raw_regex::{handle_meme_raw_regex, POEM_FUNCTION_METADATA as MEME_RAW_METADATA};
// use crate::functions::callbacks::handle_concept_regex::{handle_concept_regex, POEM_FUNCTION_METADATA as CONCEPT_METADATA};
// use crate::functions::callbacks::handle_descr_raw_regex::{handle_descr_raw_regex, POEM_FUNCTION_METADATA as DESCR_RAW_METADATA};
// use crate::functions::callbacks::handle_moement_regex::{handle_moement_regex, POEM_FUNCTION_METADATA as MOEMENT_METADATA};
// use crate::functions::callbacks::handle_title_raw_regex::{handle_title_raw_regex, POEM_FUNCTION_METADATA as TITLE_RAW_METADATA};
// use crate::functions::callbacks::handle_2indentcontent_regex::{handle_2indentcontent_regex, POEM_FUNCTION_METADATA as INDENT_2_CONTENT_METADATA};
// use crate::functions::callbacks::handle_quote_content_regex::{handle_quote_content_regex, POEM_FUNCTION_METADATA as QUOTE_CONTENT_METADATA};
// use crate::functions::callbacks::handle_header1_regex::{handle_header1_regex, POEM_FUNCTION_METADATA as HEADER1_METADATA};
// use crate::functions::callbacks::handle_header2_regex::{handle_header2_regex, POEM_FUNCTION_METADATA as HEADER2_METADATA};
// use crate::functions::callbacks::handle_rev_regex::{handle_rev_regex, POEM_FUNCTION_METADATA as REV_METADATA};
// use crate::functions::callbacks::handle_named_file_regex::{handle_named_file_regex, POEM_FUNCTION_METADATA as NAMED_FILE_METADATA};
// use crate::functions::callbacks::handle_ref_regex::{handle_ref_regex, POEM_FUNCTION_METADATA as REF_METADATA};
// use crate::functions::callbacks::handle_list_regex::{handle_list_regex, POEM_FUNCTION_METADATA as LIST_METADATA};
// use crate::functions::callbacks::handle_list2_regex::{handle_list2_regex, POEM_FUNCTION_METADATA as LIST2_METADATA};
// use crate::functions::callbacks::handle_list3_regex::{handle_list3_regex, POEM_FUNCTION_METADATA as LIST3_METADATA};
// use crate::functions::callbacks::handle_desc_raw_2_regex::{handle_desc_raw_2_regex, POEM_FUNCTION_METADATA as DESC_RAW_2_METADATA};
// use crate::functions::callbacks::handle_xaiend_regex::{handle_xaiend_regex, POEM_FUNCTION_METADATA as XAIEND_METADATA};
// use crate::functions::callbacks::handle_xaistart_regex::{handle_xaistart_regex, POEM_FUNCTION_METADATA as XAISTART_METADATA};
// use crate::functions::callbacks::handle_raw_content_regex::{handle_raw_content_regex, POEM_FUNCTION_METADATA as RAW_CONTENT_METADATA};
// use crate::functions::callbacks::handle_got_it_ai_response_regex::{handle_got_it_ai_response_regex, POEM_FUNCTION_METADATA as GOT_IT_AI_RESPONSE_METADATA};
// use crate::functions::callbacks::handle_filename_index_emoji_regex::{handle_filename_index_emoji_regex, POEM_FUNCTION_METADATA as FILENAME_INDEX_EMOJI_METADATA};

pub fn register_new_callbacks(registry: &mut PoemFunctionRegistry) {
    // registry.insert(LIST_TITLE_METADATA.regex_entry.callback_function.clone(), (LIST_TITLE_METADATA, Box::new(handle_list_title_regex)));
    // registry.insert(LIST_DESCRIPTION_METADATA.regex_entry.callback_function.clone(), (LIST_DESCRIPTION_METADATA, Box::new(handle_list_description_regex)));
    // registry.insert(MEMES_METADATA.regex_entry.callback_function.clone(), (MEMES_METADATA, Box::new(handle_memes_regex)));
    // registry.insert(MEME_TEMPLATE_2_METADATA.regex_entry.callback_function.clone(), (MEME_TEMPLATE_2_METADATA, Box::new(handle_meme_template_2_regex)));
    // registry.insert(MEME_TEMPLATE_3_METADATA.regex_entry.callback_function.clone(), (MEME_TEMPLATE_3_METADATA, Box::new(handle_meme_template_3_regex)));
    // registry.insert(MEME_TEMPLATE_4_METADATA.regex_entry.callback_function.clone(), (MEME_TEMPLATE_4_METADATA, Box::new(handle_meme_template_4_regex)));
    // registry.insert(MEME_TEMPLATE_5_METADATA.regex_entry.callback_function.clone(), (MEME_TEMPLATE_5_METADATA, Box::new(handle_meme_template_5_regex)));
    // registry.insert(MEME_TEMPLATE_6_METADATA.regex_entry.callback_function.clone(), (MEME_TEMPLATE_6_METADATA, Box::new(handle_meme_template_6_regex)));
    // registry.insert(MEME_TEMPLATE_7_METADATA.regex_entry.callback_function.clone(), (MEME_TEMPLATE_7_METADATA, Box::new(handle_meme_template_7_regex)));
    // registry.insert(SUMMARY_FROM_PATTERN_METADATA.regex_entry.callback_function.clone(), (SUMMARY_FROM_PATTERN_METADATA, Box::new(handle_summary_from_pattern_regex)));
    // registry.insert(INDENTED_CONTENT_METADATA.regex_entry.callback_function.clone(), (INDENTED_CONTENT_METADATA, Box::new(handle_indented_content_regex)));
    // registry.insert(POEM_METADATA.regex_entry.callback_function.clone(), (POEM_METADATA, Box::new(handle_poem_regex)));
    // registry.insert(ART_METADATA.regex_entry.callback_function.clone(), (ART_METADATA, Box::new(handle_art_regex)));
    // registry.insert(DAY_METADATA.regex_entry.callback_function.clone(), (DAY_METADATA, Box::new(handle_day_regex)));
    // registry.insert(DESC_METADATA.regex_entry.callback_function.clone(), (DESC_METADATA, Box::new(handle_desc_regex)));
    // registry.insert(LORE_METADATA.regex_entry.callback_function.clone(), (LORE_METADATA, Box::new(handle_lore_regex)));
    // registry.insert(NFT_ID_METADATA.regex_entry.callback_function.clone(), (NFT_ID_METADATA, Box::new(handle_nft_id_regex)));
    // registry.insert(NUMEROLOGY_METADATA.regex_entry.callback_function.clone(), (NUMEROLOGY_METADATA, Box::new(handle_numerology_regex)));
    // registry.insert(TRAITS_METADATA.regex_entry.callback_function.clone(), (TRAITS_METADATA, Box::new(handle_traits_regex)));
    // registry.insert(CONTENT_HEADER_METADATA.regex_entry.callback_function.clone(), (CONTENT_HEADER_METADATA, Box::new(handle_content_header_regex)));
    // registry.insert(CONTENT_HEADER_2_METADATA.regex_entry.callback_function.clone(), (CONTENT_HEADER_2_METADATA, Box::new(handle_content_header_2_regex)));
    // registry.insert(CONTENT_HEADER_3_METADATA.regex_entry.callback_function.clone(), (CONTENT_HEADER_3_METADATA, Box::new(handle_content_header_3_regex)));
    // registry.insert(DESCRIPTION_RAW_METADATA.regex_entry.callback_function.clone(), (DESCRIPTION_RAW_METADATA, Box::new(handle_description_raw_regex)));
    // registry.insert(MEME_RAW_METADATA.regex_entry.callback_function.clone(), (MEME_RAW_METADATA, Box::new(handle_meme_raw_regex)));
    // registry.insert(CONCEPT_METADATA.regex_entry.callback_function.clone(), (CONCEPT_METADATA, Box::new(handle_concept_regex)));
    // registry.insert(DESCR_RAW_METADATA.regex_entry.callback_function.clone(), (DESCR_RAW_METADATA, Box::new(handle_descr_raw_regex)));
    // registry.insert(MOEMENT_METADATA.regex_entry.callback_function.clone(), (MOEMENT_METADATA, Box::new(handle_moement_regex)));
    // registry.insert(TITLE_RAW_METADATA.regex_entry.callback_function.clone(), (TITLE_RAW_METADATA, Box::new(handle_title_raw_regex)));
    // registry.insert(INDENT_2_CONTENT_METADATA.regex_entry.callback_function.clone(), (INDENT_2_CONTENT_METADATA, Box::new(handle_2indentcontent_regex)));
    // registry.insert(QUOTE_CONTENT_METADATA.regex_entry.callback_function.clone(), (QUOTE_CONTENT_METADATA, Box::new(handle_quote_content_regex)));
    // registry.insert(HEADER1_METADATA.regex_entry.callback_function.clone(), (HEADER1_METADATA, Box::new(handle_header1_regex)));
    // registry.insert(HEADER2_METADATA.regex_entry.callback_function.clone(), (HEADER2_METADATA, Box::new(handle_header2_regex)));
    // registry.insert(REV_METADATA.regex_entry.callback_function.clone(), (REV_METADATA, Box::new(handle_rev_regex)));
    // registry.insert(NAMED_FILE_METADATA.regex_entry.callback_function.clone(), (NAMED_FILE_METADATA, Box::new(handle_named_file_regex)));
    // registry.insert(REF_METADATA.regex_entry.callback_function.clone(), (REF_METADATA, Box::new(handle_ref_regex)));
    // registry.insert(LIST_METADATA.regex_entry.callback_function.clone(), (LIST_METADATA, Box::new(handle_list_regex)));
    // registry.insert(LIST2_METADATA.regex_entry.callback_function.clone(), (LIST2_METADATA, Box::new(handle_list2_regex)));
    // registry.insert(LIST3_METADATA.regex_entry.callback_function.clone(), (LIST3_METADATA, Box::new(handle_list3_regex)));
    // registry.insert(DESC_RAW_2_METADATA.regex_entry.callback_function.clone(), (DESC_RAW_2_METADATA, Box::new(handle_desc_raw_2_regex)));
    // registry.insert(XAIEND_METADATA.regex_entry.callback_function.clone(), (XAIEND_METADATA, Box::new(handle_xaiend_regex)));
    // registry.insert(XAISTART_METADATA.regex_entry.callback_function.clone(), (XAISTART_METADATA, Box::new(handle_xaistart_regex)));
    // registry.insert(RAW_CONTENT_METADATA.regex_entry.callback_function.clone(), (RAW_CONTENT_METADATA, Box::new(handle_raw_content_regex)));
    // registry.insert(GOT_IT_AI_RESPONSE_METADATA.regex_entry.callback_function.clone(), (GOT_IT_AI_RESPONSE_METADATA, Box::new(handle_got_it_ai_response_regex)));
    // registry.insert(FILENAME_INDEX_EMOJI_METADATA.regex_entry.callback_function.clone(), (FILENAME_INDEX_EMOJI_METADATA, Box::new(handle_filename_index_emoji_regex)));
}
