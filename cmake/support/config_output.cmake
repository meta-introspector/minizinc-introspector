message("\n----- MiniZinc build configuration ----")
if(BUILD_REF)
  set(STR_BUILD_REF "build ${BUILD_REF}")
endif()
message("MiniZinc version: ${libminizinc_VERSION} ${STR_BUILD_REF}")
message("Enabled drivers:")

if (TARGET minizinc_atlantis)
  get_property(ATLANTIS_INCLUDE_DIRS TARGET atlantis::atlantis PROPERTY INTERFACE_INCLUDE_DIRECTORIES)
  message("\tATLANTIS ${atlantis_VERSION}: ${ATLANTIS_INCLUDE_DIRS}")
endif()
if (TARGET minizinc_chuffed)
  message("\tCHUFFED ${chuffed_VERSION}: ${CHUFFED_INCLUDE_DIRS}")
endif()
if(TARGET minizinc_cplex)
  if(CPLEX_PLUGIN)
    message("\tCPLEX: (PLUGIN)")
  else()
    message("\tCPLEX ${CPLEX_VERSION}${STR_CPLEX_PLUGIN}: ${CPLEX_INCLUDE_DIRS}")
  endif()
endif()
if(TARGET minizinc_geas)
  message("\tGeas: ${GEAS_INCLUDE_DIRS}")
endif()
if(TARGET minizinc_gecode)
  message("\tGecode ${GECODE_VERSION}: ${GECODE_INCLUDE_DIRS}")
endif()
if(TARGET minizinc_gurobi)
  message("\tGurobi: (PLUGIN)")
endif()
if(TARGET minizinc_highs)
  if(HIGHS_PLUGIN)
    message("\tHiGHS: (PLUGIN)")
  else()
    message("\tHiGHS ${HIGHS_VERSION}: ${HIGHS_INCLUDE_DIRS}")
  endif()
endif()
if(TARGET minizinc_osicbc)
  message("\tOSICBC ${OSICBC_VERSION}: ${OSICBC_INCLUDE_DIRS}")
endif()
if(TARGET minizinc_scip)
	message("\tSCIP: (PLUGIN)")
endif()
if(TARGET minizinc_xpress)
	message("\tXPress: (PLUGIN)")
endif()
message("---------------------------------------\n")
