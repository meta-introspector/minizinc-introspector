# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
#
# When uploading crates to the registry Cargo will automatically
# "normalize" Cargo.toml files for maximal compatibility
# with all versions of Cargo and also rewrite `path` dependencies
# to registry (e.g., crates.io) dependencies.
#
# If you are reading this file be aware that the original Cargo.toml
# will likely look very different (and much more reasonable).
# See Cargo.toml.orig for the original contents.

[package]
edition = "2018"
rust-version = "1.64"
name = "ndarray"
version = "0.16.1"
authors = [
    'Ulrik Sverdrup "bluss"',
    "Jim Turner",
]
build = false
exclude = ["docgen/images/*"]
autobins = false
autoexamples = false
autotests = false
autobenches = false
description = "An n-dimensional array for general elements and for numerics. Lightweight array views and slicing; views support chunking and splitting."
documentation = "https://docs.rs/ndarray/"
readme = "README-crates.io.md"
keywords = [
    "array",
    "data-structure",
    "multidimensional",
    "matrix",
    "blas",
]
categories = [
    "data-structures",
    "science",
]
license = "MIT OR Apache-2.0"
repository = "https://github.com/rust-ndarray/ndarray"
resolver = "2"

[package.metadata.docs.rs]
features = ["docs"]

[package.metadata.release]
no-dev-version = true
tag-name = "{{version}}"

[profile.bench]
debug = 2

[profile.test.package.blas-tests]
opt-level = 2

[profile.test.package.numeric-tests]
opt-level = 2

[lib]
name = "ndarray"
path = "src/lib.rs"
test = true
bench = false

[[example]]
name = "axis_ops"
path = "examples/axis_ops.rs"

[[example]]
name = "bounds_check_elim"
path = "examples/bounds_check_elim.rs"

[[example]]
name = "column_standardize"
path = "examples/column_standardize.rs"

[[example]]
name = "convo"
path = "examples/convo.rs"

[[example]]
name = "life"
path = "examples/life.rs"

[[example]]
name = "rollaxis"
path = "examples/rollaxis.rs"

[[example]]
name = "sort-axis"
path = "examples/sort-axis.rs"

[[example]]
name = "type_conversion"
path = "examples/type_conversion.rs"

[[example]]
name = "zip_many"
path = "examples/zip_many.rs"

[[test]]
name = "append"
path = "tests/append.rs"

[[test]]
name = "array"
path = "tests/array.rs"

[[test]]
name = "array-construct"
path = "tests/array-construct.rs"

[[test]]
name = "assign"
path = "tests/assign.rs"

[[test]]
name = "azip"
path = "tests/azip.rs"

[[test]]
name = "broadcast"
path = "tests/broadcast.rs"

[[test]]
name = "clone"
path = "tests/clone.rs"

[[test]]
name = "complex"
path = "tests/complex.rs"

[[test]]
name = "dimension"
path = "tests/dimension.rs"

[[test]]
name = "format"
path = "tests/format.rs"

[[test]]
name = "higher_order_f"
path = "tests/higher_order_f.rs"

[[test]]
name = "indices"
path = "tests/indices.rs"

[[test]]
name = "into-ixdyn"
path = "tests/into-ixdyn.rs"

[[test]]
name = "iterator_chunks"
path = "tests/iterator_chunks.rs"

[[test]]
name = "iterators"
path = "tests/iterators.rs"

[[test]]
name = "ix0"
path = "tests/ix0.rs"

[[test]]
name = "ixdyn"
path = "tests/ixdyn.rs"

[[test]]
name = "numeric"
path = "tests/numeric.rs"

[[test]]
name = "oper"
path = "tests/oper.rs"

[[test]]
name = "par_azip"
path = "tests/par_azip.rs"

[[test]]
name = "par_rayon"
path = "tests/par_rayon.rs"

[[test]]
name = "par_zip"
path = "tests/par_zip.rs"

[[test]]
name = "raw_views"
path = "tests/raw_views.rs"

[[test]]
name = "reserve"
path = "tests/reserve.rs"

[[test]]
name = "reshape"
path = "tests/reshape.rs"

[[test]]
name = "s"
path = "tests/s.rs"

[[test]]
name = "stacking"
path = "tests/stacking.rs"

[[test]]
name = "views"
path = "tests/views.rs"

[[test]]
name = "windows"
path = "tests/windows.rs"

[[test]]
name = "zst"
path = "tests/zst.rs"

[[bench]]
name = "append"
path = "benches/append.rs"

[[bench]]
name = "bench1"
path = "benches/bench1.rs"

[[bench]]
name = "chunks"
path = "benches/chunks.rs"

[[bench]]
name = "construct"
path = "benches/construct.rs"

[[bench]]
name = "gemv_gemm"
path = "benches/gemv_gemm.rs"

[[bench]]
name = "higher-order"
path = "benches/higher-order.rs"

[[bench]]
name = "iter"
path = "benches/iter.rs"

[[bench]]
name = "numeric"
path = "benches/numeric.rs"

[[bench]]
name = "par_rayon"
path = "benches/par_rayon.rs"

[[bench]]
name = "reserve"
path = "benches/reserve.rs"

[[bench]]
name = "to_shape"
path = "benches/to_shape.rs"

[[bench]]
name = "zip"
path = "benches/zip.rs"

[dependencies.approx]
version = "0.5"
optional = true
default-features = false

[dependencies.cblas-sys]
version = "0.1.4"
optional = true
default-features = false

[dependencies.libc]
version = "0.2.82"
optional = true

[dependencies.matrixmultiply]
version = "0.3.2"
features = ["cgemm"]
default-features = false

[dependencies.num-complex]
version = "0.4"
default-features = false

[dependencies.num-integer]
version = "0.1.39"
default-features = false

[dependencies.num-traits]
version = "0.2"
default-features = false

[dependencies.rawpointer]
version = "0.2"

[dependencies.rayon]
version = "1.10.0"
optional = true

[dependencies.serde]
version = "1.0"
features = ["alloc"]
optional = true
default-features = false

[dev-dependencies.approx]
version = "0.5"
default-features = true

[dev-dependencies.defmac]
version = "0.2"

[dev-dependencies.itertools]
version = "0.13.0"
features = ["use_std"]
default-features = false

[dev-dependencies.quickcheck]
version = "1.0"
default-features = false

[features]
blas = [
    "dep:cblas-sys",
    "dep:libc",
]
default = ["std"]
docs = [
    "approx",
    "serde",
    "rayon",
]
matrixmultiply-threading = ["matrixmultiply/threading"]
portable-atomic-critical-section = ["portable-atomic/critical-section"]
rayon = [
    "dep:rayon",
    "std",
]
serde = ["dep:serde"]
serde-1 = ["dep:serde"]
std = [
    "num-traits/std",
    "matrixmultiply/std",
]
test = []

[target.'cfg(not(target_has_atomic = "ptr"))'.dependencies.portable-atomic]
version = "1.6.0"

[target.'cfg(not(target_has_atomic = "ptr"))'.dependencies.portable-atomic-util]
version = "0.2.0"
features = ["alloc"]
