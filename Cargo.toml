[workspace]
resolver = "3"
members = [
    "tools/minizinc_ffi",
    "tools/coverage_extractor",
    "crates/zos-bootstrap",
    "crates/constant_analyzer",
    "crates/constant_analyzer_macros",
#    "crates/minizinc_introspector", needs clang
    "crates/minizinc_macro",
    "crates/minizinc_macro_test",
    "doc_organizer",
    "doc_to_minizinc_data",
    "embedding_analyzer",
    "zos-bootstrap-main",
    "crates/minizinc_output_parser",
    "rust_lattice_project",
    "crates/rust_file_finder",
    #    "crates/zos-fast-query",
    "crates/ragit-string-utils",
    # "crates/vocabulary_dfa_generator",
    # "crates/vocabulary_dfa_lib",
    # "crates/dfa_tester",
    "crates/backpack_tool", "crates/code_search_tool",
    "vendor/hugging-face-dataset-validator-rust",
    "temp_parquet_inspector",
    "crates/poem_formatter",
    "crates/meme_site_generator",
#    "crates/fix_meme_yaml",
    "vendor/grex",
    "crates/poem_meme_formatter",
    "crates/regex_generator_tool",
    "crates/poem_yaml_fixer",
    "crates/poem_macros",
    "crates/poem_macro_impl",
    "crates/poem_macro_impl_test", "crates/poem_macro_test_crate", "crates/poem_traits", "crates/poem_archeologist",
    #"crates/poem_fixer_orchestrator",
    "regex_extractor", "crates/asciicast_processor", "crates/gemini_utils", "crates/kantspel_macros",
]

[patch.crates-io]
hf-dataset-validator = { path = "vendor/hugging-face-dataset-validator-rust" }
arrow-arith = { path = "vendor/arrow-arith-patched" }

[workspace.dependencies]
arrow = "56.0.0"
parquet = "56.0.0"

# --- Generated Documentation References ---
# This section provides links to key documentation generated during
# collaborative sessions with the Gemini CLI agent.
#
# Standard Operating Procedures (SOPs):
# - docs/sops/code_doc_update_sop.md
#
# Conceptual Designs:
# - docs/rust_link_verifier_design.md
# - docs/git_to_minizinc_data_tool_design.md
# - docs/gemini_self_model_integration_proposal.md
# - docs/deep_bootstrap_verification_strategy.md
#
# Conceptual Models & Discussions:
# - docs/program_recognition_and_uf.md
# - docs/spec_to_binary_path.md
# - docs/conversation_summary_and_vision.md
#
# MiniZinc Models:
# - combinatorial_topologies.mzn
# - development_path_optimizer.mzn
# - development_path_optimizer.dzn
# - universal_bootstrap_godel.mzn
# - universal_bootstrap_godel.dzn
# - deep_bootstrap_chain.mzn
# - deep_bootstrap_chain.dzn