use regex::Regex;

pub fn matches_sk(text: &str) -> bool {
    let pattern = r"^(sk1|sk2|sk3|sk4|sk_|sk_live_2|sk_or_000000000000000000000000000000000000000000000000|skal|skally|skateboard|skeeter|skeleton_height|skeptic|sketch_len|sketches_ddsketch|sketchy|skewed|skewed_function|skews|skgijmmiasmyosx8gmmu3h1mvq9wi0qqwditmm|ski|skid|skies|skiff|skillet|skim_integration|skimitem|skimitemreader|skimitemreceiver|skimoptions|skimoptionsbuilder|skinparam|skip1|skip2|skip_addr_of_ancestors|skip_allow_header|skip_any_corrupted_record|skip_attrs|skip_await|skip_blank_lines|skip_body|skip_boxed_slice_during_method_dispatch|skip_buf|skip_candidate|skip_char_and_emit|skip_chars|skip_checksum_check_in_selected_cargo_home_subdirs|skip_client_verification|skip_closure_parameter_hints|skip_closure_type_hints|skip_comment|skip_comment_or_unnamed|skip_connection|skip_const_eval|skip_constructor_and_enum_type_hints|skip_consts|skip_cursor|skip_data_layout|skip_data_opt|skip_default|skip_derive_types|skip_digits|skip_doc_comments|skip_docs|skip_during_method_dispatch|skip_eager|skip_exclusive_special_case|skip_ext|skip_extensions|skip_exts|skip_feature_verification|skip_feature_verify|skip_fee_check|skip_field|skip_fields_and_path|skip_filter|skip_first|skip_first_arg|skip_first_layer_pe|skip_first_n|skip_function_bodies|skip_gc_glob_profile|skip_git_repo_check|skip_glob_imports|skip_goal|skip_hash|skip_header|skip_health_check|skip_if_not_edition|skip_ignored|skip_ignored_dirs|skip_index_builder|skip_indices|skip_inference|skip_info|skip_item|skip_iter|skip_layer|skip_layers|skip_leader_slot|skip_len_44_pubkeys|skip_lifetimes|skip_local|skip_lowering|skip_merge_last_too_long|skip_merge_last_too_long2|skip_migration|skip_mir_stats|skip_missing|skip_mtime_check_in_selected_cargo_home_subdirs|skip_new_snapshot_check|skip_new_upgrade_authority_signer_check|skip_next|skip_next_arg|skip_next_if_tool_response|skip_non_compile_time_deps|skip_one|skip_op|skip_parameters|skip_params|skip_pointer|skip_pos|skip_pre_upgrade|skip_printing_tools|skip_probability|skip_propagated_check|skip_pub1|skip_pub_crate_pub|skip_pub_last|skip_pub_pub_crate|skip_pull_response_shred_version|skip_pull_shred_version|skip_push_message_shred_version|skip_quantize_tensors|skip_rate|skip_rate_len|skip_rate_sum|skip_rate_weighted_sum|skip_read|skip_reader_max_score|skip_rent_rewrites|skip_resolved_segment|skip_result_opt|skip_result_unopt|skip_rewrites|skip_rules|skip_sanity|skip_save_on_close|skip_seed_phrase_validation|skip_self|skip_serializer|skip_server_verification|skip_shred_version_counter|skip_shrink|skip_single_glob_import|skip_single_import|skip_skips_body|skip_slots_clone|skip_snapshot_tests|skip_space_until|skip_startup_ledger_verification|skip_steps|skip_tags|skip_targets|skip_this|skip_to_mod|skip_token|skip_tools_install|skip_trivial|skip_type_aliases|skip_unbounded|skip_until_id|skip_unused_imports|skip_wait_for_publish|skip_warmup_slots|skip_while_next_info|skip_whitespace|skip_write|skipable_dirs|skipanycorruptedrecord|skipboth|skipcandidate|skipfiles|skipfreq|skipgoal|skiping|skiplayerguidanceconfig|skipped_anonymous|skipped_block|skipped_dirs_in_dot_git|skipped_examples|skipped_files|skipped_files_in_dot_git|skipped_git_subdir|skipped_reason|skipped_reasons|skipped_rewrites|skipped_rewrites_num|skipped_rows|skipped_rule_count|skipped_shrink|skipped_slots|skipped_slots_info|skipped_unstaged|skippedfilecount|skippedreason|skippedrulecount|skippedslotsinfo|skippreflight|skiprate|skiprules|skips_in_record_field_pat_name|skips_remaining|skips_unbounded|skips_underscore|skipserializer|skipset|skiptycollector|skirt|skis|skrinks|sks4xgba|skulle|skunk|skvlbo1tt7eixt0ujvcqlsmxjnzlkikcbsgru7beubyhmnjkvrn9t)$";
    let re = Regex::new(pattern).unwrap();
    re.is_match(text)
}
