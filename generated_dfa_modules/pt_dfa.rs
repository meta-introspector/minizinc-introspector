use regex::Regex;

pub fn matches_pt(text: &str) -> bool {
    let pattern = r"^(pt0s|pt1|pt14h|pt1h|pt2|pt2m|pt6h30m|pt_12|pt_layout|pt_layout_ident|pt_metadata|ptarmigan|ptcurrentpos|ptd|ptex|pth_file|pthread_get_qos_class_np|pthread_getspecific|pthread_key_create|pthread_key_delete|pthread_key_t|pthread_set_qos_class_self_np|pthread_setschedparam|pthread_setschedprio|pthread_setspecific|ptk_sender|ptmintracksize|ptn|ptokenat|ptokenline|ptokenrangeto|ptokens|ptr3|ptr4|ptr_addr|ptr_align|ptr_alignment_type|ptr_arg_info|ptr_as_ptr_info|ptr_as_ref_unchecked|ptr_as_uninit|ptr_cast_add_auto_to_object|ptr_cast_constness_info|ptr_casted|ptr_constraint|ptr_copy|ptr_copy_nonoverlapping|ptr_data|ptr_eq_info|ptr_field_ident|ptr_guaranteed_cmp|ptr_hash|ptr_i32|ptr_internals|ptr_map|ptr_mask|ptr_mut|ptr_mut_bound|ptr_mut_val_bound|ptr_mutbl|ptr_of_array|ptr_offset_from|ptr_offset_from_unsigned|ptr_offset_with_cast_info|ptr_opt|ptr_ptr|ptr_read_unaligned|ptr_ref_bound|ptr_ref_val_bound|ptr_returning_fn|ptr_self|ptr_sized_integer|ptr_slice_from_raw_parts|ptr_slice_from_raw_parts_mut|ptr_snippet|ptr_str|ptr_sub_ptr|ptr_swap_nonoverlapping|ptr_tag|ptr_to_lookup|ptr_to_ptr_different_regions|ptr_to_trait_obj_add_auto|ptr_to_trait_obj_add_super_auto|ptr_to_trait_obj_ok|ptr_to_trait_obj_wrap_upcast|ptr_val_bound|ptr_write_unaligned|ptraddrcast|ptrarg|ptrargreplacement|ptrargresult|ptrconstu8|ptrmutu8|ptrptrcast|ptrtoptr|pts1|pts2|ptvopsrlkt9d6x3jvlmgqerkpi3k4t5bseo59djb7zrjvhzegoeqgoee9x|ptx_dash_kernel|ptxkernel|pty_options|pty_system|pty_tx|ptyprocessinfo|ptysize|ptywrite)$";
    let re = Regex::new(pattern).unwrap();
    re.is_match(text)
}
