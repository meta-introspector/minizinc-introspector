use regex::Regex;

pub fn matches_om(text: &str) -> bool {
    let pattern = r"^(oma|omac|omacr|omakase|ombre|omdat|ome|omeg|omega_token|omf|omg|omi|omic|omicr|omicro|omicron|omid|omin|ominu|ominus|omissions|omit_cast|omit_default_content_length|omit_default_content_type|omit_default_type_parameters|omit_expression|omit_gdb_pretty_printer_section|omit_history_entry|omit_lifetime|omit_verbose_types|omitfollowedcastreason|omits|omits_private_fields_pat|omitted_constraints|omitted_everything|omitted_lifetimes|omitted_type|omnivore|omodnrjsepbghqbsveji|omoycdvjzrjqpcfukbo4vw|omparraysectionexpr|ompatomicdirective|ompbarrierdirective|ompcanceldirective|ompcancellationpointdirective|ompcriticaldirective|ompdistributedirective|ompdistributeparallelfordirective|ompdistributeparallelforsimddirective|ompdistributesimddirective|ompflushdirective|ompfordirective|ompforsimddirective|ompmasterdirective|ompmastertaskloopdirective|ompmastertaskloopsimddirective|ompordereddirective|ompparalleldirective|ompparallelfordirective|ompparallelforsimddirective|ompparallelmasterdirective|ompparallelmastertaskloopdirective|ompparallelmastertaskloopsimddirective|ompparallelsectionsdirective|ompsectiondirective|ompsectionsdirective|ompsimddirective|ompsingledirective|omptargetdatadirective|omptargetdirective|omptargetenterdatadirective|omptargetexitdatadirective|omptargetparalleldirective|omptargetparallelfordirective|omptargetparallelforsimddirective|omptargetsimddirective|omptargetteamsdirective|omptargetteamsdistributedirective|omptargetteamsdistributeparallelfordirective|omptargetteamsdistributeparallelforsimddirective|omptargetteamsdistributesimddirective|omptargetupdatedirective|omptaskdirective|omptaskgroupdirective|omptaskloopdirective|omptaskloopsimddirective|omptaskwaitdirective|omptaskyielddirective|ompteamsdirective|ompteamsdistributedirective|ompteamsdistributeparallelfordirective|ompteamsdistributeparallelforsimddirective|ompteamsdistributesimddirective)$";
    let re = Regex::new(pattern).unwrap();
    re.is_match(text)
}
