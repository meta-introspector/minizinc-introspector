use regex::Regex;

pub fn matches_el(text: &str) -> bool {
    let pattern = r"^(el_padded|el_stem|el_to_sum_per_block|ela|elaborate_supertrait|elaborating|elaboration|elaborator|elapsed_event_time|elapsed_in_max_batch|elapsed_in_small_batch|elapsed_micros|elapsed_millis|elapsed_notifying|elapsed_notifying_us|elapsed_on_drop|elapsed_seconds_to_tokenize_all_sentences|elapsed_sending|elapsed_simulation_time|elapsed_store|elapsed_ticks|elapsed_time_millis|elapsed_us|elapsedondrop|elas|elastic_gumby|elastic_gumby_v2_chat|elastic_gumby_v2_job|elastic_net_2d_toy_example_works|elastic_net_diabetes_1_works_like_sklearn|elastic_net_diabetes_2_works_like_sklearn|elastic_net_mtl_penalty|elastic_net_mtl_penalty_works|elastic_net_multi_task_objective|elastic_net_objective|elastic_net_penalty|elastic_net_penalty_works|elastic_net_toy_example_works|elastic_unbounded_range|elasticgumby|elasticgumbyv2chat|elasticgumbyv2job|elasticnetparams|elasticnetparamsbase|elasticnetvalidparams|elasticnetvalidparamsbase|elbow|eldided|ele_len|elected|electing|election_vote|elections|electrical|electronics|electrons|elegance|elem_allocate|elem_count_round|elem_id|elem_ix|elem_loc|elem_min_one|elem_snippet|elem_type|elem_uid|eleme|element1|element2|element3|element4|element_|element_1|element_1ˇ|element_1ˇelement_2|element_2|element_arena|element_available_space|element_bg_from_elevation|element_config|element_container|element_coordinates|element_fn|element_height_in_lines|element_hidden|element_hovered|element_id_base|element_id_stack|element_index|element_input_handler|element_input_type|element_json|element_name|element_offset_stack|element_opacity|element_open_tag_node|element_origin|element_range|element_signature|element_state_key|element_states|element_types|element_update|element_value|element_width|element_wise_after|element_wise_before|element_wise_compute_node_key|element_wise_dependencies|element_wise_input|element_ˇelement_2|elementactive|elemental|elementbackground|elementclickedstate|elementcontainer|elementdisabled|elementdrawphase|elementexpansionresult|elementhover|elementobject|elements_after_first|elements_length|elements_per_line|elements_per_mini_block|elements_to_process|elements_to_remove|elements_to_sum|elements_vec|elementselected|elementstatebox|elementum|elementwise|elementwisecomputenodekey|elementˇ|elementˇelement|elems_from_buffer|elephant|elephas|eles|elese|elete|elevate|elevated_borderless|elevatedsurfacebackground|elevation_1|elevation_1_borderless|elevation_3_borderless|elevationbased|elevations|elevators|elevenlabs_provider|elevenlabs_response|elevenlabsword|elf_linux_dist|elf_magic_number|elf_new|elf_orig|elf_scalar|elf_vector|elf_x|elf_y|elfdump|elfgmag2|elfmag0|elfmag1|elfmag3|elgamal_ciphertext|elgamal_ciphertext_base64_str|elgamal_ciphertext_fromstr|elgamal_ciphertext_len|elgamal_ciphertext_max_base64_len|elgamal_keypair_0|elgamal_keypair_1|elgamal_keypair_2|elgamal_keypair_from_path|elgamal_keypair_from_seed_phrase|elgamal_keypair_from_source|elgamal_keypair_len|elgamal_keypair_name|elgamal_keypair_str|elgamal_pubkey_base64_str|elgamal_pubkey_fromstr|elgamal_pubkey_max_base64_len|elgamal_secret_key_len|elhistogram|eli|eliasfano|eliasfanobuilder|elidable|elidable_lifetime_names_info|elidable_lts|elidable_usages|elidables|elidableusage|elide_fn_lifetime|elide_lifetimes_annotations|elide_multi_anon_self_ret|elide_multi_anon_self_ret_out|elide_multi_in|elide_multi_in_out|elide_multi_named_self_ret|elide_multi_named_self_ret_out|elide_multi_static_self_ret|elide_multi_static_self_ret_out|elide_single_anon_static_ret|elide_single_argument_lambda_applications|elide_single_in|elide_single_in_anon_ret|elide_single_in_anon_ret_out|elide_single_in_out|elide_single_in_ret|elide_single_in_ret_out|elide_single_static_ret|elide_single_static_ret_out|elided_expl_self|elided_expl_self_tmp|elided_fn_decl|elided_generics|elided_input_named_output|elided_len|elided_lifetimes_in_associated_constant|elided_named_lifetimes|elided_not_bound|elided_range|elidelifetime|elidelifetimeresult|elider|elidesingleargumentlambdaapplications|elidible|elidibles|eligble|eligibility|eligible_condition|eligible_for_deactivate_delinquent|eligible_for_extended_trial|eligible_for_trial|eligible_range|eligiblearg|eliminate_zeros_us|elin|eline|elint|elinte|elinter|elinters|elision_range|elision_suggestions|elisions|elisp|elixir_lang|eliy9jb8itjhgkhjea|eliza_rs|elizarsplugin|elkhound|ella|ellas|elle|ellen|eller|elles|ellipse|ellipses_pos|ellipsesexpandervisitor|ellipsis_pattern|ellipsis_pos|ellipsisvertical|elliptical|ellipticcurve|ellos|elms|elp|elrw|els_arm|els_snip|els_str|elsd|elsdo|elsdot|else_before_if|else_bl|else_block_span|else_body_expr|else_check|else_clause_opt|else_closing_bracket|else_code|else_completion_after_if|else_desc|else_diverges|else_entry|else_fn|else_if|else_if_check|else_if_keyword_span|else_if_option|else_if_then|else_if_without_else_info|else_ifs|else_is_mac_call|else_keyword_span|else_lit|else_node|else_open_bracket|else_out|else_part|else_pat|else_range|else_replacement|else_return|else_search|else_snippet|else_span|else_str|else_target|else_ty|else_type|elsehwere|elseif|elses|elsif|első|elt_a|elt_b|elts|elu_bf16|elu_bf16_strided|elu_f16|elu_f16_strided|elu_f32|elu_f32_strided|elu_t|elu_x|elubackward|eluwithbackward|elég|elő|először|előtt|elˇ|elˇelement)$";
    let re = Regex::new(pattern).unwrap();
    re.is_match(text)
}
