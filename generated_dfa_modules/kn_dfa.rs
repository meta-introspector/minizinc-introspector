use regex::Regex;

pub fn matches_kn(text: &str) -> bool {
    let pattern = r"^(kname|knapsack_problem|knee|knitting|knockout|knockout_color|knockout_item_color|knockouticonname|knockouts|knot|knots|know_types|knowingly|knowledgator|knowledge_base|knowledge_base_type|knowledge_fragment|knowledgeadd|knowledgebases|knowledgecancel|knowledgecenter|knowledgeclear|knowledgefragment|knowledgeinformation|knowledgeremove|knowledgesearch|knowledgestore|knowledgeupdate|known_arch|known_cache_version|known_cfs|known_const_to_ast|known_consts|known_contracts|known_crate_types|known_env|known_external_command_descriptions|known_external_commands|known_external_desc|known_feature|known_features|known_full_snapshot_hash|known_full_snapshot_hashes|known_functions|known_globals_length|known_groups|known_host_and_revoked|known_host_files|known_host_without_port|known_host_works|known_hosts2|known_hosts_location|known_hosts_parse|known_hosts_path|known_implemented|known_incremental_hashes|known_incremental_snapshot_hash|known_incremental_snapshot_hashes|known_limitations|known_location|known_node|known_os|known_password|known_path|known_ptrs|known_related_bad_deps|known_relative_path|known_resources|known_root|known_safe_examples|known_slot_range|known_snapshot_hash|known_snapshot_hashes|known_symbols|known_thread_states|known_ty|known_uri|known_valid_scrutinee|known_validators_to_wait_for|known_vendor|known_version|known_versions|known_versions_by_extension_id|knownabsent|knownevent|knownfolderid|knownhost|knownhosterror|knownhostlinetype|knownhostlocation|knownhostscommand|knownlayout|knownsnapshothashes|knownvalidatorstowaitfor)$";
    let re = Regex::new(pattern).unwrap();
    re.is_match(text)
}
