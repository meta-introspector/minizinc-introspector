use regex::Regex;

pub fn matches_aw(text: &str) -> bool {
    let pattern = r"^(awa_vec|await_becomes_block|await_desugaring|await_desugaring_silent|await_expression|await_from_macro|await_from_macro_deep|await_holding_invalid|await_holding_invalid_type_info|await_holding_lock_info|await_holding_refcell_ref_info|await_in_async|await_in_async_block|await_in_complex_context|await_inside_async_block|await_inside_async_fn|await_inside_closure|await_inside_non_async_fn|await_kw|await_points|await_str|await_tool_response|awaitable_context|awaiter|awaitindex|awaiting_client_action|awaiting_ready|awaiting_sign_in_after_start|awaitingclientaction|awaken|awakens|awar5mabnpbvq4cvmebxwwe8caigqomc2chkwabh2b9v|awards|awarenesses|awarnings|awayfromzero|awbiyrbfts9gvx5uwukwv46htfp85pxcam8e8ir8hqtq|awc|awco|awcon|awconi|awconin|awconint|awe|awecbwmdawmdawmdawmdawmdawmdawmdawmdawmdawmdawmdgtl3dqh9|awehouqdqgaeubbzv4nerztpwfbq749|awesome_dep|awesome_function|awesome_variable|awi|awin|awint|awoo|aws_|aws_access_key_id|aws_account|aws_availability_zone|aws_availability_zone_id|aws_content_block_to_assistant_content|aws_content_block_to_user_content|aws_content_block_tool_to_user_content|aws_content_blocks|aws_converse_output_to_completion_response|aws_credentials|aws_document|aws_document_bytes|aws_document_to_value|aws_get_maps|aws_hostname|aws_http_client|aws_image|aws_image_bytes|aws_instance_id|aws_instance_type|aws_ipv4_local|aws_ipv4_public|aws_ipv6|aws_message|aws_operation_name|aws_public_hostname|aws_sdk_cognitoidentity|aws_sdk_sagemakerruntime|aws_secret_access_key|aws_service_name|aws_sigv4|aws_smith_runtime_api|aws_smith_types|aws_smithy_eventstream|aws_tool|aws_tool_to_rig_tool|aws_tool_to_unsupported_rig_tool|aws_tooling_user_agent|aws_ua_header|aws_unsupported_content_block_to_user_content|awsaccount|awsapps|awsclient|awscodecommit|awscompletionrequest|awsconnector|awsconnectorfuture|awsec2|awserrorcodeclassifier|awshttpconnector|awshttprequest|awsjson|awslabs|awslabscdkmcpserver|awsnumber|awssdkinvokemodelerror|awsuseragent)$";
    let re = Regex::new(pattern).unwrap();
    re.is_match(text)
}
