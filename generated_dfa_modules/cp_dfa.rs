use regex::Regex;

pub fn matches_cp(text: &str) -> bool {
    let pattern = r"^(cp_index|cp_sources|cpass|cpath|cpe|cpe_name|cpi_common|cpi_create_account|cpi_dupes|cpi_extend_bytes|cpi_mockup|cpi_program_id|cpi_program_name|cpiguardextension|cpiguardinstruction|cpis|cpkdqmspsazz8fvaouqtttwzkc8eeq7v3uj7dwz543rz|cplan|cpos|cpp_file_covered|cpp_file_names|cpp_file_path|cpp_language|cpp_search_paths|cpp_settings|cppdbg|cpple|cppreference|cppsettings|cprintln|cpsr_f|cpt5mknsrkq|cpu0_freq_mhz|cpu_bound_task|cpu_core_index|cpu_cores|cpu_cores_agent|cpu_count|cpu_device_trait_impl|cpu_freq_mhz|cpu_generic|cpu_has_blas|cpu_has_gpublas|cpu_intensive_task|cpu_limit|cpu_mesh|cpu_num|cpu_profiler|cpu_simd_avx2|cpu_simd_avx512|cpu_speed|cpu_state_idle|cpu_state_max|cpu_state_nice|cpu_state_system|cpu_state_user|cpu_storage_trait_impl|cpu_ticks|cpu_timer|cpu_verify_result|cpu_zeros|cpucores|cpuevent|cpuf16|cpuid|cpuid_cache|cpuid_cache_eax|cpuid_cache_ebx|cpuid_cache_ecx|cpuid_cache_edx|cpuid_empty|cpuid_extended_0|cpuid_extended_0_ebx|cpuid_extended_0_ecx|cpuid_extended_0_edx|cpuid_extended_1|cpuid_extended_1_eax|cpuid_manufacturer_ebx_amd|cpuid_manufacturer_ebx_intel|cpuid_manufacturer_ecx_amd|cpuid_manufacturer_ecx_intel|cpuid_manufacturer_edx_amd|cpuid_manufacturer_edx_intel|cpuid_mfr|cpuid_param_max_supported_value|cpuid_processor|cpuid_processor_eax|cpuid_processor_ebx|cpuid_processor_ecx|cpuid_processor_edx|cpuid_timer|cpuid_topology|cpuid_topology_eax|cpuid_topology_ebx|cpuid_topology_ecx|cpuid_topology_edx|cpuidparamvalue|cpuidresult|cpumanufacturer|cpuprofile|cpuprofile_frequency|cpurefreshkind|cpuspan|cpython)$";
    let re = Regex::new(pattern).unwrap();
    re.is_match(text)
}
